%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: A9R91CA.tmp.pdf
%%Creator: Adobe Acrobat 11.0.6
%%For: Yin
%%CreationDate: 2014/04/20, 18:49:32
%%BoundingBox: -1 0 533 170
%%HiResBoundingBox: 0 0 532.5390 169.5680
%%CropBox: 0 0 532.5390 169.5680
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1085 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2014-04-20T18:47:54+08:00"
   xmp:CreateDate="2014-04-20T18:47:54+08:00"
   xmp:MetadataDate="2014-04-20T18:47:53+08:00"
   xmp:CreatorTool="Acrobat PDFMaker 11 for PowerPoint"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:bf08b18b-65e6-419b-8ba4-df912811879a"
   xmpMM:InstanceID="uuid:1689b854-0950-4ff2-ade6-ccbdfb1902bd"
   pdf:Producer="Adobe PDF Library 11.0">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">静电力测量方案</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Yin Zhong</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
/0 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 50 
/Lookup <~
KE*+pL]A7lM#\=lMuXLkMuXOlNrT^kOT5mlP5l$lPQ2-mPQ2'kPlM-kPlM0lQ2h3kQ2h0jQiI?kR/dBj
RK*NlRK*HjRK*KkRfENjRfEQkS,`WkSH&ZjSH&]kScA`jScAckScA`jT)\ikT)\ikTE"rlTE"rlTE"rl
T`>&mT`>&mT`>&mT`>&mT`>&mU'CYuTaCc"Tb%2([K'&&U)*e0UDj15W%J&MW]C+[a"T+G[U9(8f4tQj
h,/V:lAD6_^TFR!~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -169.568 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-7.62939e-6 0 mo
-7.62939e-6 169.568 li
532.539 169.568 li
532.539 0 li
cp
clp
gsave
-.0953522 170.287 mo
532.905 170.287 li
532.905 -.712871 li
-.0953522 -.712871 li
-.0953522 170.287 li
clp
1.56 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
-26.0354 2.38705 mo
-26.0354 -69.6129 li
false sop
.704677 .130922 0 0 cmyk
@
.745174 .677241 .666712 .878813 cmyk
%ADOBeginSubsetFont: PBAAAA+MyriadPro-Cond Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+MyriadPro-Cond def
/FontInfo 7 dict dup begin
/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 69 /E put
dup 73 /I put
dup 76 /L put
dup 78 /N put
dup 80 /P put
dup 82 /R put
def
/FontBBox {-140 -250 970 935} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 243 249 484 495 650 661 674 686 692 703] def
/OtherBlues [-203 -192 -153 -147 -114 -108 257 263 411 417] def
/FamilyBlues [-11 -0 243 249 484 495 650 661 674 686 710 721] def
/FamilyOtherBlues [-209 -198 -153 -147 -121 -115 260 266 437 443] def
/BlueScale 0.0625 def
/BlueFuzz 0 def
/StdHW [58] def
/StdVW [77] def
/StemSnapV [77 80] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/C <1C60D8A8C9B726267667138AE26FE41D01B224714034151FD607DCB682FE
45DA49D9FF92C8BFC72C35037577DB5285C8F978CFA36C3EB3407BC7D6DBF652
2AEAAD0077B301B1B83A6F77AD826E0AD36C07> |-
/E <1C60D8A8C9B808988F382C51FFD68A2C596224D20C61BF362687769E1390
185B5B3BE5CF2DA636CEC1162D213457C6A4FED2A84A0C7892D5AD8FB56A> |-
/I <1C60D8A8C9B8A523FE5681AFD7E86ADEC6CF5278EA22D1E71CB19A2011B9
6C0D> |-
/L <1C60D8A8C9B812A878A356A460B10604E5C89DEEBA77F56A924306C623D8
5737B533BD> |-
/N <1C60D8A8C9B74A3EA4B54405D55E1A48CCD3A601450DF99026CF71516830
F754D19D5DB953A7521E3D09B340B727C95F5AF8B659B7745C4C6CDE4C49BFEE
7FEB50C12D8D30A89786C5848749AAB985DFA00DCC88F1DEF389D244F4B56F6A
6322D2DC5D0E0B574FA8F00F38A18C60F57884E87E1EDC29A2C6020DE0> |-
/P <1C60D8A8C9B70C39362E1A56AD240589AFF2AB2D79314F94CC139EF5B0C6
113D9D9D2C352D389A5C4A541C8702EC5B7B26EF2B612DFAE8B017D86CEDF359
8EC20CD099DC355BC0BCED4344BC3CAF9DAFC0EDA09AB24E67D33BFEAB4E67F0
D0FED8644FC1A9C1478526> |-
/R <1C60D8A8C9B70229071BAF9F47DB69C65E7A870FCABAFBCEAC8EDC084E5A
3C946A9F2D8BD1F5CC4A4EA3B016DD61D719832D8F0DF79BC8CBC2FFDF55E855
E5A36A24D0EDFF4241C97BD2C160A2AC13231711FDA50AD4C5A88EF298AA84A0
40120A716CCB45F425CB8225D2BACF0F0270B5785CA27E784F0D5530> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/PYNFHW+MyriadPro-Cond /PBAAAA+MyriadPro-Cond findfont ct_VMDictPut
/PYNFHW+MyriadPro-Cond*1 
[67{/.notdef}rp /C /.notdef /E 3{/.notdef}rp /I 2{/.notdef}rp /L 
/.notdef /N /.notdef /P /.notdef /R 173{/.notdef}rp]
PYNFHW+MyriadPro-Cond nf
PYNFHW+MyriadPro-Cond*1 [44.04 0 0 -44.04 0 0 ]msf
-3.41539 -19.033 mo
(PRINCIPLE)
[18.4793 18.9591 9.73306 21.4825 17.3959 9.73308 18.4793 16.0787 0 ]xsh
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: PYNFHX+MicrosoftYaHei-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (PYNFHX+MicrosoftYaHei-GBK-EUC-H)
%%Title: (PYNFHX+MicrosoftYaHei-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /PYNFHX+MicrosoftYaHei-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-158 -255 1270 1036} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 29425 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 53 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B62C65DACDD3E61AF5D2518AF4FCCCA2F29FAA41098F67948
C5544074B18B4> |
2994 <001C60D8A8C9B5EE31025B49503E9D6B56753862714EEBD17BD270603C
A4A05D3C3AB8EA46B061E66F57D7F85E827D2B98103E66C1D33065FDFFF92F46
CD143085B792AB7E3786B8EF15001ADDBDD24889225CCE538EB56311273926BD
1EECC27294F624987FF3FD878151875F8969B2AA1F6308F2D1D7F3C339E4E99A
A137128EF816B5840F1C4C9310BD2B5A5EF76053F47C9FE27C2917B4CD5DCC2B
257FA28E0AC73F2082A9D8A2AAD25E2D09D51488CC182EDE99BC69FADBD784C9
73BCE15419E179ABF93FDC40D5C9FAF201FDE09CB60D0F56DAB7806D8CD811A2
27B16FA7DFFD1B7BAEF76F5DC8FB04553A5DE433BFE1D7508B1666CCF5929EE2
C0A66A329121AB7556C1C00CBCB2FBFBA01FC656162A850D58804AD00B8B7C01
B6D40722F20789EDAA03BBB15C478C1E6E19964093D0FBBBC9206AF7E6202179
02AD> |
2308 <001C60D8A8C9B5EE3130A9775DBF2FFC56F88AD76ED1D6AA62443D014F
32FA413FF7399604B12DB1DC49B362B195ECB32EFC8E80F8F4FF911D64AC3804
B895FFFA1F2C15F582EF5FD0CC60CB810CAB4FB3C9B5372852BA19BA4BC0821D
870622FDDB6B7D169C220EC498B50A697EB757B3BB5C8A206490415FD955C729
06E6984E82292CEEDFA408921B2533D69CD725528E652CF6BCFE19EECEA0FD> |
1283 <001C60D8A8C9B5EE3130B0AFF41BB5375BF3045AA764DAACDF09F027CC
35BCC183B6EDC6DA029E1CF0A07F8BE7E7FD21414572D35B4E156FEE0AEB4DA6
BF47BDD3CD493DA3F3D56A7F46D31EED11C21B74F48B51F1FCA7EED8A7925C04
C2C2E0C8C7077B8D5C1AE0F9988F942DC34BF35EA14DA19A3E28F87A3EAC70E8
2A7EAAA522A9A54A50221FFD8595E202CD> |
1034 <001C60D8A8C9B5EE3103354C39FF4982A0153AF84B5E633A82ACDA3B89
B33CFC2B0941753825CF5161839530B888D7EE6B70FFB75B204AFF340FA2236C
AA0E46318EFB850CC86429E527CBFC5B31C94CCB9139E948DBD80204B791C264
27627372A6C674AF856754BD602210115CC292C8635E4667> |
1322 <001C60D8A8C9B5EE315379DAB834F293424644C7A3D319B03091068DA5
899BAD0A71A136C3299E16CA7FC8FA5EF1E942C1FB25841FE213CE2FDBAF913F
40F797C4244B969CC27F7092AA4862569C879830300003F7> |
2342 <001C60D8A8C9B5EE3153799D6876050F1D90A525A75E01926EBB378285
42D3BB9A59A54E8B89FA2A13A89CA0641945409D043B88EEBEB7E677CD96F411
6B6B05E3B3037FF8EA19F7182ABFF4ADC627641B08EA4E97DD79D400FC79AE23
F6AF8B78CBA9D34A742BE1DB13F2ED000C756228503297009A0EB5B6C50B8222
F74415F8914DFA833471D23704C37B8251B631A49BB862A4D00D0997711A81A7
66738FBD6EE4E47923028BCE74FFD828BAB362F9152D8FE1D420A1B1A0E9ACD8
F051CFDA653AECB6FDA38DEA9FE7FFBED2614F3E63B8D0F322119485146D788B
9355F8A32362D062FB6E302A379F6CEAA165CE65F687D0AD2C5E4339263498B7
E236ED44DEA05E> |
1877 <001C60D8A8C9B5EE31021486F7DC17BDEF1E6F0DC518E061CF6ABE102A
06A2F12D499C76DCB3E1DA50F85C2BE7F2806BA4837491CE91E0F7930CBE188E
314AE76A4022E6B8E40F902DEB7868B7A998721B25AF3D7A89850F9DC4BF5B19
69DF2A57EE3CC5CBBA4A0CFB69D55EF807F10EC74E160FC107CE2905CF0D3A46
62356D95C618DB0F3E1EBBDAB4F465004850BECC528A53FB70F1E8745B4F4111
6EB88FA1CD34119635C8C9B365D11FF30856DA15383E4D0C758B236264F3839D
366CBFBF6CADD5655461B41F6B6FBB1E30C4007BBCDC3E1B9EA09698C06ED824
16927459CCC34E57B7FC552CA92361BA757C8C6F9D200C729145E17E87E9ADD3
2CB9641D3E6B9A726643527CA8A5D42D2D2B50520C3B> |
1160 <001C60D8A8C9B5EE3103911BD876BDDF5386DBC0DA3CAEC095657643FE
8D3918DADF01C0CC0F069DC2BEAF39154BF10D21D566909AA45AAF45D74C6678
50FBA8577C8E3CC38B3DE7C4412030C8BE9F67976816099CB37407E1550B97A7
D2849ACF7170596ABB13FB7B29E72C446E00A7B34D0E7FB95D9426585B8BBBE5
81190031BA4B3CBFB2E7CAB8A6E0D91878B7AD4CAA57D1EFFD31E16550C2C147
2CE04FD65DAD6B72F8F16793D31FCB7FDDF8D03BAC159A315590> |
2329 <001C60D8A8C9B5EE313971AF16A9D016CB6FBB545B34DB845A61833B8F
C75195D0ED95C5766883688B94FD7FE38D345ED4277C72FB3ADD9491556E305C
D872DD552282DA3CE46F2150843D48DE5F925A92CE53B678B6BE2F3EE36047E2
19616855E3EB379B43F712B671D16AEE7AD029833A8A80D51E2F163189EFC83A
36B26D756613615006B98BA922E8E049DDEA687B44504BA31C669B4B40CA113C
A10567C12A9388A58583C8C4515F9491060D477C4D28DDC8BB25FBAEE529291C
C4181BF8DBD0EDA438C282AB04B9E1BF14D8> |
1909 <001C60D8A8C9B5EE315E9939D11F7AFC9687A71920380709E2FCD9C44C
3A22D73171B28C09C6B11C6866155C35751C8FA9CC327C0CFD6822307686ECF8
ED6A58056BA48BCA09D21B0E6D560F3ED13D373331372150B856EEF91720DE1A
17C87C8813AE8C3E6629670AFCCEA6776CD516068A223DCB0D105188165CD126
F7D4799423684F2EF4696F1BBEE8E8A9E4DFF5145FC77DC0> |
1844 <001C60D8A8C9B5EE31587EA392180603F7ECC9AD3B14D33F5CE8EFE439
85637ACC8DCF51C2920F9ACA34A24996F7D2935AC862208BCCBA8EDFA223D415
EF0F77A4F66907B95E452CDB4380487D31151E1744DA0D4B1E57038F632F1FE7
12671394B69AF9B4AC69BDF5C3DB9C846AD09CD8E755F75E13B912BCC7891D8C
53655FAD7F491160A89A1E6DD21A43B92EC7CF007ABB2E874AD9EA64A66DBD7B
3A8DB1B399660EEF31DA2A7CCFC022A307D48BF6ED76E73D740872DCB0708575
A40CD397571D7A899C6ECEF7AB4737F5638B1961885E0AF8C79A8E5B1B10593B
EF050D15869849729CD2207F9C697529BB8D491545911C322FDA5F6D44EE35F7> |
889 <001C60D8A8C9B5EE31026C8B47D5AB12492DDC1CF60371430855724DC00
A0038DCD716D10715587EC40235F681BAC9B5BB4C9415A5C45DA86B357034BF4
77EFCEFE5EB283995BE1FB2D8A2E48523FED9B2929506F65E5B0C2AB8516E924
805FCE3219A66B33BA2CD54F6247084BC0EC33BD815A7E543EE5456537358360
50432BA0A2798> |
1943 <001C60D8A8C9B5EE3150EE58A34FB6715145735E4E818125FFB263E65B
090943839A49E50C0F00BD463E945BD6D69B870A51B5343BEA170312FC699724
539AC49490691F37A2DDD0216893C8BB0E1FCA306043B35AC96EED6F24B7EE1B
317CAB6433B0B52708705D92BF0886F2854EAF6BA509105CBE3F2D655E0F3103
A35DD7347F25C530764AE0E95544062393C44F7989E0AD> |
2147 <001C60D8A8C9B5EE3103B0153C41C02D38755175F0839AED263086C26C
6A51C858D0D93C0FF4B187BCCBBB371C5D6544F44C8BE5B25A07904300ADDA62
B66106F3DC54B7CB1F5A5E7AA6D713A847A35840C8EAF85A01C54EDF696F7793
0344328C81EF5E7F21CC274791BBAC4445D6A99597652297720B1D7D5FF0A555
6D39B11735ACDD145588F96443B8602B8C547D07792F1D0313014140FA7C2076
6DDCD80C02B8A57C5033BAD3DDC0551681B67DC6D551F424BCD4BD7586767632
D7853700B585DC7B3953B30DC8AB44BCA8E5A0D7A9751D2EB2001C39AA4A6230
241340> |
2347 <001C60D8A8C9B5EE316419B76FD91537A55F17177BFFA4D5BE08B49A92
48391CF2E0338161DCA3795E3FA7430A4E8F63DA2D1E03BB4C698F600EF55703
4DF87680FC2D855403DFF261F759CF9558ECEC93ADB3A624538A43550056A0C5
48983F5BB56E9F76313536867F1CC24E1CD49F269A818C> |
1870 <001C60D8A8C9B5EE310DDDCF91A431D03A7AA6F725DF1A0DB0D6CBD3D9
9C324C2A107D6E5F0AF435AD56313CF968979E359681D49BD03EC1BED8463C1B
DE6B90DBE48FBFBA3BAA17C8AD7DA4BE6571336471FF71D5A8E22AC68E04D27C
755412ED4A408CF300E6E61D5350514602692A1F901DCBD80DC97F3B764ED6DF
000A53D2BA0B7540D713819B7376F173869AA0EB490F5DBFA9E20AAA63051973
EEE5421483962B61AD8567D6EB2B192990669833AD561252AC8A64DC7125FADA
F02FE74F316CC1CD91812EEFF79489E8C212C991C15E661789CA2799BD446C23
BCA8B2EDB8E93BA48F45D0B5D6BD5E2547F4756B76C361529E5736895986439C
DB3AF42F3CCD62E140B4B8E4F45AD6F712E086F59BDDA9F0746813495690FD29
21A7B341FB577A567AEC72C0BA51239AE3063F9C4316CD2FD634E2A3507EB593
13096E9F83CCD828499278B8FB85927B2F6DA769559A728100E87C9CB6> |
2169 <001C60D8A8C9B5EE314895AEA183635F036FAEBD396C108A9758E9EE97
C51103C1D027B5FE090E202EE7DD5CA99400EF1FF5234E1C87531C9AB52539B6
A9C272BCA881A95835B2D46B3CBD30D4589DCA2BF92F90853E753D2C7BAA1BA1
003757C71379198FB58881D25A832146E73F82AA80066E2D8A5BB64AB5DA9EF5
778CED013F946B36396BC7B2DD9D7402DF71372968C430D78C257B8F8EBB1835
0B3ACF238E9F507D56C21AD05DAD255FFD2DD7480D1CC8D994A398EE4F85DFD5
C95DE00ACA509E3763F7EA9F38BBFA4BFCC6BBC4493901F50C7F9575F0004561
ECA45344F565CFE9E35621EE91894C> |
2895 <001C60D8A8C9B5EE316789D4C1724DB92FE50C8E5603EB42C849688897
701274C93CBC0E29C3B47637253A60C1C588E5179C031467C03956D134E16BAC
EB72D034D10611ED7E1C7D6D4746A9CA24F2DBF3F49210F74A520F66D4BDEE4C
97653867B77E3D9811C5F422F57FE8FE3125217C7C774B5DF3F732E6E822E44A
17087E261ADD2D45A5E2C8545EB51215E8ECA70FFEC0936F5D57B99F1CFE41F5
7B21A454C9B0561356E42DFF8FDD3F1F73D57D83B0F759F79BBA7B625F6124BE> |
1327 <001C60D8A8C9B5EE310DBC6F59DAC0717D95CB55DC8B641EFBDCD275BC
57ABAE20F79CB8F30DF69110AEDF544AE8B3F8C652CB70E59B78E708E93A023B
17AE55205D9B7F2FC1CF9FBCA474FB9905BE1F477BA504DB1E5D43E6DB443CD9
25F06DF492042EC830EDF6E4E67B530AF5B47BCF7D1BEE5D5257F425EA4DDD5B
F60F4C1D00B3A2DBE4A699B9F4961619DE8DE1540D7EBEC8E41AE0838C3309EF
FF1C615116B17764B70B63DE6B619D> |
1585 <001C60D8A8C9B5EE310DE919A6A76A779EFAD2C8EBFA594BF14775A971
EB2B06A68FC061285EBD987D178A2D36348A0DD2C7372DA416ED70432B834C14
2538D273FABF0C9A608789F08CD8224029EC7542824436197D9F570A2F31B7DD
B590B08592D9CDDE24125440F53881284B91F093F493CDDACC64922C40D322E5
3F6D068EAC4EA71733B2B545E10602F8A399CA31502385F7F3DD4C9005905242
7C7C1D2972FCFC2DCEAE20D43BCF0E487E70CE8646A7AB10F5ED2938DBAC4FD6
DEC1556276DB93BED02C33679AB149D066B983CBD81EFEFE175181E27296A707
9FF74C60A1C929E1C21B6CAB2DD2A1C4485436B69ED1BC38197936C3B9> |
2573 <001C60D8A8C9B5EE310273EF4508500F24EEFB517A7D17522B699E9627
CEABA711F3B43671274DD1DAB310B98D76245F60BD4A0A4FAC43A0F91C862DB8
BD26227A552A855FF54156810751AFDA80A50B24484F1261B1A10F5B43D57918
BD2C1ABCA9A11E51EDEE62975D9C7726BB4ABD9AB6EE90D4CBAA78863A7C134C
356532EB9D4C445CA9715A95397FD57DDB45CDEE390194D6763153E4C485982F
71801FC1B01B4200771955E537FA22EA396EA6DEEE21720EFEBDDB6D95B7A2DC
180BE27C2CF8C1C374C4FAA06248A443D0EE0F5C94855D129045C3F40E61B710
4A95E5372BDB408D0E84E46F925DC4050BE8993A41AC58D23E5B21E5083046F7
7A8681949FDDA91495ACFCF2176F174CF9B03A5D1CB1E7CA1B7448DB619D46F3
51A7E7> |
2957 <001C60D8A8C9B5EE310D960BFCFF5583901C7FB44422529A7B09CEABC4
EC55BACB85722C22862358EE486623F63014D7FC52C9A5F617FC0B284D9F8FFB
14DB3F63179E742BF65A3EE88F468B2FA9C41F708D2F6C5FE14D9BEF33C13B2E
139E703ADC1DA8EE6F74CC2A3327B26618F5D3D133EF719574F3859127345079
01D96DC120B53B4D8335282F43D69F9EFF02D97787CD4F526609B82E1CD64D47
1B23F2BE80D610E1B22C16A0C5A8CA3F129FBB02640BF0B06C99C5FB69E1BEAA
83F20F0331EDBD2AE3E837510A6BB3F897F0863257D7DE01E5AD205739AFAAB7
484DB601204EEBB70E3781E2671B5F39D538CEAAE6> |
1950 <001C60D8A8C9B5EE313B61E31CD142D7F8DC86B04D964793DA0A08DB1F
0E04A243F6D5901E8E8A5B9D9086A5789ACA5A152A6D845979AEDBABD3B67967
AFE4D5D38D383C3E7B45B784B2934ED0D8668D2F7D70E89B522D0FFDD3A11B6D
65011C91C27D40C288759F2F8B3159E1680F3D3CE39F86B2A67D6DEF1F6118D1
4F92F2DD6EFD874279170D71C068C691CD8563D0F6F1760668D00216> |
875 <001C60D8A8C9B5EE310250283858D1E8B9D3A49B9EFA528D4A20> |
1365 <001C60D8A8C9B5EE310D1C4D5FEA692F5F993A3E4AAEA69757757EA575
DD75C36FB95FFB391D5DE4E371EAE51C2A7CBA539B585A83F9770E530C6BAD06
0DB69E03EA59FBD26E9DB88DFAD8DA978C3FFA41606C7660D1BB3360F4F39BEB
D1CB3AB81E76> |
2943 <001C60D8A8C9B5EE310DB8FBA547EC8B5FCFCF9399CDA3CAA5233204B8
CB017BCF6452BEB68A4941A5A8E8A1129A694AFC6354BF77BB76A65CF98F736D
35611BA70D700CA2035479FFB600876983FADF3506881B7BF308CCEF46AA6EBB
9A6273561AA032E83DF949A1E58878EE27B79FE73EA8D5AD9B88E8E333A1D016
BE11CFA34D8990A4D09BDE122427D140D2BB90F4> |
2858 <001C60D8A8C9B5EE310218409B41594B5868F4188F964E31301588CFB1
CF6DE20036BB067ADFCA73E17BE4C5B431BCDB5D960265B1E2A5F13E7BA72C11
E3D230F210F2D9FFD8EC0B8AA25389BCF660D99F1B50846BDD5467A35C8D2835
DA568AFE4B6B74F3E1DFC5D709C4CA05C3EB1438DFCD4D25F14270BB179AEBD2
1331C992FC3FD4E2B90E38CEA24D834B2FFC7CFA10A7EFA802928DF15DA4A658
B0FEB13971CFA57D525D6A63BEBAB51DA240F9DD1686729317A114113FDA4A9A
D0D84D0F69B6F83E6678DA355EAF556EA584602D5FF60583D1E70D6F657D0527
3495DDDCB93319A3693AECDFD00BB695A31FB305063B8536C1A85F69F45D42F1
27387FEB986A1E8AFF67332E8F8A4A33EC> |
2827 <001C60D8A8C9B5EE310DC8BD97A44BC950935669E2AB50C2D286A14ADA
0B3A3B817A27F38F1C83307E15CB027AC601662888DD4A14EED020B2FA806580
B5D45B421B9A4084AA7F462E941C82309B06596B8CAB3545F3A9DE552685790E
4206E9E5952514E6ECDC9328EE1B696498A7C3C64A7073C9242475C82AA58522
11922F0F6FE20435143E599B6311EBD925CF53CD981EB2C7AD295D352DD8C83E
7D1C239D51B3DE0B6068BAB81CF2D45B03ECB9BA4623D7892265EAF3EDA1C22C
3096EA966CE64F62EC1115F0C7> |
1653 <001C60D8A8C9B5EE315FD9075CEB8D2939EB0B6EAD08AEEA803B80BC91
8626C0D02E51C3B6138F2AD795591CF7E05A90BB06E6AA0D0CAE384E98E9C3F8
D20471B51EF06745E7030D5815E7C7D4263B1EE4A9725D9728EAC4732EBF8F5D
24C53F242D98524F0993> |
2667 <001C60D8A8C9B5EE310DAAEC93A18E8E7E30C2258B37C04FFA51301983
C86D0780CBABE9732634BA32B0E9DA111694A22B95A03B7467A46C4C99BC9FB3
2EE0B142A4FE971C52CEFF200D7139C20A2FFEAE52BEE8111D01A2C3739FE681
CB83E03D8D8B07AB960A94FE372EF58AEDD4924AE97C24EE635F9C46D272A5CC
3F427FDC474FF9FACB0B1B89B1742872B8C75DA1E21E54F078D27B9F8447C2F8
FB53546BF8DF97A84C7DA65FB724C83327562EDB430289E5E0BC33EC566426B3
D0C3C777D507B9C39E78BDFDAC0C60127EF1E3775DACEBE7AE17156506B03897
AAEA68A27B990940F67C974EEE1CFAB6FA3FBF9B31AFB5B1333064BE26919265
96CB185C67ED4FF08EBF8855E629452DBC75E5D9481B84CE7067A2FB51B379BB
6DB7629ECCC163FCC5AF2D6D84A46FEB16E86116003F062A360BE739686328A1
E4BD60B1AB51E05FE3F22C300B0D6051FD376E38FC4B9E25CEFAA487477D6FB5
2AC51A4A09BAAF4371408B841A751CF828BE6A> |
1936 <001C60D8A8C9B5EE3153792AD752438944C9D6C885D96D71A95E23A575
11B99BDD8CEE814A30745E76CAD5A0639CE33E87D25BDA122612EAFB20D7E440
0FBE4C10461387F09AC49DABC3D7E31A99D9CAEAA9FA91B8B5CB58718B4F1320
4759ED7BE53E9135652B4735C13F99B538C112B5F6987B4EBB7BE6EB9182008C
4742E793DE475A84B6B29AF64E75BDB7A5DEE22A6509C8ECC30BF3> |
2409 <001C60D8A8C9B5EE310273E0E7A7345366FB83E2C110E8F870A9537078
74DCDE80F16799F7568953B60450D622059392511AAAD301A60B9C77544EA11F
B8D0F6038487412288A979B69FB867251527BDFCD9F4AF35365908A02E6B9801
FE22390AE9241505863931F9139B2E3A0350ACDF819AAE3B98EC5C909C175307
F03E4713DAB0E4B65B1C30C65C3BC58410D25EBCA358233FFD6EAD5C3626FF81
36833AFD86EA8131C027D6B1C73B358729675E308B9E0CFA15BF72373DF42F5B
741AA5F940F5F6D593F3FFFA0D85DF85105667F32F34774C62A4AF4BA5DB5433
EF1D> |
2124 <001C60D8A8C9B5EE3154A891733F826C2B0E1F772A4A9850AC6F515013
8AFCC0F5A9ECB69DDB936C412603F7C8EC7E2BC8C43B771A49AF93BF409B1C69
56BE19D25F02A8F69A86C17623E2E0F610056E7EB11785D1BCB460F3CE685389
2641FDBF684C0A61113425D0E02F39594B94C83AE68EF4D55D0CAF3CBEE41B2F
28313E4ACB43B5C8F874039178C7BBEC153640D3027950CC2184A2284C6F9D4F
A54330B19142086B74D386B73F1D923E4E3C3163F183DD8710F5DCC528A324B5
F831E3108C5827F60A3D5FC474D36F> |
1713 <001C60D8A8C9B5EE310211EA87010840B6C29259739DB15CD7AE3E2898
7BC611648B32AEF985F27E5784D71F7822394A5403B1147E93292CB63FE99EAA
C8EA68D18117CF781DB8F149DC3B45FAEB9C328C43D7F87C15E79181FC37D811
622625BA5226398F63023B48254A4E7865867B2CA22F4759458AB602CB0A1080
FE575E1CCEC355F1EE36D5439FCB91C88235B185737A8D1E91649AC5D4DB8DE5
8EE13E021F5734BFC7870FFE66A609F4334F25547917B5F265AD4AFE740DC630
9A19B5DA137B5516FF8179A30E6A15F3A38AC6A57A98AF0E805593077B707784
D972DD3DDE2B9270017A03753D62A97D> |
1266 <001C60D8A8C9B5EE310DB14098B3AC7C27A8F0F4F375CBE14DBFB4FADE
B04738D5A1D454795F9B2343D95A8CB4FD1FE1DE24ADED79945596DEAB3224DF
318F72FDAC58651615A9DF82BAD92634E20C253566811561AE0759600285DF90
A4811D291C92E73F0EFE978521CB0DFB6CC3651B9F4EAF05233A6FDA9A57F3C7
560B40FDF71762DE1ADA8EF7C55BC39A26EE6642E732DB23319DE7E1E58B1BC9
ABEE1C644AB03C0E77F4623E848A59CE691DEE2D1518F54841892DCBDED88249
47DDE0478ABFA1E90672B76AF8146AC51B97D3D5E9FD9A06> |
2861 <001C60D8A8C9B5EE31023EF31F87A2F4CC05F5CAEC9532310525A9474E
D352422A07241D5654C3F60A52AFAD2EA3AA14A40A08B06B97069357E1DD5398
436C9030F6B330CF2BDE2B24AFD94A419DF0CA82C62D83793836927D6AFDE041
6B7F0C712727CF1191A6BC63DB1868D489DCB512BC2B6AE52121891F3AA1E069
A4E1B73B128FA118B7101A104DA8EE568E811F048647029A4A6BA0D33F3856D2
CD5739F15326973CAC6CAB058BB4AC6184C010B03A9C079CFE104184CCADFE2F
1D0CBDF61AFF7E527FD3AD71D37E76E7294A8129A35C504291E67518> |
2010 <001C60D8A8C9B5EE310D062E6E756149DC5CA66748DD42FEE03F8B16A6
1BE7D1A01E3B397EC301F949AE7161E68935079969196E8D1600627E645E3DB6
9B8F654D07F8B4B960ABB5A7E8A5C3E5146A62E2B19D61667976BF5724288A55
FEBA841F5B7CAC837B0090015CA117BC3D528FE50A532905394EC1C01A02F08D
C54262008F5FF16203DB0818B65FD0715F601532A14E6FACB0313694F4B7DF68
24F386DF55EB6900746A1DF71EBA199C04B26115F768AA14D7F75B287C6BFD70
F9CB7AEBD987381343E5E46FE401A21935AD398477C23F6C1A1C6EAAF2758FB3
7F09CFC22FBF40671C15E7C9CC093D5D968F13A8349ED2B02ACE21F23244774F
1ECBDABF7C> |
1118 <001C60D8A8C9B5EE310DCA157EB8105C7F1985902EEC9897465933D170
4E215786102C8031E94E2EFA6548CEB922D57516288D2E8ABD1B80609BCDF78C
1AD0DDF1850690F802689BE8E07E3215BB07C09018E6DC31E47956FC82989BF5
458A5F1A96913D7E2DF7D96F69B386E41BF593B84B4CD7C4AB00CC3FA0C393FD
1CF5DA77D18FB9B49F761B080E9AD7EF5DFFB9866CFC> |
3044 <001C60D8A8C9B5EE310D4063B54C28C4BF6717E3F7FD928AB359F4F2AA
E319319A02C0396FF755E71AD769003AFCB10AE61E21A5EC09317B179994F6ED
32978F6800F6A2124DAABF08B113DCE051A181AB1470D3FC2EFD7D2C65F88C45
3B538571CD019A9EA9F6C72735FCEEC5F0D443FC26845A04F092EAAD740284C8
4B7553FFE152B3E428C0FD505C74C9DA1088144186B1A1A03902CAAA5F688F37
BBA88A1B955BAB95> |
2120 <001C60D8A8C9B5EE3103911463C739EC578635FE900AE6F8A63B3AC702
8EC6F035A49D47235DE78500A09015B2112A47842121B15914373CC4E3F0D09C
BE6B3C2F8316F8986C04B327B7A242EC85D61DFBA1BC27685DFDAF4A180455F3
9FD1D6D1722F9551488CAC8678DCB659E01599BF98EC678025B6F91B9B8A6853
858002D382FA7D11AC0B631A9995F80045AB1F39B3> |
1337 <001C60D8A8C9B5EE310D667CC70D465F8B5A5154CDCC865FC977E2022F
70452A079C441E0FF475EF5DCF68113E2280205F31F35287AC709626780528D0
0CC386C601C9845C8CFAC3CFF90E5CD5680F86005546D6761AD01D2172B8E339
99683B2F6AA0D0A363B943E7A48814303AB90DC7E7D197960C85D2DA1AA6B383
933A16847E63BFD12E2E> |
2961 <001C60D8A8C9B5EE3102197EF6423882A60D9DB57FC939DCD793466885
E15306FA5D48A0F837FAE95D43EE4C22775A04C4D81EF2D96A13A74F748D653E
9393FBF068BA0A35DB45EFCBCD1128535C36344C3ECF354B9C5E72E072B38819
784B18810C8498CAFB978CAE3C75270F3D97FFA1FFF5ECBE0A7546A1D12871E9
5C09B9117D23556D50EEB4033D44D0413138EE0BFF185183366B7D7B42E9DD12
7251B199CFFB31F83942CCD2C031229A2D36B1857AAEE49F5D2D31F2FCE80312
4B6A86F5773462725DA20C96B3B2A319242E517AEA3ECCED438DBCAA3F4834FA
E81C36B0F19F7D6A2ABB498516C63738A1C3209D5E285C553957AF47D91AD7EE
C1C626B18549F4639C2B0EB156076CF3291AAE97682AD5A9EB7D1DAB3F3BF7> |
1146 <001C60D8A8C9B5EE310DF844AFF9BF79D83951B5316B84935FD27ED520
47E158221F0BE53DAA0B9321DAE89076A9618247A742D9D5919D9835CD9A87B8
CB008F0C2E40F183B41246E793BAAFA9FDD260501BF8F9851FE2DECB28E3625A
E9D6116F481FF0A0C035E09889FA6CC6F885E0E9C541F6D6097EEEC5314E473A
22D02B333BDCF267EAF13DB16583B88193F7883CB7A33CEC24582A129501D1A4
D71B3CB17A2D2DA148F49B37D5EFF8E8F441ED99EBF37984B762F4C099A88E3E
7AF48F8A381047B678519FFE5AD9DC89E3BDFBF04DEE7F000802C10A47FDDAE8
89FD2FCA7E14F2ADB0605DA676CC681A58A7C4CFC9947F89D6366652272C653B> |
2066 <001C60D8A8C9B5EE314D5CDC759B6879D94C7F5843324DF133346F33C2
2176F823821C2360C00A4878CA29A34702B30B50B4C03B26C0540917E1744977
0EAE878365535A1AC68A59D8EB528C5ED63FC792CB983281604303507337CBCE
7371B574F97F1AA9683686C83B50554050E995F28468A81E30428403AD7688FF
AC73A3DEBE32D9761EB2CC5E9C0DE620258F14C63AC07100521FF5923C418257
FD95EEC2B6E2B12B767FDD78C32D04527668AC4F08EF1AC520094429B32C6736
D84AD89F3B3BED6309C31453372E73B84E260BCA1B7637D222BA065F89E1FBEE
50F088C882783477463552563E7B51646F3337602619E9D546AF8C4FDB9B76DF
7EE095> |
1145 <001C60D8A8C9B5EE310DA40461FEAE5743DDD0CBC6541EE316CE293202
72492A3192B8186FF9FE8A6B5687DCBD0B9EC0881D1C783B08BCB3E97C7DDA42
6E97753171218FBC56D7EC12A45FC6D8C62D7241456F699EB9E731B8D3B2ADC4
52E3D4145FAF5FA7D3CF0D793E633A5859ED8F2BF2FD81301D8E2761784D36A7
C760E65DC9DD9B8BED00BFB0531868DD501A4204B1E630B27DE40748279BA617
5B78D58E13> |
2407 <001C60D8A8C9B5EE310211A92F34B6E6A8C486A559644B0A38CFAD6FE3
13075FFBA911FF97C69AE053025FE4907961444601B71972B189BE542495B5C1
A4FD864E39929FC6F2C3E8F7FD77D2DCA30345785DF6CE2D7155F71629C67281
6364E8B61097F312FC078964DCAEC0D9EE7CA11D1CBCE9399F6C07D2EC4E8C80
E54122DCA54F1CB0CCFDF613352717BFD2D079114B19B517AC61D7922FD0C22A
E8E06435B4B9E373755A63830EB55668C91AA8F7DF4D166A17E69D9492D93600
07E1939D4C83BEA69E4A8159D0C74FDE547E03A2EA9F1F862E1C12B0BA779B31
591447F1D37602B70735B35989F1274EFC65F93622CDC0462561893A42F7E92B
1EC19BD2FE8BD7CFBCC167BB6A5069E3DADCC7BDAC6A46667B9148F7EF1BFEE0
F696A100535FF5BC9CA80A0B8BBA8C3949EB72AC6ADEBDDB80> |
1149 <001C60D8A8C9B5EE3103A5FC6BE6D73A4C45E6DED2225016A99E9A5A35
7364EFBCEBE759F112CA0A3DBA2D90BAB5C59494FABA6ACAF4340F2D141F82E7
98C0D71CC1384223074CB666BC81A3962BADD279D22A4C6A904CA4C6ABFD7944
F52986FCFF70F33203AC4068E693942629D19D9CE380CAB4FA2BE867D40B4552
8A2EA03BC9B3731B0A3BD67A4BE4E9EC5C7C8EAE08A3686A3887E941999EDE49
0C1A7964EDDB5D7D1EF26D7C51A35466E26BA0> |
2166 <001C60D8A8C9B5EE310398705D3683A9D9431E5DA81DA815EE2722871C
4D1F48C3F383A9B06CCF72FD7DA1851CBB788FA369A5C0266B1F6D903A635A56
6FE6A64EBFFB265D1DCBCB5C9A93A90600286E184D5298717EA541D49053370C
C6211385A5F7AE06F26EECA3D73D96F231980D59313013C6F723C47F9A1E0322
D13BAFF8BADFDE29A26056057B70C3C4B72C8561DAF9F148958F3F00302FDBC9
A7142BCD97096CC572AEAF897E533408B1CC4AAF194C70C21B11B30FEC53FB18
7B0091685EFD58C7AB6705C1CA8EEDFA0D64F07A7C63621E73A3A34FA4234B6D
8D105E215A96DAE1DE9A2F123BD28557D8949EBC99DE78B335DDC5DF5D8A8320
CF6157140885535A717371728F6B281BA7D23D764BAD5E862069F9D85EA3426E
E674F9114FF01197EF186429004854D8C4FCAAA93CF11A0BC5D414EB45507896
443AD1D9FA3153961589BE4A70FFE02B1C33DB> |
2419 <001C60D8A8C9B5EE312A89EF9F353F7BC0A97F076027924E8FC6D03EDA
7840E268D65C70F348FD9E11EF25D4B08DEBA9ED6F494FC58348AB7966B7DB2B
35E26EDC9C7B94D4A2D67218CF17CE95E04C2C24839C8C4C97829DD2EC8E540F
CD848FF4BA5408A7EFAE9981098A9130CFBA5A3B8E47ED198656462D7140D692
173E3A671C8AF66D45C967DF9C6C56D4F3AA20EB034A20F20335CA5BDC5F4E69
7FB4220353BA0E9C032C9173B70785FCA5B806F0C0B4813FAC872B96D3DCE280
D7143431B7F97D653FF8F32EC77CDFCE0DAD30BFBDAFBEFBE7A54FB8518FCF66
D1513792EA2484C517215ECD9283B5> |
1485 <001C60D8A8C9B5EE310DE55011D39D42EFA7D9BE4A2B5D1A65363B2A88
BDF9E30A8246FC36507DB7C0D232C460804F5F8751A4EA5F1EC8FD068394C52D
1C762188EAE0A972C2B62A0EC01480688F7AC75D78381E2AE0A475F2DE1B483D
F909A986B634B59012642AA947EF6AB810640E8011C0B4FCC785DED93E6FFB18
3D56782F13BAE0B8D1B4C91D473DAEB622168BCCE94FC9487B6F2651C8B42FC3
E235B4E0735DEB64C390331AD3B1E9BF6BE522CDEC964610FE850DF895B73BDC
93FCAF2562C90043F824A52EB0FA98E965F7A5BA1A9B30ED6239E7F455BA2E19
707DC77682D81567B72A70AFBAC590D5CC72009F95E5D464CF9E61662436C7E4
BCAEB2519B365EF81EFDB3D199> |
1696 <001C60D8A8C9B5EE3103126DE68C8BD20828A40A7728819585ED2A02CA
6D173F34D6E54E313CCABD4B3ACB5B17BBD9ECDF8EB8E45E949E087BFFAB32EE
FE465D226363B0504038860946C99D064A67B4E9F93210A83F21E125AA832CBB
3AB6FC1DF40E0A81C9D9DE5AF17DA6D8F81536FDCE6E8AB35D1FC2A094F75617
0972FA199B1C362BB0FE99B946B73CF8BCBF843F30ABE05A84C883A460914EEF
2EA30CA87DB355D1449D57D66CA0474FAB26130F21A0CA8661D384AC5F277B10
E6C505A30662909058D3216F0166AFE07F44C3F32EF32DDAE103B4FC5A42EF36
366E5722DEB3AB7FEED470C6CDA60BC86F68DEEDE75C58AA93322A80BF018ED9
23518702> |
1239 <001C60D8A8C9B5EE3102D9AC47949B4834D248F54A501AC7B14C7AD1A4
5D72DF3B705C2FF109C3910B7C6F3FB7C7C003861DB673F3A444D05433C8A240
5B1610AB16F24D2D5FDE70D9F7FB7FFFEFDADD9213C62AB88138C26B0F2AF487
54E023BFBF651F3F11539C80F85049BC8ACAC0B395B6FF93056B558EB709F49D
B222882420C133BD93708537EEB66B1E243AD9A9114B94BA58D99BE9829FE9EE
C906B135C7E8E6E83A85D4A829E1B3341C65D719404A87F571B3D0468BB43FBF
0BC945CD09E162C3F06E359EAAA84576CA99B64BE82B0B02C9FB438005AEF82C
EE596D439718B25379F27E079B926B9D22FAB2803059A5AC05316D678995D7BB
5F5A588E80ABD7202B0023603484C1FFC31D1B5077C76D7B5AA18745CB771E1A
34D625674417AEEE724825B83E017C3B1960EE9D0BAE974E5E0C109D205FD872
AB7AE7DB0BF83F> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /PYNFHX+MicrosoftYaHei-GBK-EUC-H-Identity-H /Identity-H 0 [/PYNFHX+MicrosoftYaHei-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/PYNFHX+MicrosoftYaHei-GBK-EUC-H-Identity-H findfont [20.04 0 0 -20.04 0 0 ]msf
.184509 239.813 mo
(\013\262\011\004\005\003)sh
%ADOBeginSubsetFont: QJJAAA+CambriaMath-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (QJJAAA+CambriaMath)
%%Title: (QJJAAA+CambriaMath Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /QJJAAA+CambriaMath def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-1475 -2464 2868 3117} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 7320 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 10 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B6472030318CD4127C796377DABFD8006FC8CD7AAF1086964
F20EE651118638C13AC909581621FA1FBAC552E6A16F7B4972529EBE8A80E782
DD8AB05FDEEBDFC49979639D0FF68DCB6E7F422169AA9A2DB1DEF4F4B413623F
5F563C56D612D674F82D41A71448843BD967EEE7B9B5E5851CDE54BA3652F7BD
EAFCDD43D27FDE0DE42D02A7D2B502434D5DE03C37B40825A9A0E097F17F7836
8B6C52A18DA8C4E8168AC56AD15BCF0B69C17FC31C7A04A95D974197259FB36A
E72A5300CDD86C2372DFF50F7695D6D8E6898504FD1B1E5E543A89FFBE60F42D
9B97A8DA995D7DC487489AC6073B6078ACF7C0324D45E66DA26D3EFF3411DA7F
D9C5DE33005> |
1832 <001C60D8A8C9B7D8BE165EB9188076350D6B6D8C66564AC612B5F90886
51ACF43226830BB9B4ECA195FDE36B1D278D9A1BBEB72EC670736159991DB380
8E3DC6A44D3C42E97F84DA910072FED35F9508E46D99D7680D965373B3EEEE0F
CD020F67A4ED38D28D7418CEB097789883823D92596ABDBCEE2283F2CE8C0A41
48A95E5C6D8F6259F1706D7D7D17E3DD764A2E5BFA4470D76E29C8802FD443BC
536A84F97A2D11F39188986325BF3CC27606B049F81FE024A27006BCDF7E0D7E
5EA6CF7ED8A8BD6AE8CFE302429B2DF1BD5C> |
2915 <001C60D8A8C9B7931D88C91CF6232396965174D7FDFF0F200A434BCC21
4B05AF31E04B39CC4FA3AB002B33C1B202957814365A9E9FD0115DB710AF1BC3
F4A65783B63BE8582B0AB1EF681122052041A6F5BC240CF9CA9161440B6C15C8
F0597EF75421EAFB402FFBD809FD69FFEF17667775B83F2AE217009C2B86100F
1BC67626E9343CD535B5099C67E5A5036A94FA27FF5EAE528EEE1211A4FF9C2D
3566ED04E91D2E0BF9B6A47FA6F9580B4391A34BEFB60590A2F7B7EA20C323AD
B92B7D573C5766203FE9303ABC03FF30E9856177F221D4E9583DCD3909A9D436
9961> |
2922 <001C60D8A8C9B82F05F6FAC55A57B16FBCF06B948714603B737B69ADAC
65DB7DA74FB4A39AB4FFC737E224E9C81710B5079FEB6DDFFA550529079EE154
9F67ECF604C6AF9033FC39E82C5BBC9124A3B661A5FE86D9B64835607877BB19
8F0BD8C3E22667E197528249279746DE0455F1262613B81CCB7751D0FD31EBF4
8DAB6009A1BB5D> |
2913 <001C60D8A8C9B7A66FFD86AF3CAA7E08079EA3F753AC0F47F8191BABDB
13DFD6F628AD4433CD18121ABF338136086B56541A018F4FA8BBAA3F07FC1606
C0831D357A13950901A465450E3B432CC7D93FECD7078857349C61765F0C8C53
DFF7A17B655E1ABCAB58F3F1369AB46A62781DA0EC91E8C89BADDEF35DD9111D
6E587052F056960553EAAC2A2E7ECF62D4F1F3EA5B0EE13F3DF0B26451F0BB82
5A490DE1AFCB297EDE971029F603E3D041DDE0130E06EACF1FBCD84F6556DAE6
4687C4659C107B709A8B68A22A2AA5459E6A3B965D3F4E5E62> |
1840 <001C60D8A8C9B611AF7C0D9F855085EF96C1FFE5C956DBC20DFB7A0F4A
95E40D51CEC06ECA3B0A25A0B91F184F4537AEAC67B4D7D4B7262615A283BB27
35297211C1474CE78798452302274E3730D6002E5DC890BAA9A103C3EC18A361
92906D8B785EFDB1533D4CC69025CD513E76A1D0F18D16D6DE1BA9CF4233EEFA
ABB594F695A584BD8F1CA248AA7B8B6A466DFE71DED1C988B89550811B7C32E2
39506828D76EA6F116FB40D658E465AD369680986591103C77614FA128EC99D2
3F472DA29138D2B6BE61B78AE49FEDCED2A7BA58BF5F3EF9291D1C8F87FB53AC
BA9B1AA660CAE3BDB5D9118637F50336BA> |
2918 <001C60D8A8C9B663CCAB1EF0AE7D93CC20377D74D1A4F8F3148D6C8496
FC273208ACEDCEFDF2BF56A86FBBE47BDCEFE5F166EC279F6CA8D9874C544B99
7A194DA0E46A8AAAB596CD07CB0B499FB52DAFE49F4DE8FEFFA6A18AFACB5131
401B65998FB8076F09565E7292C1096286C3588D3D9628525C90A3CD906C6244
2F7E9532F2221B6D56730361723EDF723488BC0159BD142D0E6AE21E5ABCC81A
4BB397A48A012EBFB4644B41D8BF5F900F23B22831D68A063128D1ED686CEB15
489E36F6710EA5FE62F5C7FC3244CC3BBD5C24F37087636C62B16DF261A42184
BF8E32B269A030CBD8282C4E968D359D146EA96F387C3A87D72E390D32E7602B
BF2D94B84B455A6A6D908ACFBFED79DD941DF7CD6C4D80A990AFAB3240B771F1
30C0F0FD1E> |
2931 <001C60D8A8C9B662FEA934B38D64ADE7BF02C3791AE733006EEEFE7C3B
E31472D896A053999E529923895B8F1022ED846EDB6BAD6F4596EAC43FB0654F
80FC21949046D17F76FBEADCCFD6A3C4FD330BA8532396029300149E0EA0D457
57B061582EDE8945B12856A3A74D82DACDFD904616933E44AD12B57418701DB5
F7FFF4A738434EB3B1F887958DFC96987673FCD257CDC4BE22A84C1D4446880E
D4491C72B216E184DBEDB12498333CE7E09EFA3A1362C894DDBC82DE3B73B94C
3C4B65BACD19660E3C8299A96A4CD2F3A74ED904D6D472AFE0BDCDD77481DA2B
E6C445D43DA82ABEBA92746FE995D898F537B67E2AE25C355A7C7D01725003B4
B79DFE4E367CB741E15376E7232A> |
2921 <001C60D8A8C9B7CF7CCC97142304C9EA5B7003471D105801653E4535F0
38DA345E90A3CD7D63786B921B5FCFD2E5AD261F39333E60DE0A8A2E0AF08485
561DA0E83BED28D7857E55E60395BF02594948A5405864F1FBA85340621538AB
5C5D0A4E5CAC16F92C579258FAD58CE6449C7447B7F1B38340635AA44798CF0A
5EBF3C3E4A8C157200E5F0F01F44726CEFD869F3D3A2A046908F4A5C3BA37F68
870D703EDB455F0F7953B150F391E6EED7E1F7ADAB07D364A768660C9CADA156
301402C977551654F0E922339090DADFD447239D735DA9CCF3ED63ADD07371CE
576049123E7933EC257D97FCB2E98551E625AA6AD2876831571071863A0E4C81
42F73F7F5F9663BA1BD5FD46AFE13789FF052277B436069E8C04C50B7EA116F2
C122DF4A818ADC379E18967ABD6F3CD6EBA713416D95403CCD940799B77C5043
E3411223C16D47B81F7E000EAC98DF2024AF381C6C17FE9F3B4617CF315FA866
AC4817EBAD> |
3406 <001C60D8A8C9B615D1AF3F7019ECAB2AC69544C7BC6C1E04633957BEF7
6A0AA5456266245062F1C229898BB93FA8F92748F13D68653CD61418DC77E1B2
87B9584BADC19F47AA39AA7798D1255BF4F3B63EFB42F941D7103C0090B8F624
251D9D74D733E486A814DEA53768B0DBA060EEF7D0C9413FE59955214E1EC72A
B59F4DDD248577C19FED335259C22627C1E967ACF0F73FD7128D4FDCF3DB4DED
770E5C142ABCF370309685429222BC5747536BF03B22204D612653EAFA26112C
D441CD643440> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /QJJAAA+CambriaMath-Identity-H /Identity-H 0 [/QJJAAA+CambriaMath] ct_ComposeFont pop end end
%ADOEndSubsetFont
/PYNFHY+CambriaMath /QJJAAA+CambriaMath-Identity-H findfont ct_VMDictPut
PYNFHY+CambriaMath [20.04 0 0 -20.04 0 0 ]msf
60.3045 239.813 mo
(\007\()sh
PYNFHY+CambriaMath [14.64 0 0 -14.64 0 0 ]msf
70.3845 243.893 mo
(\013c\013j\013c\013a)
[8.03731 4.68044 8.03729 0 ]xsh
/PYNFHX+MicrosoftYaHei-GBK-EUC-H-Identity-H findfont [20.04 0 0 -20.04 0 0 ]msf
99.4245 239.813 mo
(\004\012\005*\011&\007U\004\210\011\031\007u\0074)sh
259.624 239.813 mo
(\005\003)sh
PYNFHY+CambriaMath [20.04 0 0 -20.04 0 0 ]msf
279.664 239.813 mo
(\0070)sh
PYNFHY+CambriaMath [14.64 0 0 -14.64 0 0 ]msf
292.625 243.893 mo
(\013a\013f\013s\013a\013i)
[7.32001 9.12073 9.11917 7.32001 0 ]xsh
/PYNFHX+MicrosoftYaHei-GBK-EUC-H-Identity-H findfont [20.04 0 0 -20.04 0 0 ]msf
335.104 239.813 mo
(\003y\007\227\010c\011+\007N\010y\013O)
[20.04 19.9198 20.04 20.04 19.9198 20.04 0 ]xsh
.184509 275.453 mo
(\005/\0061\012\015\013\215\007\236\003y)sh
PYNFHY+CambriaMath [20.04 0 0 -20.04 0 0 ]msf
120.425 275.453 mo
(\0070)sh
PYNFHY+CambriaMath [14.64 0 0 -14.64 0 0 ]msf
133.385 279.533 mo
(\013a\013f\013s\013a\013i)
[7.32001 9.12073 9.11917 7.32001 0 ]xsh
PYNFHY+CambriaMath [20.04 0 0 -20.04 0 0 ]msf
181.385 275.453 mo
(\015N)sh
%ADOBeginSubsetFont: GFNBAA+CambriaMath Initial
ct_T42Dict begin
-1.473 -2.461 2.867 3.113
 256 array 0 1 255 {1 index exch /.notdef put} for  /GFNBAA+CambriaMath
Type42DictBegin
[<00010000000c000c000c000c4f532f328422c69a000000cc000000606376
7420030315980000012c0000089e6670676dde1e5576000009cc00000c54
676c79663a246cbc000110240000108c68656164f017aa1c000016200000
00366868656112c42fd00000165800000024686d7478e35df2d00000167c
000072606c6f636101ad1be6000088dc000072646d61787026a012a80000
fb40000000206e616d65d7901c8d0000fb60000003a370726570af20ed00
0000ff040000111f67646972000000000000000000000000000304ec0190
00050008059a05330000009c059a0533000001f7006601fe020f02040503
050406030204e00002ff420024ff00000000000000004d53202000c00000
fe000639fe39016118ef13b52000019f0000000003bc0555000000200003
058d000a000005550010002b000000000000041700100000000000000000
03bc001000000000fff0ff9d0000fff00000000000000000fe52fff00000
000000000000000005b1000d033d000d055500100215fff002e00010ffa0
fff000000000000000000000000000000000000000000000000000000000
03e000100000000000000800000008000000040000000042007d00000000
000000630000000000000063007000000000005600000000000000000000
00000000000000000000000000000000000000c200000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000ce00c900bb00830000000000bc00b300ac0000
0000000000ac00b5008500c200bc0078000000000059004f008400a0004f
00540078005a00490055005e00690000007100a400a50000000000000062
0060003100310000003e000a008a00000000000000ca00e800b601fc00a4
009b0000000000000000000000000000000000930085007200b800c2009b
004a0069003e00910063009400ab009f004b008600910000000000000000
000000d60000000000e00261006a007300a700b000850064006800000000
004d00810048005c0078004600560071006e008a005a00af00b4006500b1
0099007800bc0052009e06be00080274000d033dfff3023afff3008b0000
009602740281028e03800074007c009e00de00f40090008ffec2fff00000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00900098004b0084008e0042005a033d03500360007d0000000000000000
000000000000000000000000000000000000000000000000000000000000
00b700a400c10072007800b300a600ac009e00900125009a0087007d010c
009d00bc0132009100000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000b7008c00a60000000000000000000000000000
00c300b900af00a50055008e00520073009b00a800420050000000000000
000000000000000000000128010a0083006a005a010e00fa005f00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000700063007800540082
006a00720087005800660031007500580068005800750000000000000000
0136013e0088007100a3012d00e400750042007e006e0121013000c60088
0118007a0068009d0042009400ba0130013e007300b4012800f90070005b
008e000000000000000000000000000000000000058d0010000005550010
000000000800011600ce0000040003fa0000000003ea001000000000fff0
00000000fff00000012400c80000fe52fff00000000000000123010d00bc
00b700aa00c600a2009b011b010300f500e100fe012f011c00bc012900d1
012900c600fa00ba00c1010e00ec011b011800d701010000000000000000
00000000000000000000058d001000000555001000000000080000ba008b
0565040000000000000003ea001000000000fff000000000fff0000000b1
008d0000fe52fff0000000000000008100a7009c00c2007d00ac00b400bb
00c1009200b600bb008c00b400a00085009700ad00a600a60091008000a2
00000000000000000000055a0033000005670033000000000800010e00c3
0000040000000000000003c000330000ffd1ffcd00000000ffcd00000000
00000000fe8effcd00000000000000d5006900db003e0050004900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000207fce305df0249050f
0501ffeb04aa0704fe5b01f5000000a50070009300a5007b007b00670000
000000000000000000000000000000000000000003fd03e805afffee05ba
fe4205110524fe71fe7c000a00d700d900cf00c500e300d300d500ca00e7
033003c503e103f20460040605cd05a200b5042e00770096000000000000
00000000000000000000046e0468045104a4045a042e05270000041c004d
00520057005c00600062006b007200000590073104920556056403f203fa
05980000006c00780086008e0093007e0000405a65645f5e5d5c5b5a5958
5554524d4c4b4a4948474644434241403f3e3d3c3b3a3938373635343332
31302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a191817161514
131211100f0e0d0c0b0a090807060504030201002c0118b0184358456ab0
194360b00c2344231020b00c4ef04d2fb000121b21231120332f592d2c01
18b0184358b0052bb000134bb0145058b100403859b0062b1b2123112033
2f592d2c0118b01843584eb0032510f221b000124d1b2045b00425b00425
234a6164b0285258212310d61bb0032510f221b0001259592d2cb01a4358
21211bb00225b0022549b00325b003254a612064b01050582121211bb003
25b0032549b0005058b0005058b8ffe238211bb0003821591bb0005258b0
1e38211bb0003821595959592d2c0118b0184358b0052bb000134bb01450
58b90000ffc03859b0062b1b21231120332f592d2c4e018a10b10c194344
b00014b1000ce2b00015b90000fff03800b0003cb0282bb0022510b0003c
2d2c0118b0002fb00114f2b00113b001154db000122d2c0118b0184358b0
052bb00013b90000ffe038b0062b1b21231120332f592d2c0118b0184358
45646a23456469b01943646060b00c2344231020b00cf02fb000121b2121
208a208a525811331b212159592d2c014bb0c85158b10b0a432343650a59
2d2c004bb0c8515800b10a0b4323430b592d2c00b00c2370b1010c3e01b0
0c2370b1020c453ab10200080d2d2cb0122bb0022545b00225456ab0408b
60b0022523442121212d2cb0132bb0022545b00225456ab8ffc08c60b002
2523442121212d2cb000b0122b2121212d2cb000b0132b2121212d2c014b
b0c85158b00643b00743650a592d2c2069b04061b0008b20b12cc08a8cb8
100062602b0c642364615c58b00361592d2cb1000325456854b01c4b505a
58b0032545b0032545606820b004252344b0042523441bb0032520456820
8a2344b00325456860b003252344592d2cb00325204568208a2344b00325
4564686560b00425b0016023442d2cb00943588721c01bb01243588745b0
112bb00d2344b00d7ae41b038a45186920b00d23448a8a8720b0a05158b0
112bb00d2344b00d7ae41b21b00d7ae4595959182d2c208a452345686044
2d2c456a422d2c01182f2d2c0118b0184358b00425b00425496423456469
b0408b6120b080626ab00225b00225618cb0194360b00c2344218a10b00c
f6211b21212121592d2c01b0184358b0022545b002254564606ab0032545
6a6120b00425456a208a8b65b0042523448cb00325234421211b20456a44
20456a44592d2c012045b00055b018435a584568234569b0408b6120b080
626a208a236120b003258b65b0042523448cb00325234421211b2121b019
2b592d2c018a8a45642345646164422d2cb00425b00425b0192bb0184358
b00425b00425b00325b01b2b01b0022543b04054b0022543b000545a58b0
03252045b040614459b0022543b00054b0022543b040545a58b004252045
b04060445959212121212d2cb0032520b0072587052e23208ab00425b007
25b0142b1021c4212d2cc02d2c4b525845441b2121592d2cb00243583ded
181bed592d2c4b505845441b2121592d2c01184b52588a2fed1b21212159
2d2c4b53234b515a58b003254568b003254568b003256054582121211bb0
0225456860b0032523442121591b212121592d2cb00243583dcd181bcd59
2d2cb002435c58462346608a8a462320468a608a61b8ff8062232010238a
b10c0c8a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a
1b2121212121592d2c2045b0032546524bb013515b58b0022546206861b0
0325b003253f2321381b2111592d2c2045b00325465058b0022546206861
b00325b003253f2321381b2111592d2c004bb0c8515800b00743b006430b
592d2c8a10ec2d2cb00c4358211b2046b0005258b8fff0381bb010385959
2d2c20b0005558b8100063b003254564b00325456461b0005358b0021bb0
4061b00359254569535845441b2121591b21b0022545b00225456164b028
515845441b212159592d2c21210c6423648bb84000622d2c21b08051580c
6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648b
b81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c
184b5358b00425b00425496423456469b0408b6120b080626ab00225b002
25618cb00c2344218a10b00cf6211b218a11231220392f592d2cb00225b0
02254964b0c05458b8fff838b008381b2121592d2cb0134358031b02592d
2cb0134358021b03592d2cb00a2b2310203cb0172b2d2cb00225b8fff038
b0282b8a102320d023b0102bb0054358c01b3c59201011b00012012d2cb0
482b2d2c01b0022510d023c901b00113b0001410b0013cb001162d2c01b0
0013b001b0032549b0031738b001132d2c4b53234b515a5820458a60441b
2121592d2c184b5358b00425b004254964b00325b00325496468b0408b61
20b080626ab00225b00225618cb00c234421b004251023b00cf61bb00425
b0042511122320392f59cc21212d2c0118b0184358b0052546234564611b
21b00425b004254a59b00e23442310b00eec2310b00eec2d2cb01b435820
b0016045b000515820b0016020452068b0005558b0206044211b21212159
1b20b0016020452068b0005558b8ffe06044b01c4b50582045b02060441b
21591b21212159591b21592d2cb0022546206861b00325b003253f232138
2d2c462346608a8a462320468a608a61b8ff8062232010238ab10c0c8a70
456020b0005058b00161b8ff808b1bb0818c59683a2d2cb0402a212d2c20
35b001602d2cb0024354584b53234b515a58381b2121591b21212121592d
2c49b00e23442d2cb0024354584b53234b515a5820458a60441b2121591b
21212121592d2c8a10b002435821b0301ac9181bb0401a18ed592d2c4b53
234b515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c
4b53234b515a58381b2121592d2c4b5458381b2121592d2cb002435458b0
462b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458
b0482b1b21212121592d2cb002435458b0492b1b212121592d2c4b52587d
1b7a592d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b94000020063b804
00885458b202400243604259595959592d2c451868234b51582320452064
b04050587c59688a6059442d2cb00016b00225b0022501b001233e00b002
233eb10102060cb00a236542b00b234201b001233f00b002233fb1010206
0cb006236542b0072342b00116012d2c20b82000628a6023622d2cb00725
58001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b00625
5cb006255a58b0092b5920b005254ab0042547b004254760b0062547b080
6361b00225b0005558b00325b00725496359b0082558001b0159b00425b0
062549b009255cb009255a58b0092b59b0072546b0806361b0032520b000
5558631b2159612320b0005558b080631b21b08059b0592bb006255c5869
59b00425202010b00048233ab0062658001b0159b0052658b003252f598a
12233221212d2cb00625b00a2587b00625b009254ab0005358b00625b00a
251bb00925b0072559b00225b00225070cb005256323b00625636020b940
00040063535821b00426b00426b00a1bb94000040063655158b0042665b0
042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb00725b0
07250b0d0ab00b2eb00525b0052507595920b0005558b00525b0052587b0
0725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b00525
b0052507b00825b00b254923b00625b0062587b00a2510b00b25c15920b0
0051b800522378b00161b00225b00725b0072507b00a25b00d254961b080
62b00525b005250bb00a252338b00625b0062587b00825b008250bb00a25
10b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa723792121
212121212121212121212d2c23b0005458b9400000001bb900004000598a
b0005458b9400000001bb90000400059b05b2b2d2c08b0005458b9400000
001bb900004000590db05b2b2d2c8a8a080d8ab0005458b9400000001bb9
0000400059b05b2b2d2cb00426b00426080db00426b00426080db05b2b2d
2c204569442d2c0020b200400325b0062649618b3812342d000100000006
cccdf657d12f5f0f3cf5001b080000000000b9e6983d00000000cbd6fada
f434ec4a16f118ef00000009000200010000000000010000063bfe390161
175af434fda416f1000100000000000000000000000000001c9800>
<054400be0000000001c3000001c3000004fc000604e4007904800077054b
0078049a0079044b007904e30077057e0079029800790274001d05090079
044b00790686007505720075053a0077048b0079053a007704f8007903f8
007004be0042052f005a04d40016075f00160492001504900012044d005e
04fc000604fc000604fc000604fc000604fc000604fc000604fc000604fc
000604fc000604fc000606ee000006ee0000048000770480007704800077
0480007704800077054b007805510032049a0079049a0079049a0079049a
0079049a0079049a0079049a0079049a0079049a007904e3007704e30077
04e3007704e30077057e00790588007902980033029800790298001f0298
00010298004002980035029800140298007902980079050c00790274000d
05090079044b0079044b0079044b00790451000d04fa0079057200750572
00750572007505720075053a0077053a0077053a0077053a0077053a0077
053a0077053a0077053a0077053a0065053a0065076e007704f8007904f8
007904f8007903f8007003f8007003f8007003f8007003f8007004be0042
04be004204be0042052f005a052f005a052f005a052f005a052f005a052f
005a052f005a052f005a052f005a052f005a075f0016075f0016075f0016
075f001604900012049000120490001204900012044d005e044d005e044d
005e05720075055100320497007903e80050046100300387006904700069
03e70068026c004f03f4003f046a004002390053022100050432003f022c
003f06a8005304770053043f00690473004904600068034f00530370005e
02b50025046b0049040800130632001d03de00170408001403a3005103e8
005003e8005003e8005003e8005003e8005003e8005003e8005003e80050
03e8005003e8005006050050060500500387006903870069038700690387
006903870069056c00690470006903e7006803e7006803e7006803e70068
03e7006803e7006803e7006803e7006803e7006803f4003f03f4003f03f4
003f03f4003f046a0040046a003402390023023900530239fffe0239ffd3
0239001f023900150239fff00239005302390053045a00530221fff20432
003f043f0053022c003f0314003f022c00390278000d0302003f04770053
04770053047700530477005305850047043f0069043f0069043f0069043f
0069043f0069043f0069043f0069043f0069043f005b043f005b068c0069
034f0053034f0053034f00530370005e0370005e0370005e0370005e0370
005e04d8004f023c004f039b002502b5002502d30035046b0049046b0049
046b0049046b0049046b0049046b0049046b0049046b0049046b0049046b
00490632001d0632001d0632001d0632001d040800140408001404080014
0408001403a3005103a3005103a3005104680053043e006904610031045d
fffe0471006803ef006904aa006a0417006803d50068044d006904e30068
02610068023b00070476006803b7006805bb006504c40064048300690433
006804830069046a006803a4005e04390039049300470447001406a4001d
041b00160416001603db0050045dfffe045dfffe045dfffe045dfffe045d
fffe045dfffe045dfffe045dfffe045dfffe045dfffe061efffe061efffe
03ef006903ef006903ef006903ef006903ef006904aa006a04b200440417
006804170068041700680417006804170068041700680417006804170068
04170068044d0069044d0069044d0069044d006904e3006804ed00680261
003502610068026100130261ffe602610034026100290261000302610068
02610068049c0068023b00010476006803b7006803b7006803b7006803c5
0042046e006804c4006404c4006404c4006404c400640483006904830069
048300690483006904830069048300690483006904830069048300600483
006006790069046a0068046a0068046a006803a4005e03a4005e03a4005e
03a4005e03a4005e04390039043900390439003904930047049300470493
004704930047049300470493004704930047049300470493004704930047
06a4001d06a4001d06a4001d06a4001d0416001604160016041600160416
001603db005003db005003db005004c4006404b200440444006802ef004c
0346003802ab005d034e005d02ee005d01eb004b02f700410349004101c2
004e01b400150319004001b9004004db004e0353004e032c005d03500047
0346005c0284004e029b0056021c002e034b0047031300270497002f02e8
00240313002702bf004d06d1004f093d004f04d8004f06d6004f0942004f
04a5004f0711004f048d004f06f9004f069e004f090a004f0497004f0703
004f05800059050500590247003f0247001f0000fde60000fddd0247008b
024700720000fe600000fe30024700060247fff60000fdc30000fdb40247
00060247fff60000fdc40000fdb400e8ffbd0247ffda0247ffda0000fd98
0000fd9802470026024700170000fde40000fdd50247001b0247000c0000
fdd90000fdca0247fff60247ffec0000fdb40000fdaa0247004102470041
0000fdff0000fdff0247fffc0247fffa0000fdba0000fdb8024700c70247
00c70000fe850000fe850247003c0000fdfa024700880000fe460000fdf8
0000fe7901a40018021c0049021c00aa01a4006d060400f902a8006c02a8
006c024900c0024900b6024900b60361005c0361004b0361004b01c50069
01c5004701c5006901c500470301006903010047030100690301004701a4
002e02e2002f026c0064026c0064026c0064026c006403e7006403e70064
03e7006403e7006403ec003e028800f70400005a0400005a0800005a0800
005a0600005a0600005a038c00950242009901fa008e030e00b4030e002b
030e00b4030e002b02cd00e402cd002b02cd00e402cd002b0319005f0319
002b0319005f0319002b036b004e0422006d0422006d0400005804b40051
04fc000604e40079044a007904c40033049a0079044d005e057e0079053a
0077029800790509007904d80006068600750572007504930072053a0077
05650079048b00790462003004be004204dcfff106480074049200150643
0032056f003f04f3000605a6000006800000039a00000298004005e30000
063a000004dcfff1060d000004980068047100ae041b007b040effe50433
0066038d006a033300690458fffb0460007b045e0000024600b204370048
03e70016045e00b503db000b033d0064043f006904d1000d0442008d0493
00640373006903d3000c0454000005b2006805c7006803e3fff605c10045
0602006404980068038d006a0458fffb024600b2024600240246ffd2043f
006904540000045400000454000006020064045dfffe0471006803b90068
0431001e0417006803db005004e300680483006902610068047600680445
fffe05bb006504c4006403fc00610483006904c400680433006803e1002d
043900390433fffa0556005b041b00160599002804de003f045dfffe0417
006804e300680261006802610034048300690433fffa0433fffa04de003f
024700c00000fe7e0247ffd20000fd9001f4009601f4009601f40096021c
0049019000460190002a04fc000604cb007904e4007904460079053d0025
049a00790762002504580071058900790589007905330079056c00240686
0075057e0079053a007705650079048b00790480007704be004204cd0025
063b0068049200150560007b0502002f076a0079076a007905db004206cd
007904c700790496006f075e0079050c000e044600790404007905e90042
048f007703f80070049a0079049a007902980079029800400274001d0589
007905330079077b0024077500790606004204cd00250556007b05c60042
053a0077054a002003e800500454007f042f006a0393006a0477002503e7
006805b6001203aa005004b8006a04b8006a0452006a0479002505620068
04b6006a043f00690489006a04730049038700690417003904080014057b
006803de0017048f006a043f00290668006a0668006a04f0003905fc006a
041d006a03c300500623006a043f00170393006a0356006a044e003303c3
00680370005e03e7006803e7006802390053023900200221000504b8006a
0452006a061b00250662006a046a0034040800140489006a04fa0039043a
00690471001e043b0069045dfffe045500680471006803d2006804960024
0417006806b6003603e6005d04e7006804e70068049d006804c0002405bb
006504e300680483006904c400680433006803ef006904390039041a0028
055a005c041b001604cb006a0476002a06c1006806c1006805320039064c
00680449006803fb005d068300680490001803d2006803a4006805530039
03ed005b03a4005e04170068041700680261006802610034023b000704e7
0068049d00680687002406be0068055e0039041a002804c4006a05360039
0483006904b3001e0247ffdd0247ffda0000fd9b0000fd98046e009d05b3
007d028800f703ec003f02f7000001e50091032500910715008907150089
06ce006e06ce006e056f002606d70064045a007c05070023043600230507
0023046e0023040c007004360085040c0070046e00a203870069043a0043
0436003f043a0043046e0061047cff9804e0004f0436002604e0003d046e
00330356006e036c0078084f007504f4006e0436007b02bf002b03ae0031
03b000330436003c03b700570438008103ae00480436006e043800640436
007b043600b10436006f043600810436003c043600a70436007e0436008e
0436006e04360067046e008102e5002c03e0002903e3003f0464004803ea
005c045a007803da0048046e006f0459005a046e0081046e00b2046e0081
046e0090046e004d046e0096046e0082046e0094046e006f046e00640342
00690342007e03420063034200730342003a03420086034200670342007c
034200630342005603420066034200680342006602560092025600320342
00690342007e03420063034200730342003a03420086034200670342007c
034200630342005603420066034200680342006602560092025600320342
00690342007e03420063034200730342003a03420086034200670342007c
0342006303420056046e004f06ec007e071e007e06ec0070071e00690a1b
0069046e007c046e007f046e007c046e00a801fa008e046e007f00eafe72
046e007c046e007c046e0042046e007c046e007c046e007c046e007c046e
0071030100540425002706ce006e045c0054036700460541002304c40033
056f003f045a00b5067f005b05ab001a04500099036b005c034200690342
007e03420063034200730342003a03420086034200670342007c03420063
03420056026c004f03b000150395005d0351006403d9005d035b005d0314
005d039b006403f6005d01ef005d01e7002503af005d031a005d04af005d
03f2005d03d500640357005d03d500640399005d02fa0062035c002c03d4
005303940021055b001e03660023036400230322004c03b000150395005d
0351006403d9005d035b005d0314005d039b006403f6005d01ef005d01e7
002503af005d031a005d04af005d03f2005d03d500640357005d03d50064
0399005d02fa0062035c002c03d4005303940021055b001e036600230364
00230322004c02ef004c0346003802ab005d034e005d02ee005d01eb004b
02f700410349004101c2004e01b400150319004001b9004004db004e0353
004e032c005d035000470346005c0284004e029b0056021c002e034b0047
031300270497002f02e800240313002702bf004d03b000150395005d0311
005d03890036035b005d0322004c03f6005d03d5006401ef005d03af005d
039a001604af005d03f2005d0355005a03d5006403e4005d0357005d0334
002c035c002c0389000f0478005503660023049400380400003f0382005c
03520090033000190321005b02ae005e026e00240353000f0341006a01ef
0090033e0047031e00210352009002e4001c02860024032c005d038f0016
032a00760372005a029a005d02b300160338000f041f005d02f9000f0436
00440448005a03b000150395005d0311005d03890036035b005d0322004c
03f6005d03d5006401ef005d03af005d039a001604af005d03f2005d0355
005a03d5006403e4005d0357005d0334002c035c002c0389000f04780055
03660023049400380400003f0382005c03520090033000190321005b02ae
005e026e00240353000f0341006a01ef0090033e0047031e002103520090
02e4001c02860024032c005d038f0016032a00760372005a029a005d02b3
00160338000f041f005d02f9000f043600440448005a046e006803180060
022900b302290032034d006b034d006b04f60061034d006b034d006b034d
006b0328005203280071032800240328003a0328002d0328003703280066
032800590328003b03280060022900b302290032034d006b034d006b04f6
0061034d006b034d006b034d006b0328005203280071032800240328003a
0328002d0328003703280066032800590328003b032800600000fd6f0000
fe2c0000fe980000fe130000fd730000fd8c0000fdb40000fe740000fe45
0000fe290000fe1d0000fdfe0000fe250000fdfb0085fecd0000fe3b0000
fdd10000fdd10000fdea0000fdf30000fd620000fe8c0000fe850000fde4
0000fdff0000fe980000fddb0000fda40000fdc40000fdc30000fdb40000
fdb40000fd980000fdd90000fd1b0000fd1b0000fd7f0000fdb30000fcc2
0000fd9f0000fd650000fe5f0000fdda0000fe230000fd880000fdfa0000
fe590000fd1b0000fde60000fe600000fd710000fe740000fea00000fddb
0000fdf90000fe120000fdfb0000fd8a0000fd8c0000fd9d0000fd560000
fde4000000000000fe3b0000fe3b0000fd8b0000fdfa0000fe3b0000fe3b
0000fd5f0000fe5f0000fdb80000fdd90000fdd90000fda20000fdb80000
fdd90000fe0d0000fe1b0000fe860000fe0b0000fdf20000fe230000fdf4
0000fdfe0000fd730000fe540000fe390000fdec0000fdf6044f007b0477
000904dcfff105a70067065f000d04590049053a0077043f0069043d0074
036f0064044b00790376009b03c7004d037500460472002204600022048f
000d043d00890380006902210005053a007703a8006903a8004104000000
08000000046e000001a40000015500000072000000000000045a005a045a
005a043b00f70211006c0371006c04db006c041f00b702f2000004d50077
073c0054052d005a048c008d0491006f070700540516004b058a00140670
007904b5007f0542001506af004705c2007506ce006e063a002805880079
061d00770613003905f5007904d2005e03a30047056f003e0555ffd90243
ffe90509007904fc0006053b007203e30055044b003b0527005f04c60093
045a00220356002c03cf002b032e006c074c00690539000f049b0079065c
007905db001a04cf009403d3002803d30028047c001f06760039058d0069
04e6008c0349005c0362ff560568008c0586000b06b4007303bf005106b4
007303bf0050075e007303bf005005380087053800600538006005380087
06b4007306b400730715007307150061077c007303e60064077c007303e6
006406eb007306eb007306fa007303bf005106fa00b003bf005003e70064
0696007306960088072100730721006909870073079a007304a200660487
0073048700d404870073048700d405140073048600740679006d0679007d
0551005a073b00bc0641007c0641004d06b4007306b40073037701360376
005006b4007306b40073037701360377005106b4007a0645006206b4007a
06b4007a0663008406b4007a0663008406b4007a06b4007a0701007308a2
00730701007a06ed007304b0005a06ed003304b0005a0848007304b0005a
05d9008705d9005505d9005505d90087071d0073071d00b907d6007307d6
007303e6006403e60064070e007303bf0051070e007303bf005106e600b0
06e6007306e1007f04bf006306e100a504bf006304bf006304e0007404e0
007404e0007404e0007404f6007f071700b3062e00aa062e006004e00074
079000730645006206e4008406b4007306b40073079a0073071800730718
007307fe007307210073072100730893007305070031042d007704b20089
04d500890506007a04c4004d04fc0091051f0091046e008c04fc009304fc
0093046e009306400118067f005a05fa009505fa0095046e004d03dd0087
038c00850516002305160023059f006e058700de0544005205440052056b
0075025800de02ff003903b600de045a003904b8003404b80036057300a0
057300a004b10063076300630a15006304cf006e0799006e0a49006e0511
006e050e006e0533006e0496009a0496009a027000b804be00ae05c8007b
077b00950636009505e2009505b3007d05e300950675006e057f004202ed
00c805b2007e05fa009505fa009505fa009505fa009505fa009505fa0095
05e3009505fa009505e3009505fa009505f9009505fa009505fa009505fa
009505fa009505fa009505fa0095077b0095077b009505fa009505fa0095
05fa009505fa009505fa009505fa009505fa009506b6009505fa009505fa
009505fa009505fa009505fa009505fa009505fa009505fa009505fa0095
072000950720009503d500b405fa009505fa009505fa009505fa009505fa
009505fa009505fa009505fa009505fa009505fa009505fa009505fa0095
05fa009505dd009505dd009505dd009505dd009505e4009505e4009505dd
009505dd009505fa009505fa009505fa009505fa009505fa009505fa0095
05fa009505fa009505fa009505fa009504db009504db009504db009505fa
009505fa009505fa009505fa009505b900de05b900de07f600a207f600a2
07f600a207f600a207f600a207f600a207f600a207f600a207f600a207d0
00c807d000c807d000c807d000c8056400de054b007c054e007c03b80052
054e007c03b80052042800de042800de05c200de060700de071e00de073d
00de05c200de05c200de068300de073d00de046e005f046e009705c8007c
05c8008c05c8006b05c8006b0835008508350085073e007c05c8007c033c
006d04b8005204b8005004b80052058700de059a00590552003405520036
062b00de062b00de039a0082024200ad042700500496007506a300de0609
00de0609007a05b900b405b900b405c8007c04b8003604b8003605bb0089
05bb0090061500c8061500c8057d00c8052f009505fe009505fe009509eb
009509eb0095060200950602009505fe009505fe009505de009505dd0095
05dd009505dd009505fa009505fa009505fa009505fa009505fa009505fa
009505e4009505e4009505ea009505ea009505fb0095060b0095027c00c4
06da009504f200a004f200a005dd006d04fe00a60470008c04fe009104fe
00910470008c04fe009104fe009105dd009504fe00950470009505110095
0470009505d8008c02cd00e402cd002b02cd00e402cd002b02e0007d02e0
006a09d3047209d300e7061100ec061100ec061100ec0611001e0611044f
0611001e02cd004e02cd004e02cd004e02cd002502cd01ad02cd0025057a
0254057a00a9057a0254057a0254057a0025057a0254057a002509d30472
0434000005c600d305c600d30be700850be7003504ed000004ed000005ca
006e05250019038500e40385002b02e0007d02e0006a06f6006c06f6006c
06f6006c059100b405db00be0648008c043f0064056e00160554006f04b4
007605c1006f04bd006f0487006f054a007605e4006f02ea006f02d80032
0592006f0486006f06e3006c058d006c05ae00790507006f05ae00790572
006f04390063053b00510587005b052c001f07ca002504f3001504ef001b
04a6005f0466004b04d9003d03de006a04e5006f045d006a0356004d0451
003d04e4004902a200580289001d04df004902950049073d005804f20058
04ac006a04e5004b04d9006f03cf005803ca0060030a003404e5004f0453
001d06770025043400100453001d03f300510511fff30540003904c60087
058a003904ff003904e30039050a008705d3003903080039030eff480596
00390441003906cf003705dc00370569008704f600390569008705190039
043c000f04c30046058300a60501005f079900690529ffeb04d2006804bd
000a047500690450005c03ae006904a3006903f800690466fff104e5001e
0470005c0289008c02e0ff60046a005c0287008a06b50018049700180443
006e04760018044f006903ce001703b200320328007504970018045a0046
05e900370442001e047a000703de0019039e001003ae002e033d005f03e1
002e036d002e035f002e038d005f0411002e021c002e02a5000f03e6002e
02f5002e04c3002e0419002e03c8005f0386002e03c8005f038f002e0306
00290353002803f90093038c00370550003703d1001d0365003703610028
034b005a03230053029e005a0352005a02cc005a0319000e0360000f0344
005201d500730263000f0322005301da007104e90023037200230312005a
035400280323005a02c50023026a001e024e00640372001e02c400270444
002703170014035b001a02bd0014039e001003ae002e033d005f03e1002e
036d002e035f002e038d005f0411002e021c002e02a5000f03e6002e02f5
002e04c3002e0419002e03c8005f0386002e03c8005f038f002e03060029
0353002803f90093038c00370550003703d1001d0365003703610028034b
005a03230053029e005a0352005a02cc005a0319000e0360000f03440052
01d500730263000f0322005301da007104e90023037200230312005a0354
00280323005a02c50023026a001e024e00640372001e02c4002704440027
03170014035b001a02bd00140511fff30540003904dd003904e7000f04ff
003904bd000a05d300390571008703080039059600390501000f06cf0037
05dc003704d2001e0569008705ba003904f600390571008704db000f04c3
004604fc003205d9005a0529ffeb0619006d056e000e04e700b104cc0069
04d9000f0434000f044d006403a4005a03cc005a04320018048000730214
00570454005c0424000f0463000f0412000e03db004b0443006e04be0023
0484000f04ae005a0375005a03ab0023040c0018056b005f04a6ffd205a1
001805ce005f0473006e03b9006904b1000f049d000a0577006304490065
06640023039e001003ae002e0359002e036a000f036d002e036100280411
002e03c8005f021c002e03e6002e038c001004c3002e0419002e03930034
03c8005f0411002e0386002e03c8005f0359000f03530028039f00320446
005303d1001d0477005f0400002a035f0055037a005a03a4005303240010
031d005a02a2005502c60053033c0023035a006e01c90067032000530311
001a03880053030c000f02da00500312005a03780025036f0050036a005a
028e005502a5001b0311001e03f6005503940014042e001e0443005a033d
005502b7005a0399001e037500200407005a032b006904970025039e0010
03ae002e0359002e036a000f036d002e036100280411002e03c8005f021c
002e03e6002e038c001004c3002e0419002e0393003403c8005f0411002e
0386002e03c8005f0359000f03530028039f00320446005303d1001d0477
005f0400002a035f0055037a005a03a4005303240010031d005a02a20055
02c60053033c0023035a006e01c90067032000530311001a03880053030c
000f02da00500312005a03780025036f0050036a005a028e005502a5001b
0311001e03f6005503940014042e001e0443005a033d005502b7005a0399
001e037500200407005a032b006904970025054bfff305c9003905050087
06010039053f0039051c0039055f0087064e0039037c0039035fff480623
003904870039074e00370614003705dc0087057f003905dc008705930039
048a000f04fd004605d000a60531005f07de0069058affeb05140068050f
000a04f8006904db005c040a006905260069046500690482fff1056a001e
050e005c02f8008c031dff6004e5005c02f6008a076b0018052d0018049d
006e04f7001804d60069044b001704040032035b0075052a001804cd0021
064e0037049d001e04c8000704220019054bfff305c90039051500390569
000f053f0039050f000a064e003905e60087037c0039062300390531000f
074e00370614003704f0001e05dc0087064e0039057f003905e600870517
000f04fd0046055c00320697005a058affeb06b4006d05de000e056900b1
055f0069056b000f04d3000f04a40064041f005a0423005a04d0001804fe
007302aa006704de005c0482000f0516000f0489000e0421004b049d006e
057c002304f8000f050b005a03d6005a0414002304920018060d005f0541
ffd2063800180666005f04dd006e03f90069053f000f04fc000a061c0063
04b4006506fa002307230025056e001e04d0005a05e0001e048a00500596
0000049900000777000003a3000004f2000a06f6000004b9000008d40000
07bd0000054c006405d200000535002e05e6000004970025055e000d0625
000c05720000086b00000693000005e7000c058000000526004b05eb0000
03d6004a0546004b0491002305df000003b4000003d6fff605ae00000840
000005fa000005b5000e04f9004b05dd0000044e0000045b001505ed0000
05ec00000817000004cc000505d70000047500180787002505e4001e0534
005a066b001e04dc004e05fa0000051e0014080d0000042900000560000a
0760000005160000098200000818000005cf00690660000005ad002e0699
000004c7002505d0000d06a1000c05a8000008ae000006fa0000066d000c
05b6000c0550004b06110000040f004a0570004b043a005504e100230558
00360605fffb03d200000437000505cf0000047c001b0868000006220000
0563006206070015055b004b05fa0000047f0000046e0022060e0000060e
000008550000052b00050614000004cd001805bd003c063000390661003e
0549007d054b004206090072052d001305b4001404e400100801003c0628
003c06700026062300350683002605fb006405b40047056f003206190035
07c600350510000f05c6003203e8007303fa002c02ee006e03e700500334
006e027200270400006e04070032022c0034022b000502b1002b02290039
064a0000043dfffb03d80050041c002603f9006e02f2001903590036027a
00200449001a03dd002a060f00320354000d0416002b0300003d059a0006
05db0079064700780519007904e5007905d8007303630079033f0009061e
007904d2007907440075061d007704ab0071056c004205a0005a05620016
083b0016057100150546001204c1005005280030042800690538006904b0
0068038f004f048e004b055b003f02fc005302e4fffc0526003f02ef003f
07af00530568005304ee0069053b004a0528006803f7005303d9005e035a
0025055b00490486000f06e7001d049e001704870010044b00500677003c
065d003905cf00640688003c05cf00640579004b0662006405f90010055c
001e056b001e0628001e052a001e086d0044068b003c06a700260658003c
06cd00260680004105fb006405f4004605dc0032065c0035089300350582
000f0633003c05a700140466007304570037033a006e04450052038d006e
02b700270462006e0458003802990017029b000f02ef00280297003f06e0
000a04ea000a044000580485001e045a006e037600140394003202ab0028
04d8001e048a00140681001403fb0009048b0014034900380491000d04b7
00cc04230076052f00cc040000cc03dd00cc04cf0079053a00cc024900cc
0249ffe0049a00cc03d300cc065800cc057300cc053a0079045f00cc053a
0079049200cc03c90054041a0028051900b9047a0016075d001a04410005
044f00170414004b03ed004b046800ac0377006d0468006d0402006d02ba
003904030046043c00ac01ff00a301ffffca03ce00ac01ff00ac066d00ac
043c00ac0447006d046800ac0468006d030a00ac0348004f02bf001e043c
00a403b700170610001903a6000a03b7ffdf038000460527000d052000b9
0459006b058f00b9043200b9040d00b90536006b058c00b9029600b90296
ffe3050400b9040100b906cd00b905c600b9058c006b04cb00b9058c006b
050800b90417005204560028057100aa04f6001607d8001b04b9000504c0
0017044600460459004b04c3009f03ac006004c30060045b006003090037
0475004b049e009f0254009f0254ffc90457009f0254009f06dc009f049e
009f049d006004c3009f04c300600359009f037a004302fb0028049e0097
04160017067b001c0414000a0416ffdb03ac00410509000004db00400499
006e054c0040048400600464004004c3006e054e0040025d004002a6ff60
05460040034e0041066c0040058700400558006e04b9004a0558006e04a4
00400409000e04190021052a00780501009607e500a00585000f0459001e
04bf000f0429004b0476004003c0006404d00064041f0064037f004304aa
fff1043c00400259004002afff60045a0040025d0040066d0040043c0040
045b006404a4000f04720064036a00400348fff9032b007d043c00760414
007306700078047100000471ff6003e4000f059a0000055b004004dc006e
05cf004004bf0060049d0040052c006e05c6004002d000400301ff6005c3
0040039b0041070700400600004005bf006e0538004a05bf006e05330040
0455000e046300210596007805780096085a00a005f3000f04ca001e04fb
000f049b004b04e600400405006405410064047c006403cc0043051afff1
04b5004002c600400303ff6004dc004002cc004006f3004004b5004004c4
00640514000f04e3006403ce0040037cfff9035f007d04b5007604750073
06d5007804df000004d1ff600424000f056e00160554006f0487006f052d
003204bd006f04a6005f05e4006f05c3007902ea006f0592006f054a0016
06e3006c058d006c049a007205ae007905da006f0507006f05ae007904a0
0030053b00510544000006ca007404f3001506bc002c05e30046052d0042
051b006a04e300ad0485ffe704a500660403006a039b00680501fffc04c5
007602d500a804e000540487002604fa00b50435000b039f006404ac006a
053f000b04b5008c03cd006904f700640407000b049bffe3062100640461
ffe706850052066f006404b1006403e30069050c00060495000d06350064
04a6006e06f2000b04c9007704c900a404c9007204c9008504c9003a04c9
00a304c9007404c9008404c9006604c90063055b008103b3002c04720029
047f003a04f60048047d00630515006e04430048052d006f0515005a046e
0081046e0091046e006c046e0069046e0051046e00a7046e0083046e006b
046e0067046e005b04e6008104e600b704e6007904e6008804e6005b04e6
00bc04e6008304e6008804e6006c04e6007304cd00b004cd00bc04cd009a
04cd00ad04cd005d04cd00c504cd00a904cd009204cd009604cd00880466
00280221000502840049026b000e01c2004e01b4001501c2004e01b40015
0289008c02e0ff60021d008701b1ff75021d008701b1ff7502f8008c031d
ff6003b4000003d6fff603d2000004370005022c0034022b000502990017
029b000f02fc005302e4fffc01ff00ac01ffffca0254009f0254ffc90259
004002afff6002c600400303ff6003080042029a004d03340011036e003c
040700580335006d045b001404a1009004a100b704a1008804a1009d04a1
005104a100af04a1008d04a100a604a100810469006d05d200a905d200a9
05d200a9036600af0366002205a4007205a40072059700140574008a0509
008e05e2008a051f008a04bc008a057b008e0613008a02ea008a02d4002d
059d008a04c0008a07310088060b008805d6008e0515008a05d6008e0583
008a047c008a0532004705d00072056e0027083000250526002705210027
04ca0070046b006704f000470402008205010082046b008202d400670478
005704f900570298006b027f001404b40055028900550769006b0507006b
04ca00820503006104f0008203c6006b03e900780321003a04fb0061049b
002906f5003604610029049b002b04210069059700140574008a04b8008a
055c0047051f008a04ca00700613008a05d6008e02ea008a059d008a0574
001707310088060b00880517008405d6008e05f6008a0515008a04e3003c
053200470566000606e600820526002706fb004906130055053e00820505
00d104b6000804bc00800408008403a5008204f9000a04eb009702c300d3
04d7005f0495002704fb00d3045d001d03bf008204ca00820568001904ca
00ac0530007e03eb00820430001904df000c064f00820471000c066a005d
069a007e04df008003da00820494000d048f000d05fc0082043d00740689
000d04ac0086033701090337004005e5008405e50084076400ac05d200a9
04ff009a04ff009a054c0008056d004204da008b05ba0042051d00420502
0042053b008d060300420320004203db000005c3004204600042070a0040
060c00400595008b052c00420595008b05420042046c002904ea004205c9
00c50537005807d8005c0581000d04ff005c04f3002504ff008004ca0074
040a0080051d00800457008004cd000d0548001b04f9007402ce00a603c1
001904d7007402d200a4077b00290532002904b600820509002d04ca0080
043c002903df00310386008e0532002504860032068c003c04ba00210511
0019043c001d0593000805b6004204fb0042050d00130562004205360025
0654004205510084034a0042061100420537001307690040065e00400527
003905e0008b05f700420599008b0572004204fb0013052c004205420040
0631006c0581000d0676007f05c500290504009605530080057d004f04be
001404c6007e04080074043c007204d1002905110097028b008204ca0074
04a8001d052c004f049900140455006904b60082054800310526004d0536
007a03e10074040e0027049b0025060900760558fffc06560025067d007c
04f2007e04260080056000210538001f061d007c04cf008a070e00310298
006b027f001402ce00a603c1001904c2009904c200b804c2009004c200a8
04c2005504c200c404c2009604c200b504c2009004c2007d05fa00a905fa
00a905fa00a9037600af03760032061a0087061a0087060d002205e00099
057100a40650009905810099050d009905ea00a406800099032c0099031f
003d060b00990517009907af009906790099064900a4057b0099064900a4
05e7009904e200a1058300480648008805df003608c90031059300390590
00390524007d04d0007d055f005c04610099056c009904ce00990326007b
04dd006b0564006b02e2008002cb00220515006902d4006907f700800574
008005340099056f0074055f0097042100800446008d0376004b05670074
050b00400788004d04c5003b050b00400481007e060d002205e000990508
009905cd0059058100990524007d06800099064900a4032c0099060b0099
05e9002407af00990679009905770094064900a406620099057b00990541
00480583004805cd00190755008b059300390783005c0690006705c10097
057300ec053b0029052200950465009a03fc009905740019055700ae032c
00ec05520074051d0036057300ec04be002e042400990534009905d70024
053100c205a7009404450099046e00240548001906c3009904e0001906e9
00700706009404df006e03da007004b4000b048f0008061a008204610074
06a1000f0513009d038b0126038b005205e5008405e500840824009f05fa
00a9056a00b0056a00b005ef001a0609004b0550009c065d004b059f004b
0588004b05d3009c06ac004b0376004b045700190665004b04da004b07d0
004b06b9004b0634009c05c8004b0634009c05d7004b04f6004305740042
068400f105d2005a08b7005a064300300592005a058b0042056700940525
0088044b009405730094049700940515001705890019055c0087030100bd
03ea001905240088030a00b9080e003905a70039050a0094057600420525
0094048b003903f6003103c800a405a700310499002e0700004005120021
0581002b047e002105ef001a0609004b057e004b059a0019059f004b058b
004206ac004b0634009c0376004b0665004b05d2001a07d0004b06b9004b
05dd00550634009c06ac004b05c8004b0634009c057e00190574004205f1
005207030088064300300753009c069000450588008b05b4009405f90088
0527001a051c00940452008b048d0088054e0039058000b402ee00a90520
00880508002b05cb00880500001904ae0083050a009405b1003d05a20083
059a00940431008b0457002c050800310680008b05df002106db003106fe
00940550008b0474009405e7003105ac0034069b0094053300ac0788003d
02e2008002cb0022030100bd03ea00190371000004890000078f00000371
000004890000078f00000371000004890000078f00000371000004890000
078f000002f2000002f2000005000334052503ab044f0000044f000002f2
00000000fccb0000fcc80000fcc80423000005c500000000f7ca0000f7c9
0000f43404f600000000fc910000fcb10423000004ed0000065a000005fa
009505fa009505fa009505b700b4024200ae05fa0095041d003205fa0095
05fa009505e3009505fe009505fe009505fe009505fe009505fa00950645
006c0498007d0499006a04690032066f0032087a00320a8500320319005f
0319004b032c004b052a006e0319003c0319003c032c003c052a004602d9
00e4030800e4033100e4035f00e402d9002d0308002d0331002d035f002d
039800b403f400aa04e000a005de00960398004103f4004104e0004105de
004103c000e403e400e4040e00e4043f00e403c0002d03e4002d040e002d
043f002d02e0007d02e0007d0315007d035c007d02e0006a02e000350315
0035035c003502d900e4030800e4033100e4035f00e402d9002d0308002d
0331002d035f002d02d900e4030800e4035f00e4035f00e402d9002d0308
002d0331002d035f002d02cd00e402d900e4030800e4033100e4035f00e4
02cd002b02d9002d0308002d0331002d035f002d02cd004e02cd004e02cd
004e02cd004e02cd002502cd002d02cd01ad02cd002505f100230452001f
06010023061e00230624002305fe002306a9002206c70022077100220822
00220bcc002204c1006906740069084600690a6e0069079c006909a20069
0c4300690a7700690cd000691040006904db006f0674006908460069079c
006909a200690c4300690a7200690cd00069104000690516006906740069
096e01910516006906740069084600690516006906740069084600690913
01b50a9b001a10a600ad17310096081400690c12006911310069175a0069
033f000004890000078f00000e7300000321000004710000078900000e6d
0000033f000004890000078f00000e730000033f00000471000007890000
0e6d0000032100000489ffff078900000e6f000003210000048900000789
00000e6f00000321000004700000079000000e7400000321000004700000
079000000e7400000321000004700000079000000e740000032100000470
0000079000000e74000004f0000007f700000bbc00000ddd000011110000
04f0000007f700000bbc00000ddd00001111000007f300000bb800000dd9
0000110d000007f300000bb800000dd90000110d000004f0000007f30000
0bb800000dd90000110d000004f0000007f300000bb800000dd90000110d
000004ed000007f300000bb800000dd90000110d00000498007d04cd007d
0502007d0498006a04cd006a0502006a0357005f0357005f03b1005f03fa
005f034300730357008703b1008703fa0087028800f7029500f702a700f7
043b00f7046600f704a000f707db005a07db005a079f005a079f007309f8
0073096f0073096f0073096f0073096f0073096f0073096f0073096f0073
096f0073096f0073096f0073096f0073077c0073077c007306ed007306ed
007a08480073077c007306ed007306ed007a03d2005a03d2005a05bd005a
05bd005a070e0073070e0073070e0073070e00730858007306b4007303be
005003be005006eb007306eb007308580073085800730858007306eb0073
06eb007306eb007306eb0073070e0073070e0073070e0073070e007305f8
008705f8008705340087053400870534008705340087063c008705ea0087
063c008705ea0087059500870595008705ea008705ea008705ea008705ea
0087063c0087063c008706c6007306f6007306f600730482007304820073
03430078034300780677006d0677007d0677007d0677006d053e004b053e
007d061a007d061a007d06b4007a06b4007a06b4007a06b4007306b40073
06b40073075e007303e6006406b4007306b4007303f4005103f4005106b4
00730377013606b400730376005006e600b006e600730377000003770000
06e600b006e60073037700510377005106fa007306fa00b00377000a0377
000a06fa007306fa00af037700510377005106b4007a05b6005006b4007a
05b6005006b4007a06b4007a06b4007a06b4007a06b4007a06b4007a06b4
007a06b4007a05b6005005b6005006b4007a06b4007306b4007306b40073
06b4007306b4007305c800730858007305c8007c061e0089075e0073061e
0073047300880473007304c8005004c800500a8700ad110600c30a8700ad
110600c30a8700ad110600c3082e00f00c6300fa082c00f00c6300fa05db
00be076d00be076d00be07ca003c0a11003c07ca003c0a11003c09d900be
05ab001a091301b510a600ad05ab001a091301b510a600ad0cc700630d52
0069143d006904b1006304c100690846006904b1006304c1006908460069
04b1006304c100690846006904b1006304c100690846006904b1006304c1
00690846006904b1006304c100690846006904b1006304c1006908460069
04b1006304c100690846006904b1006304c100690846006904b1006304c1
00690846006906960073069600730846006904b1006304c1006908460069
04b1006304c100690846006904b1006304c100690846006904b1006304c1
00690846006904b1006304c100690846006905d1000005d1000005d10000
05f2005804b80034057300a005b6004605b600de08290064082900a00932
00640616007c0616007c09c8009509640095073e0085073e008f073e007c
0370007804500099056e0078061d0064061d007806be006406be00820514
00de037400aa02f800960341005f03410064038d00b4038d0064034100a0
034100c803110064031100c802cd00e402cd002b02cd00e402cd002b02cd
00e402cd002b02f9007d02f9008205fe009505fe009505fe009505feffff
031a00e4031a0078024600b4025300820544004605b600de05b600de0562
005205580059056b00690562007805440046054400460544005205440046
05a7005005a700500544005205440046054400520544004605c5000505c5
002005c5000505c5002007f600a207f600a207f600a207f600a207f600a2
08c8007807f600a207f600a207f600a207f600a207f600a207f600a207f6
00a207f600a207f600a207f600a207f600a207f600a2095700a2095700a2
05970082059700820597008205970082059700820816008205ca009605ca
009605ca009605ca004605c60082068b0064068b0082064c00a0064c00a0
064c00a0064c00a0064c00a00461006404610064025d00aa025d00aa0389
00aa038900aa06ce006e06ce006e06ce006b09bf00850597008205c8006c
05fa009505fa009505fa009505fa009505fa0093046c009605ca009605ca
0096062b00780450009906b2009606b20096051700960517009605170060
05170060051700840517008406b400a0041d0032041d0032041d0032066f
0032066f003205fa009505fa009505fa009505fa009505eb00b4084c00a0
0514006402e0004607a200950377013605fa009505fa009505fa009505fa
009505fa0095063b009505fa009505fa009505fa009505fa009505fa0095
07f600a207f601cd05b7011905b700b405b7009705b700b005b700aa07f6
00a207f6020807f600a207f600a207f600a207d0001e07d0001e07d0001e
05fa009505fa00950266004605eb0078057300a0057300a0057300750573
0075057300a0057300a0048d00a0048d00a004c800a004c800a0072c0096
072c009605af003c05af003c05db00be05db00be05af003c04b8003404b8
003604b8003404b800340614003406140034052000be0520001404b80035
04b8003304b8003304b8003404b8003404b8003404b8001704b8001705fa
009504b8001704b8fffa05ee006405ee00a005fa009505fa009505fa0095
05fa009505e2009505e2009505fa009505fa009505fa009505e3009505fa
009505fa009505fa009505fa009508ac00a009b200950d06009505fa0095
05fa009505fa009505fa007905fa009505fa009105fa009505fa009105fa
009505fa009105fa009505fa009105fa009505fa009105fa009505fa0091
05fa009505fa009105fa009505fa009105fa009505fa009505fa009505fa
0095060200950602009505fa009505fa009505fa009505fa009505fe0095
05fe009505fe009505fe009505fa009505fa009505fe009505fe009505fa
009505fa009505fa009505fa009505fe009505fe009509820095078e0095
0b2c009505fa009505fa007305fa009505fa007305fa009505fa009105fa
009505fa009105fa009505fa009505fa009505fa009505fa009505fa0095
05fa009505fa009505fa009505fa009505fa009105fa009505fa00910961
00950961009505fa009505fa009505fa009505fa009505fa009505fa0095
05fa009505fa009505fa009505fa009505fa009505fa009505fa009505fa
009505fa009505fa0095096800820968008205fa009505fa009505fa0095
05fa009505fa009505fa009505fa009505fa00950b2e00950b2e00950573
00a0057d00c8057d00aa057300a0057300a003bb007c054e007c054e007c
054e007c05c200de0607009505c20095073d0095060700de054e007c054e
007c054e007c054e007c054e007c05fa009505fa009502ff003903700078
037000780370007804e6009504e60079051400de0612007c024600b407d7
009507d7009505fe009505fe009506ab0032051400de0564003203b600de
03b600de0449004c04de009507b300c8046e009d046e009d046e0090046e
009002db008c0a7507ea0a7500000a7507ea0a75000005fa009503b800a2
07aa007c07aa007c05c6007c049d000a03de005808c500bc08c500cf05fa
009505a6009b04fc009b05550000055502ab05550000055502ab07ac003c
07ac003c073400950734009509c300de07fb00de0a4e00de0428002403d1
0069057100de057100de06eb00c805ec006407fb00de04db00de07fb00de
07fb00de07fb00de07fb00de07fb00de07fb00de07fb00de07fb00de07fb
00de07fb00de07fb00de07fb00de07fb00de07fb00ac07fb00de07fb00de
07fb00de07fb00de07fb00de07fb017307fb00de07fb00de07fb00de07fb
00de07fb00de07fb00de07fb017307fb00de07fb00de07fb00de07fb00de
07fb00de04db00de069100bc07fb00d704db00d407fb00de07fb00de07fb
00de07fb00de07fb00de07fb00de069100be04db005504db00d407fb00de
07fb00de07fb00de05b3007d07fb00de04db00de069100be05b1007c05b1
007c04db00de07fb00de07fb00de071f007c071f007c024600b20442008d
060200640498003c03a80069024600270602006404980068055b0037077e
00bc079d0058078300da02f800fa05ec006407fb00de07fb00de07c1007c
064700de057800de0566007c06bf00950518007c056c00bc056c00bc056c
00bc0676007c064a005805fa005805440058054400580544005805440058
0544008305f1006907fb00de03c600de064f00de064f00de068600bc0686
00bc04070000040703ab04070000040700000407000004070000070c0358
070c0358070c0126070c0064070c0064070c00af070c0064070c0064070c
00b4070c0064070c0064070c0064070c0064070c0064070c006407fb00de
0637005007fb00de0527000d052000b9040100b9052d000c043200b90446
0046058c00b9058c006b029600b9050400b90527000d06cd00b905c600b9
04860062058c006b057d00b9058c006b04cb00b90462002f0456002804c0
00170632005f04b900050612005f05e3005f052d000c04fd006304e300ac
0425001404a5006603d50071039b00680501005704c5007602d500a804a9
009d047c002a049e009704350041039f0067049d00600522003204a80098
03cd006904f7006403c3004604c40023060d0064043bffd506380096066a
006404b1006403cf006004db0041048500210635006404a6006e06f20032
059a0000055b0040051300b90577002504bf006004fb000f05c6004005bf
006e02d0004005c30040059a000007070040060000400534006205bf006e
060d00b905bf006e0538004a050a002f0463002104ca001e0675006e05f3
000f0650006b065c0049052d01100577006d055c000f0493004d04c50064
04310064045f007704b7004004f000640264004004c1004004c6002a04ee
000f044500730458006d04c400640577006904f6000f042a007a0559006b
03e6006204d00054062e006404d1ff4706380069069d0064050400690446
006405170057056000210655006404ef0064074d004a04ce000504ce004a
04ce008004ce004a04ce004a04ce004a04ce008004ce004a04ce00f904ce
005e04ce004a04ce004a04ce001b04ce004a04ce005304ce009d04ce0053
04ce004a04ce00c004ce002b04ce003604ce000504cefffb04ce001f04ce
000504ce009f04ce00a604ce005504ce00c304ce008d04ce00b104ce00d4
04ce009004ce005704ce00cd04ce00a604ce008704ce00e104ce003404ce
005604ce008e04ce005504ce009004ce00b004ce00c104ce008c04ce005a
04ce003104cefff904ce004704ce003104ce00ab0454003f02cd00e402cd
002b0b2300be0b2300be1132005a1132005a0f0900a1053f008205ca0096
057700820494005d04ce005e0270000006b10000075d000006b1000005dc
000005dc000005dc000006b10000075d000006b1000005dc000005dc0000
05dc000003bf019904b0014002da0095036900b204a50095058600b2066d
009507a300b2082b009509bf00b2075a00aa0539000005390264056e0000
056e0000039200e40392004206c200aa06c200aa06c200aa0539025904b0
00c904b000c904b000c908c8011b052503ab032100000321008803370000
033700b004340000033700b00337000001c9000002c1000002c100000304
000003040000073f00aa01b6000001b70000025a0000025a000002960000
02c40000022e00000270000001c5000002cf0000081400690c1200691131
0069175a0069074c00370b7b003c074c00370b7b003c076d00be0b2300be
076d00be0b2300be025800000641007306410000067300730673000004ae
007a04ae000004ae007a04ae000000f700000000fe700000fd9f04910000
065e0000035200b4035200260319005f0319003c02cd00e402cd002b03ec
00b003ec004202ec00e302ec002d036400610364003e049700a804970042
031200e30312002d03fc006503fc00410574009d05740041034400e30344
002d04c2006b04c2004502ec00e402ec002d02ec00e402ec002d02ec00e4
02ec002d03d200e403d2002d029100f70521015b031200e40312002d0312
00e40312002d031200e40312002d03f600e403f6002d02a200f704cc00f7
034400e40344002d034400e40344002d034400e40344002d042600e40426
002d02b900f7050e00f702c500f7054e00f70000ff400000ff360000ff49
0000fe3c0000fe400000fdd40000fdc20000fcfb0000fcb40000fdd40000
fdc20000fdad0000fdb00000fdb40000fdaa0000fdb40000fdaa0000fdb4
0000fdaa0000fdad0000fdaa0000fe8504fc000604fc000604fc000604fc
000604fc000604fc000604fc000604fc000604fc000604fc000604fc0006
04fc0006049a0079049a0079049a0079049a0079049a0034049a0079049a
0079049a00790298007902980079053a0077053a0077053a0077053a0070
053a0077053a0077053a007705ce007705ce007705ce007705ce007705ce
007705ce0077052f005a052f005a0609005a0609005a0609005a0609005a
0609005a0609005a04900012049000120490001203e8005003e8005003e8
005003e8000403e8005003e8005003e8005003e8005003e8005003e80050
03e8005003e8005003e7006803e7006803e7006803e7006803e7001e03e7
006803e7006803e700680239005302390053043f0069043f0069043f0069
043f003a043f0069043f0069043f006904cb006904cb006904cb006904cb
006904cb006904cb0069046b0049046b004904fc004904fc004904fc0049
04fc004904fc004904fc0049040800140408001404080014045dfffe045d
fffe045dfffe045dfffe045dfffe045dfffe045dfffe045dfffe045dfffe
045dfffe045dfffe045dfffe041700680417006804170068041700680417
002704170068041700680417006802610068026100680483006904830069
048300690483005b04830069048300690483006905140069051400690514
00690514006905140069051400690493004704930047055f0047055f0047
055f0047055f0047055f0047055f0047041600160416001604160016046e
006804be004202b500250439003904ce00960544007905530079053f0079
0494006804a300680494006802390053026c004f0000fd6f0000fe980000
fe130000fd3d0000fd940000fdaa0000fe790000fe4d0000fe730000fdfb
0000fd770000fdb30000fcc20000fd970000fd650000fe180000fe630000
fd1b0000fddd0000fe300000fddb0000fd8a0000fd970000fda40000fe3b
0000fe3b0000fd940000fe5f0000ffb10000ffb10000fe140000fd550000
fe280000fe1e0000fdb50000fdae0000fdd90000fda20000fdb80000fe11
0000fe1e0000fe870000fe0e0000fdf50000fe260000fdf80000fe010000
fd7a0000fe550000fe3b0000fdf00000fdfa0000fdf60000fdf10000fdf6
0000fdf10000fe620000fdbc0000fdec0000fd830000fda00000fd830000
fda00000fd830000fda00000fd830000fda00000fd530000fd7d0000fd53
0000fd7d0000fe540000fe510000fe510000fd5f059d000a04cb007904c7
00610480006e04800077055100320604000a04cb005f04a40070053a0076
0458007a044bffaa04e3007704f200160286006702980029050900790757
00690572ffaa053a0077068b00770544000a04ab007903f8005504620030
04be002d04be0042052d0079052d005a04f70012044d005e044300710448
0064047b00650998007808ee007806c00079066d007907e6007507930075
04fc00060298001f053a0077052f005a052f005a052f005a052f005a052f
005a04fc000604fc000606ee000004ed007704e3007705090079053a0077
053a0077044300710998007808ee007804e3007707610079081a00790503
00670572007504fc000604fc0006049a0079049a00790298ffa702980014
053a0077053a007704f8007904f80079052f005a052f005a04580071057e
00790554007904aa007a044d005e04fc0006049a0079053a0077053a0077
053a0077053a00770490001204fc000604800077044b002904be004203fa
006004e4002c052f001c04d80006049a0079027400170546007704f80029
0490001204fc000604e4007904e4007904e4007904800077054b0078054b
0078054b0078054b0078054b0078049a0079049a0079049a0079049a0079
049a0079044b007904e30077057e0079057e0079057e0079057e0061057e
00790298000202980040050900790509007905090079044b0079044b0079
044b0079044b007906860075068600750686007505720075057200750572
007505720075053a0077053a0077053a0077053a0077048b0079048b0079
04f8007904f8007904f8007904f8007903f8007103f8007103f8007103f8
007103f8007104be004204be004204be004204be0042052f005a052f005a
052f005a052f005a052f005a04d4001604d40016075f0016075f00160492
00150492001504900012044d005e044d005e044d005e045500330455ffeb
048b002c04f800790582007905560079044d005e0480006e03d500790461
00240461003004700033043b00690470006904330064026cff9e026cff9e
06780040045700490432004f0278000b03e700160463005305760068045b
003b0371006602bf002502b500250519001403a3005103a7003203820041
03ab002308130069044d003f0698005303e8005002390000043f0069046b
0049046b0049046b0049046b0049046b004903ee005503e8005003e80050
0605005003f4000803f4003f0432003f043f0069043f006903a700410221
fff40813006903f4003f0477005303e8005003e8005003e7007a03e7007a
0239ff9a0239ffef043f0069043f0069034f0025034f0053046b0049046b
004903d40041046a0040058e0069041e006403a3005103e8005003e70068
043f0069043f0069043f0069043f00690408001403400035059c00530343
0025068b0069068b006903a500470370005e03a300510311002803e70038
026b000b027f001504600068035e0015040800140289ffd103eb0029035c
003b020600c0034400c00256000c022700aa03e800500461003004610030
0461003003870069047000690470006904700069047000690470006903e7
007a03e7007a03e7007a03e7007a03e70068026c004f026c004f03f4003f
046a0040046a0040046a0040046a0040046a00400239ffda0239ffda0239
00210432003f0432003f0432003f022c003f022c0000022c0013022cfffd
06a8005306a8005306a8005304770053047700530477005304770053043f
0069043f0069043f0069043f00690473004904730049034f0053034f0053
034f0053034f00530370005e0370005e0370005e0370005e0370005e02b5
002502b5002502b5002502b50025046b0049046b0049046b0049046b0049
046b004904080013040800130632001d0632001d03de001703de00170408
001403a3005103a3005103a30051046a004002b500250632001d04080014
03e80050023c004f026c004f0278000b03e8003302ddffcf047400400454
003f03a300510423fffc03b1005a03a2003c02ea006a05b20068051e0005
045500680449005a03ee005e03ef006904b2004405570005045500550421
00620487006903ed007d03d5ffa5044d0069047a0014026100680261001d
0476006806a7004e04c4ffcf0483006905c3006904e000050444006803ce
006903e1002d0439002b0439003904750064048c00470474001603db0050
03e6005d03e6007903f50058086c006a0926007805de00680686007906ff
006407ad0075045dfffe0261001304830069049300470493004704930047
0493004704930047045dfffe045dfffe045dfffe044d0069044d00690476
0068048300690483006903e6005d086c006a09260078044d0069071c0068
079e0079047c005504c40064045dfffe045dfffe04170068041700680261
ffaa026100030483006904830069046a0068046a00680493004704930047
03e6005d04e3006804a400680430006903db0050045dfffe041700680483
006904830069048300690483006904160016045dfffe03ef006903b7001d
043900390396004b047b0027049300100447fffe04170068023b0007049b
0069046a001d04160016021000c6034e00c7028c0027020b00a5045dfffe
04710068047100680471006803ef006904aa006a04aa006a04aa006a04aa
006a04aa006a041700680417006804170068041700680417006803d50068
044d006904e3006804e3006804e3006804e3004604e300680261ffe70261
003304760068047600680476006803b7006803b7006803b7006803b70068
05bb006505bb006505bb006504c4006404c4006404c4006404c400640483
00690483006904830069048300690433006804330068046a0068046a0068
046a0068046a006803a4005e03a4005e03a4005e03a4005e03a4005e0439
003904390039043900390439003904930047049300470493004704930047
04930047044700140447001406a4001d06a4001d041b0016041b00160416
001603db005003db005003db005004e300680439003906a4001d04160016
045dfffe03c1002703c1ffd20433001d046a006804e3006804a8006803db
005003ee005e03d5003003550068045c00ac03b1005a0470006904780069
04a8006903f8005f03b9006d045b006804a7006804080013027f0015027f
001502390053028cffdb069b00490477ffa3043a0069034f0053042b0061
0225ff870255ff8702b5002504b1000b04320069042700490408fffe03a7
0041023900530000fef50000ff370000fe7b0000feef0000fe1c0000ff07
0000fdf40000fdb50000fda70000fdbc0000fd850000fe520000fdc50000
fdad0000fd8c0000fdf50000fd5d0000fe520000fda10000fda10000fd71
0000fdd90000fdb40000fef50000fdda0000fda70000fdc50000fd8c0000
fdb50000fda70000fdb50000fd8c0000fdda0000fdda0000fdb50000fdb5
048000770480006e048000770480006e063a000004dcfff1064f007504aa
007904420000038000360380006903800036046d00b5046700b204830069
03ef006903ee005e03ef006903ee005e0433fffa0433fffa0433fffa03d5
006804840069034a004b05b1006503a6001c039f005a042b006804fc0006
05e9ffce0646ffce0524ff9c04fcfff50605ffe2063f000005baffce04fc
0006052d000004fc000604fc000604fc000604fc000605e9ffce0646ffce
0524ff9c04fcfff50605ffe2063f000005baffce072c0006072c00060819
ffce0876ffce0754ff9c072cfff50835ffe2086f000007eaffce05a50000
06b3ffce06acffce0563000006cfffe206a5000005ab0000059300000689
00000797ffce0790ffce06c8ff9c0647000007b3ffe20789000006faffce
068f000006770000057e0079068900000797ffce0790ffce06c8ff9c0647
000007b3ffe20789000006faffce07ae007908b9000009c7ffce09c0ffce
08f8ff9c0877000009e3ffe209b90000092affce03a3000004b1ffce04aa
ffce03e2ff9c0361000004cdffe204a300000414ffce03a9000003910000
029800350298001405fa000006feffce075bffce061c0000071affe20754
000005f60000064200000554000005f500000761ffe20737000006a8ffce
063d00000625000004dcfff104dcfff106160000071affce0777ffce0655
ff9c063800000736ffe20770000006ebffce06120000065e0000056f003f
06160000071affce0777ffce0655ff9c063800000736ffe20770000006eb
ffce079f003f08460000094affce09a7ffce0885ff9c086800000966ffe2
09a00000091bffce04980068049800680498006804980068049800680498
006804980068049800680498006804980068049800680498006804980068
049800680498006804980068049800680498006804980068049800680498
006804980068049800680498006804980068038d006a038d006a038d006a
038d006a038d006a038d006a038d006a038d006a0458fffb0458fffb0458
fffb0458fffb0458fffb0458fffb0458fffb0458fffb0458fffb0458fffb
0458fffb0458fffb0458fffb0458fffb0458fffb0458fffb0458fffb0458
fffb0458fffb0458fffb0458fffb0458fffb0458fffb0246009f0246001f
0246ffd20246ffb0024600700246fff00246ffb70246ff880246ffcc0246
ffcc0246ffb1024600a6024600470246ff9c024600050246ffe0043f0069
043f0069043f0069043f0069043f0069043f0069043f0069043f00690442
008d0442008d045400000454000004540000045400000454000004540000
045400000454000004540000045400000454000004540000045400000454
000004540000045400000602006406020064060200640602006406020064
060200640602006406020064060200640602006406020064060200640602
006406020064060200640602006406020064060200640602006406020064
060200640602006406020064045dfffe045dfffe045dfffe045dfffe045d
fffe045dfffe045dfffe045dfffe045dfffe045dfffe045dfffe045dfffe
045dfffe045dfffe045dfffe045dfffe045dfffe045dfffe045dfffe045d
fffe045dfffe045dfffe06b0fffe06b0fffe06b0fffe06b0fffe06b0fffe
06b0fffe06b0fffe06b0fffe06b0fffe0417006804170068041700680417
00680417006804170068041700680417006804e3006804e3006804e30068
04e3006804e3006804e3006804e3006804e3006804e3006804e3006804e3
006804e3006804e3006804e3006804e3006804e3006804e3006804e30068
04e3006804e3006807360068073600680736006807360068073600680736
0068073600680736006807360068026100680261003f0261fff20261ffd0
02610068026100100261ffd70261ffa80261ffec0261ffec0261ffbc0261
0068026100670261ffbc0261002902610003048300690483006904830069
048300690483006904830069048300690483006904330068043300680433
fffa0433fffa0433fffa0433fffa0433fffa0433fffa0433fffa0433fffa
0433fffa0433fffa0433fffa0433fffa0433fffa04de003f04de003f04de
003f04de003f04de003f04de003f04de003f04de003f04de003f04de003f
04de003f04de003f04de003f04de003f04de003f04de003f04de003f04de
003f04de003f04de003f0731003f0731003f0731003f0731003f0731003f
0731003f0731003f0731003f0731003f04fc000604fc000605e9ffce0646
ffce0524ff9c04fcfff50605ffe2063f000005baffce074f0006074f0006
083cffce0899ffce0777ff9c074ffff50858ffe208920000080dffce057e
0079068900000797ffce0790ffce06c8ff9c0647000007b3ffe207890000
06faffce07d1007908dc000009eaffce09e3ffce091bff9c089a00000a06
ffe209dc0000094dffce056f003f06160000071affce0777ffce0655ff9c
063800000736ffe20770000006ebffce07c2003f08690000096dffce09ca
ffce08a8ff9c088b00000989ffe209c30000093effce0247008a024700b2
024700a1024700790247ffb30247fff00247ffec0247ffb30247fff10247
00040247ffb30247ffe30247ffe30247ffb30247008a0247001b0247fff6
024700a3023000a802980079025300630589007904c7002e048b00790446
002904d30079079000250458007105630079056f00790533002e06440042
058200790705007907990079059700750480007704be0042049000120490
001204e2001506d100420503002f0502002f04ff007905c4ffe205c4ffe2
02980079076200250557007905700024056c0079058200790502002f068a
007504fc000604fc000606ee0000049a0079053a0076053a007607620025
04580071044300710589007905890079053a0077053a0077053a00770496
006f04cd002504cd002504cd00250502002f0446007906cd00790446ffaa
048300150492001504c7005b06db005b069e005d0456005d077900240789
007904df007705bf00420458007a055a002404b8006a0427002404730049
03a200140423006a05d3001203aa0050045c006a048b006a04370034052e
003904bd006a05d6006a0658006a04570067038700690417003904080013
0408001303f8001705ed00390444002904450029046a004004a6000004a6
000005b600120477006a0479002504ac006a04b6006a043f002905620068
022c004f03e8005003e800500605005003e7007a03f8005f03ee005505b6
001203aa005003a7004104b8006a04b8006a043f0069043a0069043a0069
03c30050040800140408001404080014043f00290393006a05fc006a03a2
ffbb03cf001703de001704700069062c00690583004703b70047060f0025
0655006a0401006804d9003903b9006d0465002504e700680449001d0433
006803d200270431006806b8003603e6005d04a1006804d90068049d001d
057f003904e30068063100680688006804ac006a03ef0069043900390416
00160416001604580016062000390476002a047c002a046d00680538000a
0538000a0261006806b6003604a2006804b0002404d9006804e300680476
002a05bb0065045dfffe045dfffe061efffe041700680487006904870069
06b6003603e6005d03e6005d04e7006804e7006804830069048300690483
006903fb005d041a0028041a0028041a00280476002a03d20068064c0068
03d2ffa5040c0016041b001104490049060e004905d3004c03eb004c066a
002406a10068043f00690512003903ed007d049d002403f6003f046f0068
0473004a03af006903e800530563005f03aa005005220050042c0069027f
0015045b0068042800680472001e045c0049046a0050045b005002460061
0263ffed02180030048f003f068c0049069900530472005304920062061e
006905ee006405c700680342002203420022033300220346004a032f004e
03370022043100640370005e0256ffa7027effa7032d0022023cff74026c
ff7402b5fff3063200060408000803a5000003a3005103ea005103a70039
02e7000602dc000a0305001e03a900730642005a042f006a0428006d0474
006804b600680225ff740423fff6039d00610460006804a7006802e70006
02dc000a06ca006906d300690711006905460025043500250465002505c1
002506a8004f04c9003f049a003f04ac0032041a00aa056b0022056b0022
0418fffc05a8fff40611005f0447004103d00069047700680486004603f5
006603ab0050024800540236000704490066039d002905730065048d0053
0457006903c7005a0491005a0490005a04a5001d068f0055041c0071043f
0069043f006903fd006704400021041a002103fe00320459004904ac0078
05e5005a04b70078040e0013062c002003970051039f005403be0050046d
00250393006a040f00000489006a03f50068053f00230479002503b00015
04d0002f0395005d03a0002203d9005d035b005d0365004f039b006403f6
005d01ef005d01e7002503af005d031a005d04af005d03f2005d03f2005a
03d50064037800580357005d0399005d035c002c03d40053055b001e02ef
004c02ef0031034c005d046f005303460038034e005d02ee005d02ee004e
02a2004a0294003602f7004101c2004c0319004004db004e034a004e032c
005d02c60053032c005d032c005d03500047021c002e034b0047030b004a
04d300470313002702fd000c03530090033100190322005b0420005d02f9
000f01c2004e0284004e034b004703130027035300900331001903080061
0420005d02f9000f06850049046bffbe04700069028affe906dafff804a9
fff8047dffd1036dffee034dffda03ac003502ddffdc03ba005103f40008
0374005003da002806f700250282001702a7002604be000b049f000804aa
fffa0461003004700069026c004f054200680432003f022c003f06a80053
0477004104730049034f00530370005e0306ff870408001303de001703a3
005103e80050046f00680478006903e7005603b9006d03aa0050049a005f
0239005303b1005a0289ffeb046b0049038f0041034c004302ab005d02d2
005d0330005d029f004001eb004b01cd000e0342005c034b004701ea000f
01c2004001cb005001f30015020efff101ef003601b9003d02a4005004d2
004e04d30047038cfff6039d004e034e004a032c005d0435005c029b0056
01f6fff6021c002e037300080325005d0336003b0318003f0313001902bf
004d0351004d02ea004d02b7003e0342006a034900410349004f01b40015
0284004e027b002c02c0002c030800160497002f0313002701e500910325
009101c5006901c5004701c5006901e3005001e30050020e0005020e000a
046e007c046e007c046e0074046e007401810082022900370229003c0181
0082024c001e022900050229006e0231006e0209005a021f0078021f0064
022c001e022c001e022c001e022c001e016bfefb02d400280309002701b9
0040029b005602e800240218000a03340064033400640334006403340064
0334006403fc006403fc006403fc006403fc00640334002003fc001603fc
001303fc001403fc001703fc00170334000803fc000403fc000403fc0004
03fc000403fc00040334ffff03fcfffe03fcfffe03fcfffe03fcfffd03fc
fffc0334fffc03fcfffc03fcfffc03fcfffc03fcfffb03fcfffb03340020
03fc001303fc001603fc001603fc001603fc001603fc006403fc006403fc
006403fc00640334002003fc001603fc001603fc001303fc001403fc0017
0334000803fc001803fc001803fc001803fc001803fc00180334ffff03fc
001c03fc001c03fc001c03fc001c03fc001c0334000803fc000403fc0004
03fc001803fc001803fc00180334002003fc001403fc001303fc001603fc
001603fc001603fc006403fc006403fc006403fc00640334002003fc0016
03fc001603fc001603fc001303fc00140334000803fc001803fc001803fc
001803fc000403fc00040334ffff03fc001c03fc001c03fc001c03fc001c
03fc001c0334000803fc001803fc001803fc001803fc001803fc00180334
002003fc001703fc001403fc001303fc001603fc001603fc006403fc0064
03fc006403fc00640334002003fc001603fc001603fc001603fc001603fc
00130334fffc03fcfffb03fcfffb03fcfffc03fcfffc03fcfffc0334ffff
03fcfffc03fcfffd03fcfffe03fcfffe03fcfffe0334000803fc000403fc
000403fc000403fc000403fc00040334002003fc001703fc001703fc0014
03fc001303fc001603fc006403fc006403fc006403fc006402ea00b102ea
00b102b30032034200660301004702b30032026d000f01ef003c01ef003c
024700410229003c0391003c03910037029c0002017e0073026b008c026b
0082026b008c026b008203820032038200320382003c027a004602a20046
0269003202b90032044100820441008202ef004c02ee005d032c005d02e8
002402ee004e040000000800000002ab000002000000015500000000ffdc
0000ff250000ffdc0000fe51019a000001c7000002f7000001c500690301
006902e5005402a8006c021c00aa054a004b046e0045046e006d046e0055
046e006106a80053046e001e0a070079082600790708002a046e0053046e
0026046e00380953001e046e0029046e0032046e006204e60006046e0049
046e0077046e006c0810006407bc0015076d007e076d0063076d007e076d
0063076d0073076d003a076d007e076d0086076d007e076d0073076d0086
076d0090046e00920539ffdd053902590539ffdd053902590539ffdd076f
007704db004d04d2007904060032046e001004c80077048c002806090064
04670066042b00b003570013039a00380408006903e000140000fd710000
fd7c0000fd690000fd820000fe450000fe4c0000fe740000fe760000fe43
0000fe430000fd8d0000fd8d032f00140000f73f0000f7290716004d06ad
007904e1fff2075a007906d60011090800790449006706430032054a0020
08eb00770580007708bf007708bf00770716004d044a006d059b007805ad
006a0436ffeb0654006a0520ffea073f006a038a004605c100450471001e
08010069048a006905f9006805f90068059b007803750069065f00390609
00680472fff406950068060200040815006803cc00530599002804b3001e
084d006904cb006906a6006706a60067065f003903cc0069099b006403e3
006f0293002603680023036a003603da003e0370004f03d0005f0364003e
03e0005e03cf004d099b0064099b0064099b0064099b0064099b0064099b
0064099b0064099b0064099b0064099b0064099b0064099b0064099b0064
099b0064099b0064099b0064099b0064099b0064099b0064099b0064099b
0064099e0064099e0064099e0064099f0064099e0064099e0064099e0064
099e0064099e0064099e0064099e0064099e0064099e0064099e0064099e
0064099e0064099e0064099e0064099e0064099e0064099e00640000fe6f
0000fe4508c800f9057300340573003405fa009505fa009505fa008c05fa
009505fa009505fa009505b9007205b9007207f600a207f600a207f600a2
060200950602009503ec009503ec009505fa009505fa009505fa009505fa
009105fa009505fa009505d100000487006f03be009b056900790490006a
04c4006805fa009505fa008a0417001d0449001d04b8003607a3000c0497
003f0497003f0497003f0497003f0497003f02d500e402d500e402d500e4
02d500e402cd00cc02cd00cc02cd00cc02d5002b02d5002b02d5002b02d5
002b02cd002302cd00aa02cd0023030000e4030d00e4032100e4032b00e4
031400e4031400e4031400e403000026030d002603210026032b00260314
0003031401580314000305db0087042d0024045c007604b200de04d500de
05ab00800913015b0a9b00b310a600ce17310159046e004e0541ff8805f1
ffb5045200000601ffb5061effb50624ffb505feffb506a9ffba06c7ffba
0771ffba0822ffba0bccffba052500f30516ff8f0516ff8f059f005a0587
00460544004605440046056b006902ff0039045a003904b1008704c10091
067400e6084600e60a6e00e607630087079c009109a200e60c4300e60a15
00870a7700910cd000e6104000e604cf007a04db0087067400e6084600e6
07990091079c009109a200e60c4300e60a4900910a72008c0cd000e61040
00e6051100280516003106740015096e00d8050e00280516003106740084
0846007c0533002805160031067400840846007c077b009505e200950675
006e057f004202ed00c805b2007c05fa009505fa009505fa009505fa0095
05fa009505e3009505e3009505fa009505e3009505fa009505fa009505fa
009505fa009504db009504280095071e009505c2009505c2009506830095
073d0095073e008505870046059a00de04fe009504fe009504fe009505d8
007c09d300e609d3045909d304590497ff880497ff880497ff880497ff88
0497ff8805b600de05b60046073e007c0544005205b6004605b600460562
00640558006e056b00750544005205440052054400460544005205a7006e
05a7006e0544004605440052054400460544005205c5002005c5000505c5
002005c500050957005a095700730816008205c6008206ce007805c8008c
05fa009505fa009505fa009505ca009605ca009606b40073041d0032041d
003205ab00800913015b10a600ce05ab00800913015b10a600ce0cc70087
0d520091143d00e604b1008704c10091084600e604b1008704c100910846
00e604b1008704c10091084600e604b1008704c10091084600e604b10002
04c10013084600a704b1008704c10091084600e604b1008704c100910846
00e604b1001804c10022084600e604b1008704c10091084600e604b10087
04c10091084600e60696008806960088084600e604b1008704c100910846
00e604b1008704c10091084600e604b1008704c10091084600e604b10087
04c10091084600e604b1008704c10091084600e6051400a002e000a007a2
00950377005105fa009505fa009505fa00950266009605200014052000be
05e2009505e2009505fa009505fa009505e3009505fa009505fa009508ac
009505fa009105fa004b05fa009105fa009505fa009105fa009505fa0091
05fa009505fa009505fa0095060200950602009505fa009505fa009505fa
009505fa00950982009505fa009505fa009505fa009505fa009505fa00ac
05fa009505fa00ac05fa009505fa009505fa009505fa009505fa009505fa
009505fa0095057300a005c200950607009502ff003904e6007a06ab0032
0564003204b100780473007304dd007304b1007805040067052500f30525
ff9c0000fd940321000004890000078900000e6f00000296000003210000
04890000078900000e6f00000000fd9404430000046e000004230085046e
00a80556005a04900047099b0064047e0055046e005504960055046e0051
00>
<00000000000000ec000000ec000000ec000000ec000001de000001de0000
01de000001de000001de000001de000001de000001de000001de000001de
000001de000001de000001de000002be000002be00000380000003800000
038000000380000003800000038000000380000003800000038000000380
000003800000038000000380000003800000038000000380000003800000
038000000380000003800000038000000380000003800000038000000380
000003800000038000000380000003800000038000000380000003800000
038000000380000003800000038000000380000003800000038000000380
000003800000038000000380000003800000038000000380000003800000
038000000380000003800000038000000380000003800000038000000380
000003800000038000000380000003800000038000000380000003800000
038000000380000003800000038000000380000003800000038000000380
000003800000038000000380000003800000038000000380000003800000
038000000380000003800000038000000380000003800000038000000380
000003800000038000000380000003800000038000000380000003800000
038000000380000003800000038000000380000003800000038000000380
000003800000038000000380000003800000038000000380000003800000
038000000380000003800000038000000380000004fc000004fc000004fc
000004fc000004fc000005e6000007c0000007c0000007c0000007c00000
090600000980000009800000098000000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a2400000a2400000a2400000a2400000a240000
0a2400000a2400000a2400000a2400000a2400000a2400000a2400000a24
00000a2400000a2400000a7c00000a7c00000a7c00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000aac00000aac00000aac00000aac00000aac00000aac00000aac
00000aac00000aac00000aac00000aac00000aac00000aac00000aac0000
0aac00000b1400000b1400000b1400000b1400000b1400000b1400000b14
00000b1400000b1400000b1400000b1400000b1400000b1400000b140000
0b1400000b1400000b1400000b1400000b1400000b1400000b1400000b14
00000b1400000b1400000b1400000b1400000b1400000b1400000b140000
0b1400000b1400000b1400000b1400000b1400000b1400000b1400000b14
00000b1400000b1400000b1400000b1400000b1400000b1400000b140000
0b1400000b1400000b1400000b1400000b1400000b1400000b1400000b14
00000b1400000b1400000b1400000b1400000b1400000b1400000b140000
0b1400000b1400000b1400000b1400000b1400000b1400000ba600000c3a
00000d1600000d1600000de600000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000eee00000eee00000eee00000eee00000eee00000eee00000eee
00000eee00000eee00000eee00000eee00000eee00000eee00000eee0000
0eee00000f3200000f3200000f8a00000f8a00000f8a00000f8a00000f8a
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe400000fe400000fe400000fe400000fe400000fe40000
0fe400000fe400000fe400000fe400000fe400000fe400000fe400000fe4
00000fe400000fe4000010380000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c0000108c0000108c0000108c0000108c0000108c0000108c0000
108c0000108c0000108c0000108c0000108c0000108c0000108c0000108c
0000108c000100001c9800c0002d0097000600020010002f00660000095b
111f000300010000000e00ae000000030000000000640000000000030000
0007007600640001000000000000003200da00010000000000030012010c
00010000000000040012011e000100000000000600120130000100000000
0007003b014200030001040900000064017d0003000104090001002401e1
0003000104090002000e0205000300010409000300240213000300010409
00040024023700030001040900060024025b00030001040900070076027f
00a9002000320030003100320020004d006900630072006f0073006f0066
007400200043006f00720070006f0072006100740069006f006e002e0020
0041006c006c002000520069006700680074007300200052006500730065
0072007600650064002e00430061006d0062007200690061002000690073
00200061002000740072006100640065006d00610072006b0020006f0066
00200074006800650020004d006900630072006f0073006f006600740020
00670072006f007500700020006f006600200063006f006d00700061006e
006900650073002ea92032303132204d6963726f736f667420436f72706f
726174696f6e2e20416c6c205269676874732052657365727665642e5857
554c564a2b43616d627269614d6174685857554c564a2b43616d62726961
4d6174685857554c564a2b43616d627269614d61746843616d6272696120
697320612074726164656d61726b206f6620746865204d6963726f736f66
742067726f7570206f6620636f6d70616e6965732e00a900200032003000
3100320020004d006900630072006f0073006f0066007400200043006f00
720070006f0072006100740069006f006e002e00200041006c006c002000
520069006700680074007300200052006500730065007200760065006400
2e005800570055004c0056004a002b00430061006d006200720069006100
4d0061007400680052006500670075006c00610072005800570055004c00
56004a002b00430061006d0062007200690061004d006100740068005800
570055004c0056004a002b00430061006d0062007200690061004d006100
740068005800570055004c0056004a002b00430061006d00620072006900
61004d00610074006800430061006d006200720069006100200069007300
200061002000740072006100640065006d00610072006b0020006f006600
200074006800650020004d006900630072006f0073006f00660074002000
670072006f007500700020006f006600200063006f006d00700061006e00
6900650073002e0000>
<b9002001feb40918014a20b801fab40918014a20b801f9b40918014a20b8
01f8b40918014a20b801f7b40918014a20b801f6b40918014a20b801f0b4
0918014a20b801efb40918014a20b801eeb40918014a20b801edb4091801
4a20b801ecb40918014a20b801ebb40918014a20b801e6b40918014a20b8
01e5b40918014a20b801e4b40918014a20b801e3b40918014a20b801e2b4
0918014a20b801e1b40918014a20b801e0b40918014a20b801d3b4091801
4a20b801d2b40918014a20b801d1b40918014a20b801cfb40918014a20b8
01ceb40918014a20b801cdb40918014a20b801ccb40918014a20b801a0b4
0918014a20b8018fb40918014a20b8018eb40918014a20b8018ab4091801
4a20b80188b40918014a20b80187b40918014a20b80186b40918014a20b8
015bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b4
0918014a20b80154b40918014a20b80150b40918014a20b8014cb4091801
4a20b8014bb40918014a20b8014ab40918014a20b80136b40918014a20b8
0130b40918014a20b8012fb40918014a20b8012db40918014a20b8012cb4
0918014a20b80109b40918014a20b80107b40918014a20b8010540ff0918
014a20f40918014a20f20918014a20f10918014a20f00918014a20ef0918
014a20ed0918014a20ec0918014a20ea0918014a20e50918014a20e40918
014a20e30918014a20e10918014a20de0918014a20da0918014a20d80918
014a20d30918014a20cd0918014a20cc0918014a20ca0918014a20c90918
014a20c80918014a20c60918014a20c40918014a20c20918014a20c00918
014a20bf0918014a20bd0918014a20b30918014a20b10918014a20af0918
014a20a50918014a20a40918014a20a00918014a208e0918014a208d0918
014a208c0918014a208b0918014a208a0918014a20890918014a20850918
014a20840918014a2083091801403e4a20800918014a207f0918014a207e
0918014a207d0918014a20620918014a20510918014a20500918014a2048
0918014a20420918014a200e0918014a0f41630441001f0441002f044100
3f0441004f0441005f0441006f0441007f0441008f0441009f044100af04
4100bf044100cf0441000d005f03ea0001008003f4009003f400a003f400
b003f400c003f400d003f400e003f400f003f40008002f0433003f043300
4f0433005f0433006f0433007f0433008f0433009f043300af043300bf04
33000a001f0434002f0434003f0434004f0434005f0434006f0434007f04
34000700cf042300df042300ef04230003000f0423001f0423003f042300
5f0423009f0423402305f0e201b0fdc0fd02c0fdd0fde0fdf0fd04d0fde0
fdf0fd03c0ffd0ffe0fff0ff0470410a0425000100c0042500d0042500e0
042500f00425400c04e0bef0be02e0bef0be020f41110421003f04210002
001002580001000f025800e002580002000f040a0001000f0408b4010f26
010f411b04070001000f04060001007f02170001000f029c001f029c002f
029c003f029c004f029c005f029c000600df029c00ef029c00ff029c4053
03dfe016171cd4d516171c7b7c161b7b7c19d1d216171c767716171c6d70
16171c6c6f16171c6b6e161b6b6e7f721a747514151c676a14151c666914
151c6568141b656885711a1973167a431921794319211941310292009902
920002001c0292002c029200020299029a029b000c028d028e028f000c02
8a028b028c000c001b0299008b02990002000f0299009f029900bb029900
db0299000402a5028b02a7000d029f029a02a1000d029c028e029e000dff
e8028eb2142339b9ffe8029ab2142339411a0282027d0008002b0281027c
0005002b027e027a0004002b027d027a0004002b027a02570005002b0277
02670005002b02670257b2052b20b80270b21b2039bd027202570004002b
026e0257b2042b20b80257b331333909414102710019027100aa025700b8
025700040069027100da025700e802570003028402790006002b02800279
0004002b027f02790008002b027b02790008002b027902560006002b0278
02660000002b027602660008002b027502660008002b027302660008002b
026602560006002b027402560000002b027302560000002b026f0256b207
2b29415002560001008602560001025d025e025f000c025102520253000c
024e024f0250000c000b024e000b0251000a025d003b024e005902510076
02510075025d009b024e00b5025d00d9024e000a0269024f026b000d0263
025e0265000d026002520262000d0269003c0263003c0260003c025d003c
0251003c024e003c0244023c0005002b024302110002002b0240023c0005
002b023e02110004002b023d0211b2042b464115023c00010046023c00c6
023c0002023b02110007002b023902110006002b023702110004002b0221
0211b2072b20b80233b21316394116022f02110004002b022e0211000400
2b022d02110005002b022c02110004002b022b02110004002b022a0211b2
052b474142021100010005021100a502110002003b0233004b0233006402
11007402110004024202100007002b024102100005002b023f0210000200
2b023a02100007002b023802100007002b023602100007002b0235021000
07002b022002100007002b023402100005002b023102100005002b023002
100007002b022902100007002b02280210b2072b8a416e02100001001a02
1000b902320002021702180219000c020b020c020d000c02080209020a00
0c000b0208000b020b000a0217003b02080059020b0076020b0075021700
9b020800b5021700d90208000a022302090225000d021d0218021f000d02
1a020c021c000d0223003c021d003c021a003c0217003c020b003c020800
3c0153014d0002002b014e014d0002002b0156015c0004002b0155015c00
04002b0157015c0002002b01da01d4000a002b01d801d4000a002b01e501
e00005002b01e101e00005002b01e001eb0005002b01ef01eb0002002b01
ec01ebb2052b40b801ebb2090a39b9ffc00104b2313139b9ffc00104b21b
2039b8ffc0b4c71f203940b80103b22c2c39ba010301000100b21f2223b9
01030100b3c01e1e23ba010301000100b21d1d23b901030100b3c01c1c23
ba010301000100b21b1b23b901030100b3c0141a23b901030100b3800b13
23b901030100b340090a23b901020101b340508b23b901010100b340508b
23410a01020100004f001f01010100004f001fffc00100b2505539b9ffc0
0100b323233940b80100b71d1e3940e81b1b39b8ffc0b4e724253956b801
08401301ddd8052b3bd64bd60240b00b0d39c1c0052bb8ffc040379f1313
39409c2f30399c9a012b9b9a052b9a91042ba999042b9992032b40c52c31
399291032b889198910209631863c7630320630d0f39b8fff0b4471f2539
cbb8010a401c019895012b379e019695022b1897262a3917970110953f40
39d99501bc0136012c0003002b0130b2cd042bb8012fb2cc042bb8012db2
cd032bb8012cb2cd042bbc014c014a0003002b014ab27f052bb9015b0154
b2042b0f41190154001f01540002018601880002002b018701880004002b
018901880004002b0188018f0003002b018e018f0004002b018fb385052b
3f410c01a0000101ce01cc0003002b01d201cc0006002b01d101ccb2062b
40b80107b2323239b80107b2af032bb8ffc0b3de1e2039b8ffc04011dc18
1a39c9ca032bcac8042b40c8212239b8ffc0b3c8151739b8ffc0b3c62425
39b8ffc0b3c6161a39b8ffc04023bf2d31395051032b40511b1b39e5cc04
2be4e3032b40e32a2a39cdcc052b40cc424439b8ffc0b3cc272739b8ffc0
b7cc171a39c2ea012bb80109b2da032bb8ffc04033ea252539dfea0140c4
1b1d39b3b1052bb1c0052b40c03d3d39c0af042bd3af052baf7d052b20da
121639c5bd01208e01108e01b8ffc0b38b363839b8ffc0b38b272b39b8ff
c040328b171a398c8d052b8d8a042b898a052b8a7f052bf4ef032bf2ef05
2bf180022bf0a0042bef85052b40ec32343940ec1b1d39b8ffc0b3a05152
39b8ffc0b3a0454739b8ffc0b3a0383c39b8ffc0400ba02c3139dfa001a0
80022bb8ffc0b394313139b8ffc040d480181a39817f012b7e7d052b7d7f
052bed7f052bd87f017f85251f8885012b8785012b8485052b8385052b29
8539854985036685014685013685012685011b3715183615153515123415
0f33150c3215093115063015032f15002e15f9fa0f20f930f90226270e28
270f2a2b0e2c2b0f22230e24230f1e1f0e201f0f00051005023c3d0e0b3c
743c993c030f10110c090a0b0c0607080c0304050c0001020c0603641f70
2a010f2a010b0f4b0f020b003b0044037403ab00db0f060b000b030b0f3b
003b0959035b0976039b009b09990fd9000cb9010b010c402a0f1b011d0d
18071a0d1510170d1204140d2ff96ff99ff9a0f9cff9d0f9063ff940f9af
f9b0f9e0f90500b8010bb22ff92fba010b003f010b402e04fb3cf93cf73c
f53c2c3c2a3c283c263c243c223c203c1e3c1b3c183c153c123c0f3c093c
063c033c003c50335401b0124b004b5442b013014b004b5342b0332b4bb8
032052b0322b4bb009505b58b101018e59b0332bb00288b8010054b00488
b8020054b012435a5b58b80119b101018e851bb900010100b04b60858d59
2b2b1db0644b5358b0801d59b0324b5358b0901d59004bb03251b01b2342
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b2b2b2b2b73
747573742b2b2b2b2b2b732b732b2b2b2b2b2bb1282645b02a4561b02c45
60442b2b732b2b2b2b2b2b2b2b2b2b2b0173737373742b2b2b2b2b742b2b
2b2b2b2b2b742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7475732b2b2b
2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b732b2b2b2b2b2b732b2b2b012b2b2b2b2b00742b742b2b742b732b2b
74742b2b2b2b2b2b2b2b2b2b2b732b742b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b002b2b2b2b2b2b2b2b
2b732b2b2b0173742b2b2b2b2b2b2b2b2b2b2b2b2b007374752b2b2b2b2b
2b2b2b2b2b2b73742b2b2b2b2b002b2b2b2b2b2b2b2b2b732b2b2b017374
2b2b2b2b2b2b2b2b2b2b2b2b2b0073742b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b73742b2b2b0173742b2bb018b03f4b53422b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2bb109322b4bb0505242b002435c4bb064524bb01e505b60b01a
23424bb0c8524bb036505bb00c2342007374737373737373737473737473
75737374757373747373737373b100024354b102024354b1060243545b5b
58416301fe006401fa006401f9006401f8006401f7006401f6006401f000
6401ef006401ee006401ed006401ec006401eb006401e6006401e5006401
e4006401e3006401e2006401e1006401e0006401d3006401d2006401d100
6401cf006401ce006401cd006401cc006401a00064018f0064018e006401
8a0064018800640187006401860064015b0064015a006401590064015800
640154006401500064014c0064014b0064014a0064013600640130006401
2f0064012d0064012c006401090064010700640105406964f464f264f164
f064ef64ed64ec64ea64e564e464e364e164de64da64d864d364cd64cc64
ca64c964c864c664c464c264c064bf64bd64b364b164af64a564a464a064
8e648d648c648b648a64896485648464836480647f647e647d6462645164
5064486442640e642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b0000>
[4237 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
4 2836 882 <00020081fff003ed0565000d001c002b4017001103119a40001308180318
9a08040b8c14141e0e8c032fe112392fe1003fed2b00183f1aed2b313005
220211341236363332121110020110123332121134022623220e02022cd8
d34175a461dbd6e5fe3c797f79753c6b4c455d3918100154015ab8010caf
54feaefeaafe9efe9502ccfebafecf011f012de6011d7c529add>GFNBAA+CambriaMath AddT42Char 
4 0 0 <000400be0000048605540028002c00300034004b4025152f3428292c002c
1d0b312e342c0b2e2e0b2c3404353600292b30331213130e18182e310300
3fcd322fcd322f3fddd6cd3211120117392f2f2f2f10cd10cd113310cd32
10ddc631300135343e02373e0335342623220e02072335363633321e0215
140e02070e031515171523350111211101112111023706162a2417261b0f
413e2030241909603c894346633e1c0f243c2c20261507129001fcfd0603
61fc3801e71616252a3527192f3339234b521424321e821e2e1d33462926
3e3d462d212c27281c066ea1a1fee4049afb6604f7faac055400>GFNBAA+CambriaMath AddT42Char 
GFNBAA+CambriaMath /CharStrings get begin
/zero 882 def
end
GFNBAA+CambriaMath /Encoding get
dup 48 /zero put
pop
end
%ADOEndSubsetFont
/PYNFHZ+CambriaMath /GFNBAA+CambriaMath findfont ct_VMDictPut
/PYNFHZ+CambriaMath*1 
[48{/.notdef}rp /zero 207{/.notdef}rp]
PYNFHZ+CambriaMath nf
PYNFHZ+CambriaMath*1 [20.04 0 0 -20.04 0 0 ]msf
201.665 275.453 mo
(0)sh
/PYNFHX+MicrosoftYaHei-GBK-EUC-H-Identity-H findfont [20.04 0 0 -20.04 0 0 ]msf
212.827 275.453 mo
(\003k\005U\013\177\007N\013*)sh
312.907 275.453 mo
(\013\013\005\003\006u)sh
372.907 275.453 mo
(\012k\007\220\011i)sh
432.907 275.453 mo
(\010L\006\261)
[20.04 0 ]xsh
PYNFHY+CambriaMath [20.04 0 0 -20.04 0 0 ]msf
472.987 275.453 mo
(\007\()sh
PYNFHY+CambriaMath [14.64 0 0 -14.64 0 0 ]msf
483.065 279.533 mo
(\013c\013j\013c\013a)
[8.03729 4.68042 8.03735 0 ]xsh
/PYNFHX+MicrosoftYaHei-GBK-EUC-H-Identity-H findfont [20.04 0 0 -20.04 0 0 ]msf
.184509 310.973 mo
(\004\362\013-\012\015\013\215\007\332\004^\003y\007U\013\344\010H\0059)sh
%ADOBeginSubsetFont: HJCBAA+CaeciliaLTStd-Roman Initial
ct_T42Dict begin
-0.164 -0.27 1.133 0.926
 256 array 0 1 255 {1 index exch /.notdef put} for  /HJCBAA+CaeciliaLTStd-Roman
Type42DictBegin
[<00010000000c000c000c000c4f532f3285472cb5000000cc000000606376
742000ee08730000012c000000226670676d06599c370000015000000173
676c79667ba95e2f000012ac0000471468656164e4272b87000002c40000
0036686865610795049c000002fc00000024686d7478764139af00000320
000006686c6f6361bce6abee00000988000003366d61787003ac01f00000
0cc0000000206e616d656ad3306e00000ce0000005587072657051be2c79
000012380000007267646972000000000000000000000000000201f00190
00050104028a02580000004b028a02580000015e00320135000000000500
000000000000800000af5000204a00000000000000005059525300400020
fb020301ff1900c8039e010e0000000100000000020402bc002000200004
0014003f0044005200550000000cff05000c011c00080204000c02bc000c
030100080000b800002c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db800012c2020456944b001602db800022cb800012a212d
b800032c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db800042c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800052c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80006
2c2020456944b001602020457d691844b001602db800072cb800062a2db8
00082c4b20b003265358b0401bb000598a8a20b0032653582321b0808a8a
1b8a235920b0032653582321b800c08a8a1b8a235920b0032653582321b8
01008a8a1b8a235920b0032653582321b801408a8a1b8a235920b8000326
5358b0032545b8018050582321b8018023211bb003254523212321591b21
59442db800092c4b535845441b2121592d00000100000001010618bc8883
5f0f3cf5000903e800000000b9ce329e00000000c772b46dff59fef20470
039e000000090002000000000000000100000301ff1900c8048fff59ff59
047000010000000000000000000000000000019a01f40000000000000116
000001160000022c0014022c001c03410029030a004801160045013a004b
013a0004015f001a0258002f011600440197004a0116004d0172ffe4022c
0022022c003c022c0030022c0037022c000e022c0042022c002d022c003a
022c002a022c002d0116004d011600440258002f0258002f0258002f01f4
005f0320002602e5000b0276002e02ad003202f7002b023e002b022c002b
02d20032030a002b014e002e013bffc802c0002b022c002b039e0023031c
001e02f80032023e002b02f800320288002e02510042029c001402f70020
02d200020432000202c0001a02d2000802880034013a006601720008013a
00200258005901f4000001160044023e003f025100000207002f02760036
022c002f0172002f022c0036029b0018013a001e013affc902510018013a
001803e80029029b00290252002f0276001e0276003601aa002401f40035
018500260288001f023e000a0366001102510018023e000a02190033013a
002300de004d013a002302580045013a005f022c0039022c001800a7ff59
022c0006022cfffe022c0047022c001b0116005d01bc003701f400390128
00360128003601f40000022c0023022c00230116004d0258003901f4004b
0116004401bc003801bc003901f4003903e80069048f001f01f4004a013a
0004013a004a013afff1013affea013a0010013afff7013a0062013afff5
013a0039013a003c013affbc013a0050013afff103e8000003d5fffd0176
001e02f8003203fb0035016a000e03660034013a001e0252002f038b002a
02c000220258002f0288001f03de00290258002f0258002f0190003a0320
00260320002602e5000b02e5000b02e5000b02e5000b02e5000b02e5000b
02ad0032023e002b023e002b023e002b023e002b014e002e014efffb014e
ffff014e000e031c001e02f8003202f8003202f8003202f8003202f80032
02f7002002f7002002f7002002f7002002d20008023e003f023e003f023e
003f023e003f023e003f023e003f0207002f022c002f022c002f022c002f
022c002f013a001e013afff1013afff5013a0004029b00290252002f0252
002f0252002f0252002f0252002f0288001f0288001f0288001f0288001f
023e000a02760022028800220288001f02d00031023b00090222002a02ba
001a022a0017023b0022030800330165000d0233002e0233003302330033
02330034023c00370116000001bc0054013a005f022c0010013a001802f7
002b03420020023e002b0342002000de004d027600200342002c0258002f
0252002f025800480251004202d200080288003401f40035023e000a0219
0033013a005f013affbc02760034013a004a01f4005f013afff1013a0004
0263000c01f4002b022c00270276002b0207002b01e1002b02640027029b
002b013b002b0128ffe90263002b01e1002b031c002b02ad002d02640027
01e1002b026300270219002b01f40038022b001d028800230263001c038b
0010025100170263001702190033013affea013a005f01e1002b01f40038
02190033013afff5013afff7013afff1013a0062013a0010013a0050013a
0039013a003c01f4004a016900260169001e016900200263000c0263000c
0263000c0263000c0263000c0263000c0341000c022c00270207002b0207
002b0207002b0207002b013b0005013b002b013bfff2013bfff60276002b
02ad002d0264002702640027026400270264002702640027034100320264
0027028800230288002302880023028800230263001701e1002b02630017
0288001f022c000f01e5001d036900220116004d0197004a013a0010022c
001c022c0082022c0044022c003d022c000f022c003d022c002f022c0028
022c0028022c002f022c001c022c0039031c002b03c2002b03e8003800a7
ff590263000c01f4002b022c00270276002b0207002b01e1002b02640027
029b002b013b002b0128ffe90263002b01e1002b031c002b02ad002d0264
002701e1002b026300270219002b01f40038022b001d028800230263001c
038b001002510017026300170219003301e1002b01f40038021900330263
000c0263000c0263000c0263000c0263000c0263000c0341000c022c0027
0207002b0207002b0207002b0207002b013b0005013b002b013bfff2013b
fff60276002b02ad002d0264002702640027026400270264002702640027
0341003202640027028800230288002302880023028800230263001701e1
002b0263001702d000310000008600860086008600860086013802060206
023602640264029c029c02b402dc02f6036403a6040e04a805120582061a
065e0708079e07ec07ec080e080e080e080e080e08940928098e09fa0a5e
0abe0b300bc00c000c340cda0d2c0de20e6e0ed60f520ff4109c1120118c
122212841332133213bc1420145414541484148414841484152c15c4163e
16e4176217e418e4199219ee1a521aec1b261c221cda1d421df21df21e6c
1efc1f7c2028209c215a220822aa22aa22aa22aa22aa22ea22ea22ea22ea
22ea22ea22ea22ea22ea22ea22ea22ea22ea22ea22ea22ea22ea22ea22ea
22ea22ea22ea22ea22ea2376237623762376237623762376237623762376
237623762376237623762376238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a238a238a238a238a
238a238a238a238a238a238a238a238a238a238a238a000000010000019a
007c000700000000000100000000000a000002000173000000000000000c
00960001000000000000009000000001000000000003001a009000010000
00000004001a00aa0001000000000006001a00c4000100000000000700a2
00de0003000104090000012001800003000104090001003402a000030001
04090002000e02d40003000104090003003402e200030001040900040034
031600030001040900060034034a00030001040900070144037e436f7079
726967687420a920313939312c20313939322c20323030322041646f6265
2053797374656d7320496e636f72706f72617465642e2020416c6c205269
676874732052657365727665642e20a920313938312c2032303032204865
6964656c62657267657220447275636b6d61736368696e656e2041472e20
416c6c207269676874732072657365727665642e555a465446502b436165
63696c69614c545374642d526f6d616e555a465446502b43616563696c69
614c545374642d526f6d616e555a465446502b43616563696c69614c5453
74642d526f6d616e504d4e2043616563696c696120697320612074726164
656d61726b206f662048656964656c62657267657220447275636b6d6173
6368696e656e2041472c206578636c75736976656c79206c6963656e7365
64207468726f756768204c696e6f74797065204c69627261727920476d62
482c20616e64206d6179206265207265676973746572656420696e206365
727461696e206a7572697364696374696f6e732e0043006f007000790072
0069006700680074002000a900200031003900390031002c002000310039
00390032002c00200032003000300032002000410064006f006200650020
00530079007300740065006d007300200049006e0063006f00720070006f
00720061007400650064002e002000200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e002000a9
00200031003900380031002c002000320030003000320020004800650069
00640065006c00620065007200670065007200200044007200750063006b
006d00610073006300680069006e0065006e002000410047002e00200041
006c006c0020007200690067006800740073002000720065007300650072
007600650064002e0055005a0046005400460050002b0043006100650063
0069006c00690061004c0054005300740064002d0052006f006d0061006e
0052006500670075006c006100720055005a0046005400460050002b0043
0061006500630069006c00690061004c0054005300740064002d0052006f
006d0061006e0055005a0046005400460050002b00430061006500630069
006c00690061004c0054005300740064002d0052006f006d0061006e0055
005a0046005400460050002b00430061006500630069006c00690061004c
0054005300740064002d0052006f006d0061006e0050004d004e00200043
0061006500630069006c0069006100200069007300200061002000740072
006100640065006d00610072006b0020006f006600200048006500690064
0065006c00620065007200670065007200200044007200750063006b006d
00610073006300680069006e0065006e002000410047002c002000650078
0063006c00750073006900760065006c00790020006c006900630065006e
0073006500640020007400680072006f0075006700680020004c0069006e
006f00740079007000650020004c00690062007200610072007900200047
006d00620048002c00200061006e00640020006d00610079002000620065
0020007200650067006900730074006500720065006400200069006e0020
006300650072007400610069006e0020006a007500720069007300640069
006300740069006f006e0073002eb800002b00ba0001000200022b01ba00
03000200022b01bf000300440036002e00230015000000082bbf00040041
0036002e00230015000000082b00bf000100580046003800230015000000
082bbf000200510046002e00230015000000082b00ba0005000600072bb8
000020457d691844000000>
[16121 2077 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 1464 16 <0001ffe4ffb3016a03090003001400b800004558b800002f1bb90000000f
3e59303101170127012b3ffeb93f030918fcc2180000>HJCBAA+CaeciliaLTStd-Roman AddT42Char 
1 10504 66 <0002003ffff402180210002b003800b4bb00360003001f00042bbb000000
03000100042bbb000f0003001300042bb8000f10b8000ad0b8000a2fba00
170013000f111239b8001310b80024d0b800242fb8001310b80031d0b800
312f00b800004558b800052f1bb90005000b3e59b800004558b8001a2f1b
b9001a00053e59b800004558b800112f1bb9001100053e59bb0024000100
3100042bb8001110b9000f0001f4ba0017001a0005111239b8000510b900
280001f4b8001a10b9002c0001f430311323353e0133321e0215140e0215
33152335343637230e0123222e0235343e02333534262322060713323e02
35220e021514169d4a2b5a30324c341a0202024a94070302175145163831
21365a7641393d16411c5515332d1f2e58452a39016c7c1117142c473311
414f53233f1517350f3f3d0b203a2f363f200925493d090cfe770f28493a
031228242c2d>HJCBAA+CaeciliaLTStd-Roman AddT42Char 
1 11720 70 <0002002ffff401fd0210001d00280087b800292fb8002a2fb8002910b800
11d0b800112fb900000004f4b8002a10b8001ddcb9001e0004f4ba000800
1d001e111239b8000010b80028d000b800004558b800162f1bb90016000b
3e59b800004558b8000e2f1bb9000e00053e59bb00280001000000042bb8
000e10b900050002f4ba0008000e0016111239b8001610b900230001f430
31371e0333323637070e0323222635343e0233321e041527342e0223220e
02078501142e4a372a5120030e2a2f30137a8e1f3c593b3349311e0f0556
132333202137281702fb2847351f161147070d0a0686873963492a1c2e3c
3d3b173f1e372a1817293720>HJCBAA+CaeciliaLTStd-Roman AddT42Char 
1 11972 71 <0001002f000001b40309001f00a5bb000d0003001200042bb8000d10b800
08d0b800082fb8001210b80016d0b800162f00b800004558b8001a2f1bb9
001a000f3e59b800004558b800092f1bb90009000b3e59b800004558b800
152f1bb90015000b3e59b800004558b8000f2f1bb9000f00053e59ba0000
000f001a111239b8001a10b900030002f4b8000910b9000b0001f4b8000f
10b9000d0001f4b80011d0b80012d0b8000b10b80013d0b80014d0303101
2e0123220e021d013307230333152335331323353335343633321e021701
b10c32162e351c088501840254ec460255556e60071b1e1b0702b9050717
2937202a3ffe7a3f3f01863f3271620203040300>HJCBAA+CaeciliaLTStd-Roman AddT42Char 
1 15332 83 <00010024000001a9020d00210091bb00040003000000042bba0008000000
04111239b8000410b8001bd000b800004558b800022f1bb90002000b3e59
b800004558b800122f1bb90012000b3e59b800004558b8000d2f1bb9000d
000b3e59b800004558b8001e2f1bb9001e00053e59b8000210b900000001
f4ba0008001e000d111239b80016d0b800162fb8001e10b9001c0001f4b8
0020d0b80021d030311323353315140607333e0333321e0217072e012322
0e020f0133152335337c58aa0704030715263d30030f120e02080b1e0f28
3a2513010457f24901c53f1c174e201c3d3120010303014a040423384622
c13f3f00>HJCBAA+CaeciliaLTStd-Roman AddT42Char 
2 576 88 <00010011000003550204002e00ecba0001000000032bba0011000e00032b
ba001f001c00032bba000300000001111239ba00080000001f111239ba00
170000001f111239ba0027000e001111123900b800004558b800002f1bb9
0000000b3e59b800004558b8000f2f1bb9000f000b3e59b800004558b800
1d2f1bb9001d000b3e59b800004558b800212f1bb9002100053e59b80000
4558b8002b2f1bb9002b00053e59b8000f10b900020001f4b80003d0ba00
0800210000111239b8000dd0b8000ed0b80011d0b80012d0ba0017002100
00111239b8001bd0b8001cd0b8001fd0b80020d0ba002700210000111239
b8002dd0b8002ed0303113331523131e0117333e013f0127233533152313
1e0117333e01371323353315230323272e0127230e010f0123032311d43e
6f050702020209055f1d39d4456d050702020207057345ce3bad56510507
02020209055e52ab3a02043ffebf0e1f09091f0ef44d3f3ffebf0e1f0909
1f0e01413f3ffe3bed0e1f09091f0eed01c50000>HJCBAA+CaeciliaLTStd-Roman AddT42Char 
2 1756 119 <00030069fff4037f0070000b0017002300acb800242fb80018d0b800182f
410300df000c00015db8000cdc4103004f000c00015d41030080000c0001
5d410300df000000015db80000dc4103004f000000015d41030080000000
015db900060004f4b8000c10b900120004f4b8001810b9001e0004f400b8
00004558b800092f1bb9000900053e59b800004558b800152f1bb9001500
053e59b800004558b800212f1bb9002100053e59b8000910b900030002f4
b8000fd0b8001bd030312534363332161514062322262534363332161514
062322262534363332161514062322260303241a1a24241a1a24feb3241a
1a24241a1a24feb3241a1a24241a1a24321a24241a1a24241a1a24241a1a
24241a1a24241a1a2424>HJCBAA+CaeciliaLTStd-Roman AddT42Char 
1 0 0 <00050000000001f402bc000200050008000b000f00c1b800102fb800112f
b8001010b8000cd0b8000c2fb900020003f4b8001110b8000edcba000300
0c000e111239ba0004000c000e111239ba0005000c000e111239b9000600
03f4ba0009000c000e111239ba000a000c000e111239ba000b000c000e11
123900b800004558b8000c2f1bb9000c000d3e59b800004558b8000e2f1b
b9000e00053e59ba0000000e000c111239ba0002000e000c111239b90003
0001f4ba0006000e000c111239ba0007000e000c111239b8000c10b90009
0001f430313f01270127072511071321170321112132aaaa0172aaaa0172
aa8cfeacaafa01f4fe0c5ffffffdd5ffff2d01feff012cff0131fd44>HJCBAA+CaeciliaLTStd-Roman AddT42Char 
HJCBAA+CaeciliaLTStd-Roman /CharStrings get begin
/slash 16 def
/a 66 def
/e 70 def
/f 71 def
/r 83 def
/w 88 def
/ellipsis 119 def
end
HJCBAA+CaeciliaLTStd-Roman /Encoding get
dup 47 /slash put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 114 /r put
dup 119 /w put
dup 133 /ellipsis put
pop
end
%ADOEndSubsetFont
/PYNFIA+CaeciliaLTStd-Roman /HJCBAA+CaeciliaLTStd-Roman findfont ct_VMDictPut
/PYNFIA+CaeciliaLTStd-Roman*1 
[47{/.notdef}rp /slash 49{/.notdef}rp /a 3{/.notdef}rp /e /f 11{/.notdef}rp 
/r 4{/.notdef}rp /w 13{/.notdef}rp /ellipsis 122{/.notdef}rp]
PYNFIA+CaeciliaLTStd-Roman nf
PYNFIA+CaeciliaLTStd-Roman*1 [20.04 0 0 -20.04 0 0 ]msf
220.505 310.973 mo
(/)sh
/PYNFHX+MicrosoftYaHei-GBK-EUC-H-Identity-H findfont [20.04 0 0 -20.04 0 0 ]msf
227.939 310.973 mo
(\013\221\004z\011\004\0059)
[19.9198 20.04 20.04 0 ]xsh
PYNFIA+CaeciliaLTStd-Roman*1 [20.04 0 0 -20.04 0 0 ]msf
307.859 310.973 mo
(/\205)
[7.43475 0 ]xsh
/PYNFHX+MicrosoftYaHei-GBK-EUC-H-Identity-H findfont [20.04 0 0 -20.04 0 0 ]msf
.184509 346.613 mo
(\010\022\010y\012\015\013\215\003y)sh
PYNFIA+CaeciliaLTStd-Roman*1 [20.04 0 0 -20.04 0 0 ]msf
100.385 346.613 mo
(wafer)
[17.1602 11.5231 7.43474 11.1623 0 ]xsh
/PYNFHX+MicrosoftYaHei-GBK-EUC-H-Identity-H findfont [20.04 0 0 -20.04 0 0 ]msf
156.176 346.613 mo
(\004y\011g\003k\010H\004}\010v\013O\011s\005\315)
[20.04 19.9198 20.04 20.04 19.9198 20.04 20.04 19.9199 0 ]xsh
PYNFIA+CaeciliaLTStd-Roman*1 [20.04 0 0 -20.04 0 0 ]msf
336.175 346.613 mo
(/)sh
/PYNFHX+MicrosoftYaHei-GBK-EUC-H-Identity-H findfont [20.04 0 0 -20.04 0 0 ]msf
343.49 346.613 mo
(\0059\006\240\011s)sh
403.49 346.613 mo
(\004\327\003k)
[20.04 0 ]xsh
PYNFIA+CaeciliaLTStd-Roman*1 [20.04 0 0 -20.04 0 0 ]msf
443.57 346.613 mo
(\205)sh
.745174 .677241 .666712 .878813 cmyk
%ADOBeginSubsetFont: PBAAAA+MyriadPro-Cond AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
PYNFHW+MyriadPro-Cond dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/slash <1C60D8A8C9B85302B425A3202EF1E26BF1672AFF68061C17C8956B76
D7DECB2D7F> |-
/zero <1C60D8A8C9B73A414AF8C9BEBD6F3AED5388F5438E11F858D5DA8E7F7
D49EE59DE8EA11CD40BDCC301AE55988B2807D8C5E7EA764E0D73C2660FDB912
8AA1FC09D39E63FFF28631332AFDC9DFCC128AC499434518287EEBC> |-
/one <1C60D8A8C9B73A416942B8DD4FF4571E27B258275E0A3948657D6EB718
49153BAF76458654EC23DA7726FC5980F70FAF7A5EA2EBFD2B7EB504> |-
/two <1C60D8A8C9B73A41420E4406A80B8116F52B3CDCE25AF557481D2C650F
B0841FDFB9136A7106AE3BE2EC4B66AD176FA579F67B58899F17732710B016C2
FC6E94A410E574CCF76997158B07AD5C0E9812A9E68B18B8C6> |-
/four <1C60D8A8C9B73A416942B8D30654EA53C0D34FB5103913BC36B41BD15
12F3C7C20CCE50CA88BD25753289254617C712D3A817E36CA0712238DCEA3EF1
67D568D60AF36E1C38EC7F8D3419F8357D44D73B65DD0C1AF4A7E70D1362532E
1DB55706FD553DB3EEDDF821EFA581059> |-
systemdict /gcheck known {setglobal} if end {end} if
end
PYNFHW+MyriadPro-Cond /Encoding get
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
pop
%ADOEndSubsetFont
/PYNFHW+MyriadPro-Cond*1 
[47{/.notdef}rp /slash /zero /one /two /.notdef /four 14{/.notdef}rp 
/C /.notdef /E 3{/.notdef}rp /I 2{/.notdef}rp /L /.notdef 
/N /.notdef /P /.notdef /R 173{/.notdef}rp]
PYNFHW+MyriadPro-Cond nf
PYNFHW+MyriadPro-Cond*1 [9.96 0 0 -9.96 0 0 ]msf
-3.41529 389.071 mo
(2014/04/22)
[3.83952 3.84451 3.83953 3.83952 2.75997 3.84451 3.83952 2.75998 3.8445 0 ]xsh
576.105 389.071 mo
(14)
[3.83954 0 ]xsh
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: UGXAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /UGXAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9ddb6d7000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c7966a6abb76a0000b09800001a9c68656164ecde32e100000f640000
0036686865610dad126500000f9c00000024686d74785230b9e300000fc0
00003c946c6f63610173445c00004c5400003c9c6d617870214726250000
88f0000000206e616d658c9394230000891000000377707265706baf02fe
00008c8800002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e00002ff4000acff00000001000000004d53202000400000
feff0600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d0000000100000005b852c825022c5f0f3cf500190800
00000000bbeb7ccc00000000cbdab383fbfafd8b09ec07b6000000090002
000100000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000f24040e0000000000000000000001cf000004a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
04a1002304a1002304a10023061bffcc061bffcc045a00ac044400610444
00610444006104440061044400610444006104ec00ac04ec009704ff001b
04ff001b03e800ac03e8004503e800ac03e8004603e8004603e8006303e8
005f03e8008103e800ac03e800ac03ad00ac050c005b050c005b050c005b
050c005b050c005b04fc00ac04fc00ac05400020020400ac0204ff4a0204
00280204ff390204ff310204ff500204ff4f0204ff7b0204001e02040027
049200ac028d0007028dffa9042800ac042800ac035d00ac035d00810362
00ac035d00ac0370001c045e00ac06d700ac052a00ac052a00ac052a00ac
052a00ac052a00ac050700ac054c0063054c0063054c0063054c0063054c
0063054c0063054c0063054c0063054c0063054f0063054f006306ef0063
042200ac042200ac05620063045800ac045800ac04580053045800ac03ad
004703ad004703ad001503ad001803ad004703ad004703e6000f03e6000f
03e6000f03e6000f052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa052200aa052200aa052200aa048a0022071e003d
071e003d071e003d071e003d071e003d0427003003e6001e03e6001e03e6
001e03e6001e03e6001e03bf003b03bf003b03bf001a03bf003b03f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f40010055cffe2055cffe2040400a103cb006d03cb006d
03cb006d03cb006d03cb006d03cb006d046500a10465006a047700320477
0032038000a103800030038000a103800020038000200380002c03800029
03800042038000a1038000a1035000a10482006c0482006c0482006c0482
006c0482006c047800a10478008c049d004001ec00a101ecff5801ec0019
01ecff4801ecff2701ecff5501ecff5201ecff7101ec001101ec0018041b
00a1023e0000023eff8c03c900a103c900a102e000a102e0008702e600a1
02e000a102f0003203d500a1060600a1049100a1049100a1049100990491
0078049100a1046600a104aa006604aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006604ba006604ba00660606006603c5
00a103c500a104b1006603ed00a103ed00a103ed004503ed00a1034f0049
034f0049034ffff5034ffff6034f0049034f00490359001c0359fffe0359
001c0359001c048d009f048d009c048d009f048d0097048d0075048d009f
048d009f048d009f048d009f048d009f048d009f03fd0021063e0037063e
0037063e0037063e0037063e003703cc0036038300100383001003830010
03830010038300100369004403690044036900080369004403d5005c03d5
005c03d5005c03d5005c03d5001e03d5005c03d5005c03d5005c03d5005c
03d5005c03d5005c062f005c062f005c043400990362005a0362005a0362
004e036200570362005a0362005a076f005a06dd005a0601005a0601005a
04340060048c0060046a00600434006103fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d02710025
069a002508d5002504ab0025069b002508d50025043c0025043c0025043c
0025043c0025044f0025044f0025044f0025044f0025043c0025043c0025
067600250676002506760025067600250689002506890025068900250689
00250676002506760025043c0025043c0025067600250609002508430025
043c0025043c002504830025043c00250676002504ed002504ed00250513
00250728002503c4003503c4003503c4003503c4003503c4003504340060
04340060043400600434006004340060043400990434ffad0443fff901d6
008501d6ff6e01d6000f01d6ff5a01d6ff2001d6ff7201d6ff5801d6ff67
01d6001101d6009903c00085041e008801eaffd501eaffd501eaff6303a3
009903a3009903a3009901d6009901d6002a021c009901d6004b01fb001c
02fd0099066400990434009904340099043400990434004e0434009904a2
ff9d043400990438005a0438005a0438005a0438005a0438004f0438005a
0438005a0438005a0438005a043c005a043c005a06cc005a043400990434
00990434006002ca009902ca009902cafff902ca006e0321005103210051
0321fffe0321fffd032100510321005105ae005105ae00510438009901f1
009902ae002102c4002102ae002102bc002604e600210475002104750021
047500210475002104750021047500210475002104750021047500210475
002105130021074b002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002106d90021043400940434008e0434
0094043400860434004d0434008904340086043400940434009404340094
04340094039d002205b8003505b8003505b8003505b8003505b800350377
0029039f0022039f0022039f0022039f0022039f00220329005903290059
032900070329005903380072036100640378005d02ac004402e5006c024e
004402e5004802b8004701c100240297002a02e9006c01630061016dffd8
0297006c015e006c0456006c02e6006c02e6004502e5006c02e5004801f6
006c0230004201e3002302e9006c0285001f03ef002c027e00280286001f
023700420254000002750000029400000000fd080000fce8025600000275
0000029400000000fd080000fce803290000035f0000039400000000fc9f
0000fc6703290000035f0000039400000000fc9d0000fc6901ff0000039a
000003a2000003a800000000fc650000fc600324000002f5000003460000
036700000000fca00000fc7e0327000003490000036a00000000fc9d0000
fc7d030c0000030f0000031100000000fcac0000fca90291000002980000
02a000000000fce90000fce202cf000002c2000002b5000003c1000003e1
0000040000000000fc520000fc3101ce000001d6000001ce000001ce0000
0000fd4d0000fd4d027500840000fd7a027f00840000fd7601f700840231
000004a1002304a1ff89045a00ac035300ac0484003a03e800ac03e8fec7
03bf003b04fc00ac04fcfe9e054c0063020400ac0204feb20204ff520428
00ac0495002406d700ac052a00ac03ef0053054c0063054cff1604fc00ac
042200ac03ab004603e6000f03e6001e03e6fe6e03e6001e061300000427
0030060000900550005e0550fef903f4001003f40010040400a102fb00a1
03c90023038000a1038000a103690044047800a1047800a104b4006601ec
00a101ec000001ecff5403c900a103e10011060600a1049100a10387005e
04aa006604aa0066047800a103c500a1035b004b0359001c038300100383
0010038300100552000003cc00360558008704b1006604b10066048a0061
048a00610440009904320064039200180430000003a5005903a5005902c8
004e044c0099044c00990441006004780006023200940232ffec0232ff7a
0232ff0f03a3009903b4000004660099039700220302004d0303004d0438
005a0438005a046c002804120076044100590349005c0319000304550090
045500900455007d0455001605360055053b00550369001205a900940592
006405920064028900000000fd0a03f400000000fc360205009702050097
020500970224004801ff006e01ff006e04a10023044d00ad045a00ac0370
00ac037000ac037600ac0527000303e800ac03e8004503e8006106680055
03ca004b052200ac052200ac052200ac020400ac0204ff50028d00070458
00ac045800ac04e3000306fa000306d700ac04fc00ac070300ac054c0063
054c006304f900ac042200ac0444006103ad004703e6000f0438000f0438
000f04b800220594000004270030051c00ac04f500ac0472007406f200ac
071e00ac04eb000f061800ac044000ac0462005d04610062070800ac0471
005304ff000f04f2000f0504000003f4001003ee00a2040400a1031400a1
031400a1032700a10480000e038000a1038000300380002c057800440380
0057048900a1048900960489009501ec00a101ecff55023e000003ca00a1
03ca00a104320001060600a1047800a104aa006604a90066046a00a103c5
00a103cb006d034f00490359001c039d001e039d001b042f0022050a0000
03cc0036048e00a1046900a103fa006d062300a1064500a1045f00170583
00a103e800a103e4006b03f00066063200a103ff005c045f001f0463001f
044d000006010001063200a103d5005c044300000430000003d5009902c4
009902c4009902d5009901d6ff58047700170434006003fb005d03fb005d
03fb005d0583003e0362004b04530099045300780453008801d6008501d6
ff7201eaffd503b6009903b6009904150016060200130569005f04470099
062800990438005a0431005a042a009904340086043400990362005a0321
00510319000a06640099039f0022039f001803d2002204fe005103770029
045500990433009903c0004205d4009905fe0099044a000a0554009903c2
0099038b004d038d005d05c6009903cb00380453fff90443fff904270018
036e0000036e0000036e00000000fca50000fca5029b010a029b00bf029b
00bf03b5008503b5005e03b5005e03de0064026000ed026000b10364007a
0361005f01ff002a02240048022400bb020500970586009601ff008c01ff
002a01ff008c01ff002a035900880359002b035900880359002b01ff002a
0359002b02b6007402b600c002b6007402b600c004190075041900ad0419
0075041900ad0317000102df001f03af018a03fc01ae0317000b02df002d
027300450273004503fcfff603fcfff6073e0095073e0095073e0095073e
009503fcfff903fc00c10205009702050097026d0085026d007a027400bf
0274005a0284005602840075024000840240007a024a00b0024a0067026d
0085026d007a027400bf0274005a028400560284007503fc009e03fc0077
03fc007803fc007604b0006b043d006e03fc006a03fc003d01c4008b0335
008b057500000556000007f7000007270000073c00000727000006ad00af
06ad00af040e008005a4003f05ac004d02b6000003fc003f04b30049040e
002a03fc0057040e00600434005803fc00b903fc004a040e005303fc006d
0419002b040e003403f30035039f006103be005f039f0058039f00250621
0049083300ac03fc002406e300a10411001d0494005f02cb002303ec0062
03ec00510455002203d700510436007e03b20035043600630436005c040e
0048040e00ae040e0072040e0067040e0020040e0065040e006b040e0063
040e0052040e005204430067028d00190381005c0373005903ac00260368
006103b7006e0349002f03b5004b03bc0052039f0050039f008d039f0065
039f0062039f003a039f0067039f0061039f005e039f0051039f00500494
005f02cb002303ec006203ec00510428002203d700510436007e03b20035
043600630436005c040e0048040e00ae040e0072040e0067040e0030040e
0065040e006b040e0063040e0052040e00520321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc00580321004801f8002302b0004b
02ad004102db002502a6004502df005b0291003202e1004b02df004402ea
005102df005102d0005701bc006001bc0058029d003801f500310252003c
0249002d024a001402460032025100300238002202570025024d0023029d
003801f500310252003c0249002d024a0014024600320251003002380022
02570025024d002302b1ff4b03130044055f004405690044051700440569
0044052e00440553004405c9004e05c9004e0567004705b7004705a20047
05cd0027057d004505a20045052a003505b80048084e0048057d005c07c9
005c03fc004603fc004c03fc006003fc002b03fc005e03fc006003fc0059
03fc004503fc006503fc004c03fc005503fc005603fc003d05e9002c0405
003506d300690443006102ed000703fc00080484003a0550005e04660099
066500660454005b0416004a073e009a073e0096073e00c9073e00c9070e
00af070e013a070e00af070e013a0a4e009a0638009f04660028018a0000
01da00000466000004660000046600000466000004660000046600000466
000004660000046600000466000004660000046600000466000004660000
0466000004660000046601d004a1002304a1002304a1002304a1001904a1
001504a1001d04a1002304a1001c04a1001c04a1001c04a1001d04a10023
03e800ac03e800ac03e8003703e8ffe803e8ffe903e8ffe803e8ffe803e8
003702040015020400a0054c0063054c0063054c0063054c0063054c0063
054c0063054c006305940063059400630594006305940063059400630594
0063052200aa052200aa05c600aa05c600aa05c600aa05c600aa05c600aa
05c600aa03e6001e03e6001e03e6001e03d5005c03d5005c03d5ffbb03d5
ffb103d5ffb803d5ffb803d5005703d5ffb803d5ffb803d5ffb803d5ffb8
03d5005c03fb005d03fb005d03fb003003fbffdb03fbffdb03fbffd903fb
ffcb03fb005d01d6002601d600850438005a0438005a0438ffe80438ffea
0438ffe80438ffea0438005a04a0005a04a0005a04a0005a04a0005a04a0
004904a0005a043400940434009404d2009404d2009404d2008c04d20094
04d2004604d20094039f0022039f0002039f0022046a00530466003803f4
001003f4001003f4ffbd03f4ffc003f4ffbd03f4ffc803f4001003f4ffc8
03f4ffc803f4ffc803f4ffc803f40010038000a1038000a10380fff00380
ffa70380ffa00380ffa20380ff8e0380001101ec000901ec009404aa0066
04aa006604aa002104aa002204aa002104aa002204aa006604ec006604ec
006604ec006604ec006604ec006604ec0066048d009f048d009f0515009f
0515009f0515009a0515009f051500750515009f038300100383fff10383
001001da0000046600000466000004660000046600000466000004660000
046600000466000004c10066052400ac052400ac050600ac049300a10493
00a1047c00a103e6000f02ae00210359001c01d60011043c0025043c0025
043c002506760025067600250676002502f5001c02e7008e0306005a034b
008e02a8008e028c008e0344005a035b008e01a6008e01cb000502e0008e
025b008e046d008e0375008d0375005a02d8008e0375005a029b00570280
0046025700040314005702e3001a0445002202b5001c028b001c02b80050
0000fdfd0000fdfd0466ffff0466ffff0466ffff0466ffff03c1ffff03c1
0000030cffff030c0000030cffff030c0002023100000231000001ffffff
01ffffff01ffffff01ffffff0000fd090000fd0902aa008202aa008202aa
009802aa009801ce008402aa008202aa008202aa008202aa0082027f008e
027f008e0324000002910084046601fd02aa001402aa0013032900000329
0000032900000329ffff039a00000327000003fcfff903fcfff9039a0000
039a00000000ff080000fe4c0000fdfb0000fdfb0000fe3f0000fe3f0000
fdc20000fdc201ce008402aa00140291008302aa001502aa009302aa0093
039a014c039a00000000fdfd0000fdfd0000fd090000fce90000fd090000
feb702aa001402aa001403fcfff90466ffff02aa0098039a0000039a0000
039a0000039a0000039a0000039a000004010014040101470000000002aa
ffff02aaffff01ceffff01ceffff030c0000030c000002aa009302aa00c8
02aa00c803f100c801ceffff01ceffff01ce000001ce000002aa00a003b1
008402aaffff02aaffff075c003c075cffff075cffff075cffff075cffff
075c003f06d0ffff06d0ffff075c0003075c0003075c004001df003001df
003001e7003201e7003200f8004400f8004402070030020700300209004c
0209004c019d0030019d003002070032020700320209004c0209004c0309
004c0309004c015f004c015f004c015200180152001801c3001601c30016
01bf001c01bf001c032700510327005103270051032700510000ffab03bd
ffff041a0000041a00000416000104160001041a0001041a0001041a0001
041a000104010002040100020401000204010002015f004c02aa00c801ce
00c803f100c804ec000f044d00ad0440001e0462005d049d006104ff001b
057e000f044d004c03e8006c0525006403ca005a03adffd6050e005b048a
001c025000ac0226001b042800ac070900aa052affd6054c0063062f0061
04e4000f045800ac03ad004703ab0046043f000f03e6000f0550005e0522
00aa0442001e03bf003b03ca004b03ca005a040e006808ab00ac081500ac
060300ac054700ac07b700ac071400ac04a100230204ff3a054c00630522
00aa052200aa052200aa052200aa052200aa04a1002304a10023061bffcc
050c005b050c005b04280073054c0063054c006303ca0008089500ac0815
00ac050c005b072800ac04d400ac052a00ac04a1ffef04a1002303e8ffe1
03e8006e0204feac0204ff4c054c003b054c00630458ffbf0458006e0522
002f052200aa03ca004b04fc00ac052400ac040e004d03ef003b04a10023
03e800ac054c0063054c0063054c0063054c006303e6001e04a1ffd90444
ffe7035d001b03e6ffb803940064046b001b0545001b0495002403e8ff9e
02a10007050a00630469001a04a0001b04a10023045a00ac045a00ac045a
00990444006104ec00ac04ec00ac04ec00ac04ec00ac04ec00ac03e80084
03e8008403e8008203e8003403e8008103ad00ac050c005b04fc00ac04fc
00ac04fc00ac04fc002804fc00ac0204ff360204ff71042800ac042800ac
042800a0035d00ac035d0035035d0060035d006606d700ac06d700ac06d7
00ac052a00ac052a00ac052a00ac052a00ac054c0063054c0063054c0063
054c0063042200ac042200ac045800ac045800ac04580077045800ac03ad
004703ad004703ad004703ad004703ad004703e6000f03e6000f03e6000f
03e6000f052200aa052200aa052200aa052200aa052200aa048a0022048a
0022071e003d071e003d042700300427003003e6001e03bf001503bf003b
03bf003b035d001b03c2ff9b0433001b045800ac052400ac047100ac03e2
003b0444003803ad005903b500ac046a0027043400990434000403b3005a
043400600430005d0271ffee064300990434009903a300990241002703b4
0014044c0099053e0059043400990321005102e0002102ae002103fc001b
0329005903ca004b0366003a03680050075d006003c00099061e009903d5
005601d6ff570438005a0434007a04340088043400880434008804340088
03fb006203d5005803d50058062f005c044cffe203c4003503a3003a0438
005a0438005a03ca002e01eaff60075d006003c400350434009903d5ffbf
03d5005c03fbffe203fb005d01d6fece01d6ff650438ffed0438005a02ca
ff7302ca00100434ffff0434008703ca004b0434005104cd0060040e0052
034c005903d5005c03fb005d0438005a0438004f0438005a0438005a039f
00220289009804eb009902ae002106930060069200600362fff003210051
032900590394006403fb003c0240fff70240fff70434006002ff002703e2
002203720049040e00720321005101f300ad032900ad049700ac029b010a
03d5005c0434009904340099043400860362005a04340060043400600434
0060043400600434006003fb005d03fb005d03fb005d03fb003f03fb005d
0271002503c40035043400990434009904340067043400130434009401d6
ff1f01d6ff1f01d6ff5a03a3009903a3009903a3006b01d6008901d6ff58
01d6ff5801d6ff5906640099066400990664009904340099043400990434
0086043400860438004f0438004f0438005a0438005a0434009904340099
02ca009902ca008a02ca000a02caffff0321005103210051032100510321
00030321005102ae002102ae002102aeffd202aeffd20434008904340041
0434007b0434004d04340086039d0001039d002205b8003505b800350377
002903770029039f00220329000103290059032900000434008602aeffc6
05b80035039f002203d5005c01f100530241002703d5002902aeff960463
009903db00990344005903c200360362003b02ee003c03190099053b0055
0471000803ee00a203ee001403cb004803fc006d0477003204d3000803ee
00530380007204a40066038a00680350ffe80482006c03f300130232008e
01ecfffe03c900a1063200910491ffe804aa00660592006e0433000803ed
00a1034f0053035b004b038300080359001c04b10066048d009f03b70010
03690044039000570393006b0398005507ce00a1085500ac055a00a105cd
00ac06cf00a1076800ac03f4001001ecff4704aa0066048d0096048d009f
048d009f048d009f048d009f03f4001003f40010055cffe20482006c0482
006c03c9005204aa006604aa00660390000007ce00a1085500ac0482006c
065500a1046200a0049100a103f4ffc503f400100380ffb10380004d01ec
fed001ecff7004aa001d04aa006603edffa403ed0064048d0000048d009f
039000570478008c049300a103c50057038c004403f40010038000a104aa
006604aa006604aa006604aa00660383001003f4001003cb002402e00027
0359ffeb0339005004040027048d002703fd00210380ffff023e0000048b
006603ed00270383000c039000550339005001f300ac032900ac049700ac
026000ed03f40010040400a1040400a10404006e03cb006d046500a10465
00a104650081046500a1046500950380002a038000260380004103800000
0380004a035000a10482006c047800a1047800a10478009a047800200478
00a101ecff2a01ecff5503c900a103c900a103c9007e02e000a102e00000
02e0002802e00024060600a1060600a1060600a1049100a1049100a10491
00a1049100a104aa006604aa006604aa006604aa006603c500a103c500a1
03ed00a103ed00a103ed003e03ed0091034f0049034f0049034f0049034f
0000034f00490359001c0359001c0359001803590019048d009f048d0079
048d009f048d0075048d009f03fd002103fd0021063e0037063e003703cc
003603cc003603830010036900050369004403690020047800a10359000a
063e00370383001003f4001002e00027035effa703c5002703ed00a104b6
00a103ef00a10369004403cb004803500060039900a1043c0025043c0025
0447002504470025043c0025043c0025044f0025043c0025043c00250676
002506760025068200250682002506760025067600250689002506760025
067600250475002104750021047500210475002104750021047500210475
0021047500210475002106d9002106d9002106d9002106d9002106d90021
06d9002106d9002106d9002106d9002103d5009604340060043400990434
00990362003b039b005a043400600434006003fb006203fb0062051b0065
0362005a0362004b0435004b043b005d0241fff704340060043400600451
005a039d001f03d0001e0433009404340099043400990241002701d6fff3
0232009401d6009902e7ffa702f9002701d6009904860099066300940663
0094066400990434ffc204340099045300990438005a05b3005a05920064
0536005502ca002302ca002302ca002302ca009902ca0099028e0094028e
002303980085039800850321005101eaffd50242fff801eaffd5028affc4
02ae004102ae002104a400270476004904550090039d002205b80035039f
00220351001f0329005903d3005903bc004b03bb0056039400640394005e
039400640362005a0507005f03d50099043b005a046b005a04470099028a
ffc403a300270319009904340060039400640394005e066f006006d40060
0719006004f3002103c40021057a0021060c002504ae00990469009903ef
002c03ef00700434ffd5044dffd503d60010050fffe3062f006204120027
03cb006a0444009904590030033f0099036f005501d60085022700000391
009802f000300569005f045300990474005a03cb006304a9006604a80066
0528001406cc00560368003a0438005a0438005a03a8009903cf005203cf
0052033f001b046a009a0465004b05c7004b0664014c03de0020060e0035
034f0042032f00380321005103d0001e02f2009903de00200450009903a8
0099052f0083040e000102f5001c03f1000002e7008e02fb0027034b008e
02a8008e02a800500344005a035b008e01a6008e01cb000502e0008e025b
008e046d008e0375008d0375008d0375005a02b2004802d8008e029b0057
02570004031400570445002202ac004402ac006c02e50048042b004402e5
006c02e5004802b8004702b8004702770046027700460297002a01630061
0297006c0456006c02e6006c02e60045024e003602e6004502e6004502e5
006c01e3002302e9006c02db00460456006c0285001f024a000d02be006c
024600230283002803650055025f00180163006101f6006c02e9006c0285
001f02be006c0246002302e5006c03650050025f00180694009404bbffa7
04bd0060030affa7069cffe504b4002204beffa70352ffa7031affa7039d
0014030fffa70329ffc203c4003b0304006e03c400350688002102410027
026900270468002704db002704c40027043400990451006002710025054c
0060041e009901f0006b067f0099045100990434009902ca006a037b0051
02faffd5039d002203ed0029033c0059047c005c04d800600434006003fb
005d0362005a0362004b03fb006201d600850362003b0233001e04d80094
0376004b02e5006b024e0044026e004402b200440277004201c1002401c1
00070297002a02e9006c0192000001aa006c0163006d0192000001e50000
0194006c017b00530224006e0456006c0456006c031b0000031c006c0304
006e02e600450336004502300042016dffd801e4002302e9000002b8002c
02e6006e02e6006e0285001f023700420294004202a600420272003c02e6
004502e9006c02e9006c016dffd801f6006c01f6002502030025028b006c
03ef002c0286001f01c400540334005401ff008c01ff002a01ff008c01ce
008401ce0084029900650299006c03fc004503fc0065044b0044044b0044
025100f20256000002540000025100f20327000002540000025600000239
00980239009801ce008401ce008402aa008202aa008202aa008202aa0082
02aa004b02aa009302610024015e006c02300042027e00280299006c0310
009603100096031000960310009603100096045700960457009604570096
045700960310004304570043045700430457004304570043045700430457
00430457002f0457002f0457002f0457002f0457002f0310002f04570025
045700250457002504570025045700250310001a0457001a0457001a0457
001a0457001a0457001a0310004204570042045700420457004204570042
045700420457009604570096045700960457009603100042045700420457
0042045700420457004204570042045700420457002f0457002f0457002f
0457002f0457002f0310002f0457002f0457002f0457002f0457002f0457
002f03100026045700260457002604570026045700260457002603100042
045700420457004204570042045700420457004204570096045700960457
009604570096031000420457004204570042045700420457004204570042
031000260457002604570026045700260457002604570026031000230457
0023045700230457002304570023045700230310002f0457002f0457002f
0457002f0457002f0457002f0310004b0457004b0457004b0457004b0457
004b0457004b045700960457009604570096045700960310004204570042
045700420457004204570042045700420310001a0457001a0457001a0457
001a0457001a0457001a0310002404570024045700240457002404570024
045700240310002f0457002f0457002f0457002f0457002f0457002f0310
004e0457004e0457004e0457004e0457004e0457004e0457009604570096
045700960457009602aa006202aa006203290000049a00000359002b02aa
008502aa008502aa00c802aa00c8029100840254000003c1ffff03c10000
039a0000022400bb02aa009802aa009802aa009802aa00980440fff60440
fff60302009803270000032700000324000002aa0000071200d4071200d4
02ac004402b8004702e60045027e002802b8004701d9ffff01d9ffff01d9
000001d90000028900000289000002890000028900000000fc660000fc66
032900000329000003290000032900000324000003240000032900000329
00000329000003290000032400000324000003f4000003f4000003f40000
03f40000032400000324000003270000030c000001ffffff01d900000327
000003290000032900000329000004660000046600000466000004660000
03f4000003f4000003f4000003f40000023200b6023200b6054c00630444
006104440043044400610444004303e6000e0456fec803e6000e03ad00ac
054c0063045d001e059700ac04a2000f04440061042200ac043200640375
005a037500420478000604d700510684001404120076041200030362005a
0362003b0362005a0362003b053b0055037800940438005a0399001404c5
009904a2000f0349005c01eaffd50476ffd504d7005104a9006603cb006d
03cb004803cb006d03cb00480389001a0389fe6f0389001a035000a104b1
005b03e2001e050000a1045d002a03db006d03c500a104a1ffc504a1fe8a
04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe6204a1ff2204a1ff8004a1
ff5804a1002304a1002304a1002304a1ffc504a1fe8a04a1fe6204a1ff22
04a1ffc604a1fe8b04a1fe6204a1ff22066500230665ffc50665fe8a0665
fe620665ff220665ffc60665fe8b0665fe620665ff2203e8fef004bdfe82
04bdfe7a03e8fef004c1fe8604bdfe7a03e8fea403e8fe9504fcfef005d1
fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a0559feaa04fcfea4
04fcfe9504fc00ac04fcfef005d1fe8205d1fe7a0559feaa04fcfef005d1
fe8205d1fe7a0559feaa06c000ac06c0fef00795fe820795fe7a071dfeaa
06c0fef00795fe820795fe7a071dfeaa0204fef002d9fe8202d9fe7a0261
feaa0204fef002d9fe8202d9fe7a0261feaa0204fea40204fe950204ff4e
0204ff7a054cff0605f5fe82060cfe7b054cff0605f2fe7f0605fe74054c
fecf054cfeac0422fef003e6fe940517fe820513fe7e049ffeaa03e6fe47
03e6fe4703e6001e03e6001e0550ff0605f2fe7b060dfe780599feaa0550
ff0605f2fe7b0611fe7c0599feaa0550fecf0550feac0550005e0550ff06
05f2fe7b060dfe780599feaa0550ff0605f2fe7b0611fe7c0599feaa0714
005e0714ff0607b6fe7b07d1fe78075dfeaa0714ff0607b6fe7b07d5fe7c
075dfeaa048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a0061048a005a048a0061048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a0061048a0061048a005a03a5005903a5005903a5004f03a50059
03a5005203a5005203a5005903a50059044c0099044c0092044c008f044c
0094044c0099044c0092044c0092044c0094044c0099044c0099044c0059
044c0099044c0099044c0092044c008f044c0094044c0099044c0092044c
0092044c0094044c0099044c0099044c0059023200010232ff860232ff83
0232ff62023200000232ff860232ff860232ff600232ff100232fecf0232
ff600232ffef0232ff7b0232ff290232ff690232ff680438005a0438005a
0438005a0438005a0438005a0438005a0438005a0438005a041200760412
007604550090045500820455008204550084045500900455008204550082
045500840455001204550010045500800455009004550090045500410455
00710455007d059200640592006405920064059200640592006405920064
059200640592006405920064059200640592006405920064059200640592
006405920064059200640592006405920064059200640592006405920064
059200640592006403f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001005b9001005b9001005b9001005b9001005b9001005b90010
05b9001005b9001005b90010038000a10380004903800049038000a10380
004903800049038000a10380007b047800a1047800a1047800a1047800a1
047800a1047800a1047800a1047800a1047800a1047800a10478006f0478
00a1047800a1047800a1047800a1047800a1047800a1047800a1047800a1
047800a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c
00a1063c00a1063c00a101ec000901ecff6201ecff6201ecff6501ec0009
01ecff6201ecff6201ecff6501ecff1001ecfee901ecff6401ec000001ec
ff8c01ecff2a01ecff5301ecff7004aa006604aa006604aa006604aa0066
04aa006604aa006604aa006604aa006603c500a103c500a1038300100389
001a038300100389001a038300100389001a038300100389001a03830010
0389001a038300100389001a038300100389001a038300100389001a0383
00100389001a038300100389001a0383fff50389fff5038300100389001a
038300100389001a04b1006604b1006604b1006604b1006604b1006604b1
006604b1006604b1006604b1006604b1006604b1006604b1006604b10066
04b1006604b1006604b1006604b1006604b1006604b1006604b100660675
006606750066067500660675006606750066067500660675006606750066
0675006604a1002304a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc604a1
fe8b04a1fe6204a1ff2204fc00ac04fcfef005d1fe8205d1fe7a0559feaa
04fcfef005d1fe8205d1fe7a0559feaa0550005e0550ff0605f2fe7b060d
fe780599feaa0550ff0605f2fe7b0611fe7c0599feaa066500230665ffc5
0665fe8a0665fe620665ff220665ffc60665fe8b0665fe620665ff2206c0
00ac06c0fef00795fe820795fe7a06c0fe4d06c0fef00795fe820795fe7a
06c0fe4d0714005e0714ff0607b6fe7b07d1fe780714fe610714ff0607b6
fe7b07d5fe7c0714fe6101d9ffff01d900000289000002890000039a0000
03290000032900000324000003290000032900000324000003f4000003f4
00000324000001d9000003270000030c0000023200b601c4007901c40079
01c40079054e00ac0440000a042200ac0366001b044100ac06b2005503ca
004b04a500ac045800ac046a001b050c000f052400ac05b100ac073800ac
052b00630444006103e6000f03e6001e03e6001e0476003005d2000f049a
007404720074047200ad05f6002805f60028020400ac06680055045f00ac
050e000304fc00ac04fc00ac04720074070700ac04a1002304a10023061b
ffcc03e8005905250064052500640668005503ca001503ca004b052200ac
052200ac054c0063054c0063054c00630462004c0438000f0438000f0438
000f04720071035300ac061800ac0366001b048500300427003004400035
065d0037061d003d041a003d070f0003072800ac0515005b0521000f03ca
005a05090003045f009903df00270434009902f90027039f009905c0003e
0362004b03f4009903b6009903eb00270447000a0471009904d8009905f1
0099046f00590362005a0319000a039d0022039d002203b2002904c5000a
03ea004203c0004203c0009904c8001904c800190583003e03cf00990421
0016044700990454009903c0004205b6005f020400ac03d5002e03d50058
062f005c03fb005603fb006203fb00620583003e0362000803bc004b0453
0095045300970438005a0431005a0431005a038b0004039f0022039f0022
039f002203c0002902c400990554009902f9002703b10029037700290434
006006550060059b004b03ba004b061f001606500099044500500481000a
0362005a042b001604a800a103e8002703c500a10314002703ec00a105d0
004403800057041c00a103ca00a103ca002704530017049800a1050100a1
067700a104a2006503cb006d0359001c0383001003830010041300360545
001c041a006d03fa006d03fa00a1054f0020054f002001ec00a105780044
03ff00a1045a0001047800a104a100a103fa006d062f00a103f4001003f4
0010055cffe20380004204a2006504a20065057800440380000303900057
048900a0048900a004aa006604a9006604a9006603e4001e039d001e039d
001e039d001e03fa0044031400a1058300a1031400270417003603cc0036
03e8004a0588004a0559007203d8007205d20001061900a10488006c0444
001c03800068045c00010400000008000000040000000800000002af0000
02000000015500000450000001bc00000199000001000000000000000000
ffdc0000ff25040e0024040e00240329000003fcfff901ff008c03580088
01c400540334005404a400540476010a03fcfffb0273004404ee004f0444
00610444006103ad0027040e005306640099052a0020076000ac064800ac
071e002005f500ac0428001b03e6000f08a80032043afffe0482002104b2
005b0495002003ad0020044400610621004906210065057800e6059d00e6
03fc005e070100bc03fc0062045201d7045200be0400fff6040001bd0400
01bd0400fff6040001bd0400fff6070900aa045c005b047200ad04440071
04d0003a0562007403c9001006640094042f005f04180015035a0053040b
00300441006f03260010032700030327000303270003025400c0025400c0
025400c8025400c802aaff8c02aaff8c04e0005907f4000a07e200140798
0003076c0061064100ac050b002406a700ac05c80055073f00ac03ca0021
0600009004b8001c085c0063054c003b076c0061076c006104440061056a
0022053400990433001b05af00990480001b060b0099034e001605a90094
03d2ffc40745005a049c005a06420059056a00220362005a06b8006d05c3
00a10453001205c000a1050b0046066400a10380002205580087042e0022
07f10066050f006806b0006d06b8006d039c006d03c7009602aa00db040e
008d0000ffdc0000fe5101cf0000022400bb01c700000163006102b1ff4b
0aa000b404d5009202d5008302d5008304d500b202d500700aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0000fc48000000000000fd170000000000000000039a0000039a00000324
00000324000003240000039a000003240000032400000256000003290000
0329000003bdffff02aaff8c055001e5027f008403240000039a00000256
000000000027000000e1000000ed0000001b032400000324000003240000
032400000324000003240000032400000324000003240000032400000000
0000000000000000000000000000039a0000039a00000346000000000027
03c10000030f00000346000003460000039a0000034800000348000003a2
000003a2000002560000035f00000000009e00000067000000220000009e
0000009e0000009e0000009e0000009e0517fe820513fe7e049ffeaa03e6
fe4703e6fe4703e6000e03e6000e03f4001003f4001003f4001005b80010
05b8001005b80010047800a1047800a10478006f063c00a1063c00a1063c
006f0383ffc80383ffc80383001004b1006604b1006604b1006606750066
06750066067500660000fdbc0000fd1a0000fd770000fd4f0000fbfe0000
fbfa0000fc000000fbfa0000fc000000fbfa0000fc000000fbfa0000fc00
0000fc000000fc000000fc000000fc000000fc000000fc000000fc000000
fdd00000fc300000fc300000fbff0000fbff0000fbff0000fbff0000fbff
0000fc000000fcac0000fcad0000fcac0000fcac0000fd1b0000fd1b0000
fd340000fd340000fd340000fd340000fd600000fd600000fd730000fd73
0000fdcf0000fd5f0000fd5f0000fd5f0000fd5f0000fd7f0000fd7f0000
fca10000fd6f0000fdfd0000fcef0000fcf20000fca00000fca00000fcae
0000fcad0000fc660000fca00000fc2f0000fc2f0000fc660000fc5f0000
fdd00000fcf10000fd6d0000fcf30000fd710000fd710000fdb10000fc65
0000fcf10000fcf10000fc2f0000fbff0000fd770000fc660000fc660000
fc650000fc650000fc650000fc650000fc460000fd790000fcde0000fcde
0000fd4b0000fd4b0000fca80000fca80000fd710000fda60000fda60000
fce30000fd4c0000fd4c0000fd4b0000fd4b0000fd7e0000fcdf0000fcde
0000fcde0000fc8f0000fc520000fc520000fc520000fc520000fc920000
fc970000fc970000fc560000fc560000fc910000fd820000fd820000fd70
0000fd700000fdfa0000fdfa0000fd5f0000fd5f0000fd790000fd790000
fd8f0000fd8f0000fd6e0000fd6e0000fd7a0000fd7a0000fcfb0000fcfb
0000fdb60000fdb60000fda80000fda80000fd680000fd680000fd710000
fd710000fcf10000fcf10000fcf10000fcf10000fc540000fc260000fc26
0000fc290000fc290000fc270000fc270000fc270000fc270000fc350000
fc350000fc350000fc350000fdb60000fda80000fda80000fce30000fd46
0000fd460000fd470000fd470000fd020000fd020000fd020000fd020000
fc650000fc660000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca1
0000fc9f0000fc9f0000fc9f0000fc9f0000fca10000fca10000fc370000
fc370000fc370000fc370000fca00000fca00000fc9f0000fcad0000fd33
0000fd470000fc9f0000fc9f0000fc9f0000fc9f0000fbff0000fc020000
fbff0000fc000000fc370000fc370000fc370000fc370000fdbd0000fdbd
0000fca20000fca30000fca30000fdd10000fdd10000fdd10000fdd10000
fc6a0000fc6a03e6fe940389ffcb0389ffcb0389001a01d6008904340060
043400600434006004340060043c0025067600250aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4047d
00a3040e00230054001b00>
<000000000000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000002140000021400000214000002140000021400000214
000002140000021400000214000002140000021400000214000002140000
021400000214000002140000021400000214000002140000021400000214
000002140000021400000214000002b0000002b0000002b0000002b00000
02b0000002b0000002b0000002b0000002b0000002b0000002b0000002b0
000002b0000002b0000002b0000002b0000002b0000002b0000002b00000
02b0000002b0000002b0000002b0000002b0000002b0000003a2000003a2
000003a2000004f8000004f8000004f8000004f80000069c0000069c0000
069c0000069c0000069c0000069c0000069c0000069c0000069c0000069c
0000069c0000069c0000069c0000069c0000069c0000069c0000069c0000
069c0000069c0000069c0000069c0000069c0000069c0000069c0000069c
0000069c0000069c0000069c0000069c0000069c0000069c0000069c0000
069c0000069c0000069c0000069c0000069c0000069c0000069c0000069c
0000069c0000069c0000069c0000069c0000069c0000069c0000069c0000
069c0000069c0000069c0000069c0000069c0000069c0000069c0000069c
0000069c0000069c0000069c0000069c0000069c0000069c0000069c0000
069c0000069c0000069c0000069c0000069c0000069c0000069c0000069c
0000069c0000069c0000069c0000069c0000069c0000069c0000069c0000
069c0000069c0000069c0000069c0000069c0000069c0000069c0000069c
0000069c0000069c0000069c0000069c0000069c0000069c0000069c0000
069c0000069c0000069c0000069c0000069c0000069c0000069c0000069c
0000069c0000069c0000069c0000069c0000069c0000069c0000069c0000
069c0000069c0000069c0000069c0000069c0000069c0000069c0000069c
0000069c0000069c0000069c0000069c0000069c0000069c0000069c0000
069c0000069c0000069c0000069c0000069c0000069c0000069c0000069c
0000069c0000069c0000069c0000069c0000069c0000069c0000069c0000
069c0000069c0000069c0000069c0000069c0000069c0000069c0000069c
0000069c0000069c0000069c0000069c0000069c0000069c0000069c0000
069c0000069c0000069c0000069c0000069c0000069c0000069c0000069c
0000069c0000069c0000069c0000069c000007fa000007fa000007fa0000
07fa000007fa000007fa000007fa000007fa000007fa000007fa000007fa
000007fa000007fa0000092c00000a4400000a4400000a4400000a440000
0a4400000a4400000a4400000a4400000a4400000a4400000b7200000b72
00000b7200000b7200000cb400000cb400000cb400000cb400000cb40000
0cb400000cb400000cb400000cb400000cb400000dba00000dba00000dba
00000dba00000dba00000dba00000dba00000dba00000dba00000dba0000
0dba00000dba00000dba00000dba00000dba00000dba00000dba00000dba
00000dba00000dba00000dba00000dba00000dba00000dba00000dba0000
0dba00000dba00000dba00000dba00000dba00000dba00000dba00000dba
00000dba00000dba00000dba00000dba00000dba00000dba00000dba0000
0dba00000dba00000dba00000dba00000dba00000dba00000dba00000dba
00000dba00000dba00000ec200000ec200000ec200000fb400000fb40000
0fb400000fb400000fb400000fb400000fb400000fb400000fb400000fb4
00000fb400000fb400000fb400000fb400000fb4000010e8000010e80000
10e8000010e8000010e8000010e8000010e8000010e8000010e8000010e8
0000120a0000120a0000120a0000120a0000120a0000120a0000120a0000
132600001326000013260000132600001326000013260000132600001326
000013260000132600001326000013260000132600001326000013260000
1418000014180000141800001418000015a4000015a4000015a4000015a4
000015a4000015a4000015a4000015a4000015a4000015a4000015a40000
15a4000015a4000015a4000015a4000015a4000015a4000015a4000015a4
000015a4000015a4000015a4000015a4000015a4000015a4000015a40000
15a4000015a4000015a4000015a4000015a4000015a4000015a4000015a4
000015a4000015a4000015a4000016c4000016c4000016c4000016c40000
16c4000016c4000016c4000016c4000016c4000016c4000016c4000016c4
0000187400001874000018740000187400001874000018740000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e0000193e0000193e0000193e0000193e0000193e0000193e0000193e
0000193e0000193e0000193e0000193e0000193e0000193e0000193e0000
193e000019ec00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c
00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c00001a9c0000
1a9c00001a9c000100000f260120001000c3000700020010002f00650000
11902410000400010000000e00ae00000003000000000064000000000003
00000007007600640001000000000000003200da0001000000000003000e
010c0001000000000004000e011a0001000000000006000e012800010000
00000007003b01360003000104090000006401710003000104090001001c
01d50003000104090002000e01f10003000104090003001c01ff00030001
04090004001c021b0003000104090006001c023700030001040900070076
025300a9002000320030003100320020004d006900630072006f0073006f
0066007400200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e00430061006c006900620072006900200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200074006800650020004d006900630072006f0073006f00660074
002000670072006f007500700020006f006600200063006f006d00700061
006e006900650073002ea92032303132204d6963726f736f667420436f72
706f726174696f6e2e20416c6c205269676874732052657365727665642e
544c524952522b43616c69627269544c524952522b43616c69627269544c
524952522b43616c6962726943616c696272692069732061207472616465
6d61726b206f6620746865204d6963726f736f66742067726f7570206f66
20636f6d70616e6965732e00a9002000320030003100320020004d006900
630072006f0073006f0066007400200043006f00720070006f0072006100
740069006f006e002e00200041006c006c00200052006900670068007400
73002000520065007300650072007600650064002e0054004c0052004900
520052002b00430061006c00690062007200690052006500670075006c00
6100720054004c0052004900520052002b00430061006c00690062007200
690054004c0052004900520052002b00430061006c006900620072006900
54004c0052004900520052002b00430061006c0069006200720069004300
61006c006900620072006900200069007300200061002000740072006100
640065006d00610072006b0020006f006600200074006800650020004d00
6900630072006f0073006f00660074002000670072006f00750070002000
6f006600200063006f006d00700061006e006900650073002e00b2090320
b80284b40918014a20b80283b40918014a20b80282b40918014a20b80281
b40918014a20b80280b40918014a20b8027fb40918014a20b8027eb40918
014a20b8027db40918014a20b8027cb40918014a20b8027bb40918014a20
b8027ab40918014a20b80279b40918014a20b80278b40918014a20b80277
b40918014a20b80276b40918014a20b80275b40918014a20b80274b40918
014a20b80273b40918014a20b80271b40918014a20b80270b40918014a20
b8026fb40918014a20b8026eb40918014a20b8026db40918014a20b8026c
b40918014a20b8026bb40918014a20b8026ab40918014a20b80269b40918
014a20b80268b40918014a20b80267b40918014a20b80266b40918014a20
b80265b40918014a20b80264b40918014a20b80263b40918014a20b80262
b40918014a20b80261b40918014a20b80260b40918014a20b8025fb40918
014a20b8025eb40918014a20b8025db40918014a20b8025cb40918014a20
b8025bb40918014a20b8025ab40918014a20b80259b40918014a20b80258
b40918014a20b80257b40918014a20b80256b40918014a20b80255b40918
014a20b80254b40918014a20b80253b40918014a20b80252b40918014a20
b80251b40918014a20b80250b40918014a20b8024fb40918014a20b8024e
b40918014a20b8024db40918014a20b8024cb40918014a20b8024bb40918
014a20b8024ab40918014a20b80249b40918014a20b80248b40918014a20
b80247b40918014a20b80246b40918014a20b80245b40918014a20b80244
b40918014a20b80243b40918014a20b80242b40918014a20b80241b40918
014a20b80240b40918014a20b8023fb40918014a20b8023eb40918014a20
b8023db40918014a20b8023cb40918014a20b8023bb40918014a20b8023a
b40918014a20b80239b40918014a20b80238b40918014a20b80237b40918
014a20b80236b40918014a20b80235b40918014a20b80234b40918014a20
b80233b40918014a20b80232b40918014a20b80231b40918014a20b80230
b40918014a20b8022fb40918014a20b8022eb40918014a20b8022db40918
014a20b8022cb40918014a20b8022bb40918014a20b8022ab40918014a20
b80229b40918014a20b80228b40918014a20b80227b40918014a20b80226
b40918014a20b80225b40918014a20b80224b40918014a20b80223b40918
014a20b80222b40918014a20b80221b40918014a20b80220b40918014a20
b8021fb40918014a20b8021eb40918014a20b8021db40918014a20b8021c
b40918014a20b8021bb40918014a20b8021ab40918014a20b80219b40918
014a20b80218b40918014a20b80217b40918014a20b80216b40918014a20
b80215b40918014a20b80214b40918014a20b80213b40918014a20b80212
b40918014a20b80211b40918014a20b80210b40918014a20b8020fb40918
014a20b8020eb40918014a20b8020db40918014a20b8020cb40918014a20
b8020bb40918014a20b8020ab40918014a20b80209b40918014a20b80208
b40918014a20b80207b40918014a20b80206b40918014a20b80205b40918
014a20b80204b40918014a20b80203b40918014a20b80202b40918014a20
b80201b40918014a20b80200b40918014a20b801ffb40918014a20b801fe
b40918014a20b801fdb40918014a20b801fcb40918014a20b801fbb40918
014a20b801fab40918014a20b801f9b40918014a20b801f8b40918014a20
b801f7b40918014a20b801f6b40918014a20b801f5b40918014a20b801f4
b40918014a20b801f3b40918014a20b801f2b40918014a20b801f1b40918
014a20b801f0b40918014a20b801efb40918014a20b801eeb40918014a20
b801edb40918014a20b801ecb40918014a20b801ebb40918014a20b801ea
b40918014a20b801e9b40918014a20b801e8b40918014a20b801e7b40918
014a20b801e6b40918014a20b801e5b40918014a20b801e4b40918014a20
b801e3b40918014a20b801e2b40918014a20b801e1b40918014a20b801e0
b40918014a20b801dfb40918014a20b801deb40918014a20b801ddb40918
014a20b801dcb40918014a20b801dbb40918014a20b801dab40918014a20
b801d9b40918014a20b801d8b40918014a20b801d7b40918014a20b801d6
b40918014a20b801d5b40918014a20b801d4b40918014a20b801d3b40918
014a20b801d2b40918014a20b801d1b40918014a20b801d0b40918014a20
b801cfb40918014a20b801ceb40918014a20b801cdb40918014a20b801cc
b40918014a20b801cbb40918014a20b801cab40918014a20b801c9b40918
014a20b801c8b40918014a20b801c7b40918014a20b801c6b40918014a20
b801c5b40918014a20b801c4b40918014a20b801c3b40918014a20b801c2
b40918014a20b801c1b40918014a20b801c0b40918014a20b801bfb40918
014a20b801beb40918014a20b801bdb40918014a20b801bcb40918014a20
b801bbb40918014a20b801bab40918014a20b801b9b40918014a20b801b8
b40918014a20b801b7b40918014a20b801b6b40918014a20b801b5b40918
014a20b801b4b40918014a20b801b3b40918014a20b801b2b40918014a20
b801b1b40918014a20b801b0b40918014a20b801afb40918014a20b801ae
b40918014a20b801adb40918014a20b801acb40918014a20b801abb40918
014a20b801aab40918014a20b801a9b40918014a20b801a8b40918014a20
b801a7b40918014a20b801a6b40918014a20b801a5b40918014a20b801a4
b40918014a20b801a3b40918014a20b801a2b40918014a20b801a1b40918
014a20b801a0b40918014a20b8019fb40918014a20b8019eb40918014a20
b8019db40918014a20b8019cb40918014a20b8019bb40918014a20b8019a
b40918014a20b80199b40918014a20b80198b40918014a20b80197b40918
014a20b80196b40918014a20b80195b40918014a20b80194b40918014a20
b80193b40918014a20b80192b40918014a20b80191b40918014a20b80190
b40918014a20b8018fb40918014a20b8018eb40918014a20b8018db40918
014a20b8018cb40918014a20b8018bb40918014a20b8018ab40918014a20
b80189b40918014a20b80188b40918014a20b80187b40918014a20b80186
b40918014a20b80185b40918014a20b80184b40918014a20b80183b40918
014a20b80182b40918014a20b80181b40918014a20b80180b40918014a20
b8017fb40918014a20b8017eb40918014a20b8017db40918014a20b8017c
b40918014a20b8017bb40918014a20b8017ab40918014a20b80179b40918
014a20b80178b40918014a20b80177b40918014a20b80176b40918014a20
b80175b40918014a20b80174b40918014a20b80173b40918014a20b80172
b40918014a20b80171b40918014a20b80170b40918014a20b8016fb40918
014a20b8016eb40918014a20b8016db40918014a20b8016cb40918014a20
b8016bb40918014a20b8016ab40918014a20b80169b40918014a20b80168
b40918014a20b80167b40918014a20b80166b40918014a20b80165b40918
014a20b80164b40918014a20b80163b40918014a20b80162b40918014a20
b80161b40918014a20b80160b40918014a20b8015fb40918014a20b8015e
b40918014a20b8015db40918014a20b8015cb40918014a20b8015bb40918
014a20b8015ab40918014a20b80159b40918014a20b80158b40918014a20
b80157b40918014a20b80156b40918014a20b80155b40918014a20b80154
b40918014a20b80153b40918014a20b80152b40918014a20b80150b40918
014a20b8014fb40918014a20b8014eb40918014a20b8014cb40918014a20
b8014bb40918014a20b8014ab40918014a20b80149b40918014a20b80148
b40918014a20b80147b40918014a20b80146b40918014a20b80145b40918
014a20b80144b40918014a20b80143b30918014ab80284b21e3e1fb80283
b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027fb21e
3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e3e1f
b8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d431fb802
76b21d431fb80275b21d411fb80274b21d431fb80273b21d431fb80272b2
1d411fb80271b21d421fb80270b21d421fb8026fb21d421fb8026eb21d43
1fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab21c451fb8
0269b21c451fb80268b21c451fb80267b21c451fb80266b21c441fb80265
b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb80261b21c
451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025db21c451f
b8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c451fb802
58b21c451fb80257b21c451fb80256b21c451fb80255b21c451fb80254b2
1c451fb80253b21c451fb80252b21c451fb80251b21c451fb80250b21c45
1fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb21c451fb8
024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a1fb80247
b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243b21b
4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023fb21b4a1f
b8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1fb802
3ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1fb80236b2
1b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb80232b21b4a
1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8
022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229
b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb80225b21b
4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b4b1f
b80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1fb802
1cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb80218b2
1a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b21a4f
1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e1fb8
020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8020b
b21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207b21a
4f1fb80206b219501fb80205b219511fb80204b219511fb80203b219501f
b80202b219511fb80201b219511fb80200b219511fb801ffb219511fb801
feb219501fb801fdb219511fb801fcb219511fb801fbb219511fb801fab2
19501fb801f9b219511fb801f8b219511fb801f7b219511fb801f6b21951
1fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b218541fb8
01f1b218541fb801f0b218531fb801efb218541fb801eeb218541fb801ed
b218541fb801ecb218531fb801ebb218531fb801eab218541fb801e9b218
541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5b218541f
b801e4b218531fb801e3b218541fb801e2b218541fb801e1b218541fb801
e0b218531fb801dfb218531fb801deb218541fb801ddb218541fb801dcb2
18541fb801dbb218541fb801dab218531fb801d9b218541fb801d8b21854
1fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b217571fb8
01d3b217571fb801d2b217571fb801d1b217571fb801d0b217561fb801cf
b217561fb801ceb217571fb801cdb217571fb801ccb217571fb801cbb217
571fb801cab217561fb801c9b217561fb801c8b217571fb801c7b217571f
b801c6b217571fb801c5b217571fb801c4b217571fb801c3b217561fb801
c2b217571fb801c1b217571fb801c0b217571fb801bfb217561fb801beb2
17561fb801bdb217571fb801bcb217571fb801bbb217571fb801bab21757
1fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b217571fb8
01b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b1fb801b1
b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb801adb216
5b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9b2163f1f
b801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1fb801
a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2
165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2165b
1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2163e1fb8
0197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e1fb80193
b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8018fb216
5b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018bb2165b1f
b8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b2165b1fb801
86b215611fb80185b215621fb80184b215621fb80183b215661fb80182b2
15661fb80181b215551fb80180b215451fb8017fb215361fb8017eb21536
1fb8017db215611fb8017cb215621fb8017bb215621fb8017ab215641fb8
0179b215661fb80178b215661fb80177b215661fb80176b215661fb80175
b215661fb80174b215661fb80173b215451fb80172b215621fb80171b215
621fb80170b215631fb8016fb215641fb8016eb215661fb8016db215661f
b8016cb215661fb8016bb215661fb8016ab215661fb80169b215621fb801
68b215621fb80167b215611fb80166b215641fb80165b215641fb80164b2
15661fb80163b215661fb80162b215661fb80161b215661fb80160b21566
1fb8015fb215661fb8015eb215551fb8015db215451fb8015cb215451fb8
015bb215361fb8015ab215611fb80159b215621fb80158b215621fb80157
b215631fb80156b215641fb80155b215661fb80154b215661fb80153b215
661fb80152b215661fb80151b214401fb80150b214551fb8014fb214561f
b8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214401fb801
4ab214411fb80149b214401fb80148b214401fb80147b214411fb80146b2
147e1fb80145b214871fb80144b2147f1fb80143b214801fb80142b21246
1fb80141b212461fb80140b212461fb8013fb212461fb8013eb212441fb8
013db212461fb8013cb211591fb8013bb211591fb8013ab2115b1fb80139
b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb80135b211
5b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131b211551f
b80130b211571fb8012fb211571fb8012eb211581fb8012db211591fb801
2cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1fb80128b2
115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb80124b21156
1fb80123b211571fb80122b211581fb80121b211591fb80120b2115a1fb8
011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8011b
b2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb80117b210
5f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113b2105f1f
b80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb2105f1fb801
0eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1fb8010ab2
105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105d
1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2105f1fb8
0101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f621f
fb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f641ff40f
621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641fed0f621f
ec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e671fe50e
681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681fde0e681f
dd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d311fd60d
6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1f
ce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d
691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f40ffc00d
311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c741f
b80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c741fb10c
741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1f
a90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b
791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f
9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b
7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f
8503251f8403381f8301381f8255805581ab80557f557d557eab7d550b7d
010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a557955775578
ab7755ba028600660285403c5576ab755504751475747503f47501ab7501
44750130750102007510752075030c7455725573ab7255007250728072b0
72043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c720d104671
556f5570ab6f556e666d556a03251f6938675568ab67556638645565ab64
5563386255613860555f385d555eab5d555c385a555bab5a555938585557
03251f5638545555ab54555338515552ab51554f384e554e03251f4d384b
554cab4b554a38485549ab4855473846554503381f001c101c201c0310b8
ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc01b03120f
1a1f1a02290f1901434f19016f197f198f19030f18cf18024018292c460f
17cf17df17ef1704134017292e460016101620160315b8ffc0b3164d5446
b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f15010f15
1f1502451f15010011e011f0110315bf10cf10020f0f010f0fff0f02400f
3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff
0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f0b02400b
3f4346400b2d30460003012001010001100120010308b8ffc0b301151f46
b80100b316010501b80190b154532b2b4bb80800524bb008505bb00188b0
2553b00188b040515ab00688b000555a5b58b101018e59b101024354b014
4b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0805358b0
401d594bb0ff5358b0001db1160042592b5e7375732b2b745e732b2b5e73
742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b7374755e73
5e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b
2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2bb1000243545841ff0284006402830064028200640281
006402800064027f0064027e0064027d0064027c0064027b0064027a0064
027900640278006402770064027600640275006402740064027300640271
006402700064026f0064026e0064026d0064026c0064026b0064026a0064
026900640268006402670064026600640265006402640064026300640262
00640261006402600064025f0064025e0064025d0064025c0064025b0064
025a00640259006402580064025700640256006402550064025400640253
0064025200640251006402500064024f0064024e0064024d0064024c0064
024b0064024a006402490064024800640247006402460064024500640244
006402430064024200640241006402400064023f0064023e0064023d0064
023c0064023b0064023a0064023900640238006402370064023600640235
00640234006402330064023200640231006402300064022f0064022e0064
022d0064022c0064022b0064022a00640229006402280064022700640226
0064022500640224006402230064022200640221006402200064021f0064
021e0064021d0064021c0064021b0064021a006402190064021800640217
006402160064021500640214006402130064021200640211006402100064
020f0064020e0064020d0064020c0064020b0064020a0064020900640208
0064020700640206006402050064020441ff006402030064020200640201
00640200006401ff006401fe006401fd006401fc006401fb006401fa0064
01f9006401f8006401f7006401f6006401f5006401f4006401f3006401f2
006401f1006401f0006401ef006401ee006401ed006401ec006401eb0064
01ea006401e9006401e8006401e7006401e6006401e5006401e4006401e3
006401e2006401e1006401e0006401df006401de006401dd006401dc0064
01db006401da006401d9006401d8006401d7006401d6006401d5006401d4
006401d3006401d2006401d1006401d0006401cf006401ce006401cd0064
01cc006401cb006401ca006401c9006401c8006401c7006401c6006401c5
006401c4006401c3006401c2006401c1006401c0006401bf006401be0064
01bd006401bc006401bb006401ba006401b9006401b8006401b7006401b6
006401b5006401b4006401b3006401b2006401b1006401b0006401af0064
01ae006401ad006401ac006401ab006401aa006401a9006401a8006401a7
006401a6006401a5006401a4006401a3006401a2006401a1006401a00064
019f0064019e0064019d0064019c0064019b0064019a0064019900640198
006401970064019600640195006401940064019300640192006401910064
01900064018f0064018e0064018d0064018c0064018b0064018a00640189
006401880064018700640186006401850064418001840064018300640182
00640181006401800064017f0064017e0064017d0064017c0064017b0064
017a00640179006401780064017700640176006401750064017400640173
0064017200640171006401700064016f0064016e0064016d0064016c0064
016b0064016a006401690064016800640167006401660064016500640164
006401630064016200640161006401600064015f0064015e0064015d0064
015c0064015b0064015a0064015900640158006401570064015600640155
006401540064015300640152006401500064014f0064014e0064014c0064
014b0064014a006401490064014800640147006401460064014500640144
0064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[6813 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 1692 258 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>UGXAAA+Calibri AddT42Char 
2 2930 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>UGXAAA+Calibri AddT42Char 
2 3252 296 <00010025fffa02860578003c0064b2161000b8ffe0b40b014d001bb8fff0
b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b30b014d1b
b801f9b2302a25b8ffd040121011014c250aed36471a26ed3048204c1048
003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c4313001140e022322
2e0223220e02151533321e02151406232311140e0223222e023511232226
35343e02333335343e0233321e0402860405080607151e291b2534200ec9
080b0905120fc908132018182013087f101004080c087f23486d4a234224
0c0803050f13170e05090b091833513a6207111a132420fceb080b080404
080b0803152024131a11075d5e8756290d0f0c131b00>UGXAAA+Calibri AddT42Char 
2 4902 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>UGXAAA+Calibri AddT42Char 
2 5828 449 <00010035fffa058403bc004500deb90047ffc0403d0f014d38080c014d29
380137080c014d252e01262101262001261f01261e01261d01271c012804
012903013a3b013b3a013b2d013c2c01102015014d10b8ffe0b310014d10
b8ffe0400a0d014d10200c014d100fb8ffe0b310014d0fb8ffe0400c0d01
4d0f200c014d0f414910b8ffe040200f014d3f104f106f107f1004104012
164810334925493a902c012c200f014d2cb8ffc04010131648672c772c02
452c012c174c094c003f3fd55d5d2b2b5dc43f3fcd2b5d2b3f012f2b2b2b
2f2b2b2b2b3130005d5d5d5d015d5d5d5d5d5d5d5d5d2b5d2b2b01140607
010e0323222e0227032707030e0323222e022701262635343e0233321e02
17131737133e0333321e0217131737133e0333321e0205840405fef7030d
17281e1f2a190c03bd0202af030d1a291e1f27190c03fef9050408132017
1c22120803d90202c70209121f19181f120802d70201d6020913211a181d
1107039f07140ffca90b0e080304080e0a028d0909fd730b0e080304080e
0a03570f1407090b070203070d09fd1a090902e6090d070303070c08fd18
090902e6090d070302080a00>UGXAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>UGXAAA+Calibri AddT42Char 
UGXAAA+Calibri /CharStrings get begin
/a 258 def
/e 286 def
/f 296 def
/r 396 def
/w 449 def
end
UGXAAA+Calibri /Encoding get
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 114 /r put
dup 119 /w put
pop
end
%ADOEndSubsetFont
/PYNFIB+Calibri /UGXAAA+Calibri findfont ct_VMDictPut
/PYNFIB+Calibri*1 
[97{/.notdef}rp /a 3{/.notdef}rp /e /f 11{/.notdef}rp /r 4{/.notdef}rp 
/w 136{/.notdef}rp]
PYNFIB+Calibri nf
PYNFIB+Calibri*1 [15.96 0 0 -15.96 0 0 ]msf
2.72251 73.8307 mo
(wafer)
[11.2805 7.55872 4.56445 7.91936 0 ]xsh
45.9646 63.347 mo
526.805 63.347 li
526.805 75.587 li
45.9646 75.587 li
cp
.286961 0 .192477 0 cmyk
ef
.6 lw
45.9646 63.347 mo
526.805 63.347 li
526.805 75.587 li
45.9646 75.587 li
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: UGXAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PYNFIB+Calibri gcheck setglobal} if
2 2348 272 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>PYNFIB+Calibri AddT42Char 
2 3514 346 <00010099fffa03a0057100320079b43f34012a13b8ffe8b30b014d13b8ff
f0b40f10014c13b8fff6b30c014d13b8fff0b30d014d13b801f840171e0b
0a0c014d0b100d014d0b180b014d0b100f10014c0bb801f8400a00400c01
4d001e2a1910b80106b72d4a2446194c054c003f3f3f3fed1239012f2f2b
e12b2b2b2b10e12b2b2b2b3931305d25140e0223222e023511342e022322
060711140e0223222e023511343e0233321e021511363633321e021503a0
0812201819201208182e49303e7c44081220191820130707132018192012
084790495a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08
0404080b080538080c080404080c08fde54b493d66896100>PYNFIB+Calibri AddT42Char 
2 4020 364 <00010099fffa037c057100340095400c3f3601293101314012014d31b8ff
d0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0b30b014d
31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8fff6b30c01
4d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c014d0016
220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f10f12b2b
2b2b32e02b2b2b2b2b31305d5d25140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>PYNFIB+Calibri AddT42Char 
2 5540 437 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>PYNFIB+Calibri AddT42Char 
PYNFIB+Calibri /CharStrings get begin
/c 272 def
/h 346 def
/k 364 def
/u 437 def
end
PYNFIB+Calibri /Encoding get
dup 99 /c put
dup 104 /h put
dup 107 /k put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PYNFIB+Calibri*1 
[97{/.notdef}rp /a /.notdef /c /.notdef /e /f /.notdef 
/h 2{/.notdef}rp /k 6{/.notdef}rp /r 2{/.notdef}rp /u /.notdef 
/w 136{/.notdef}rp]
PYNFIB+Calibri nf
PYNFIB+Calibri*1 [15.96 0 0 -15.96 0 0 ]msf
2.68381 115.15 mo
(chuck)
[6.71922 8.40125 8.39964 6.71923 0 ]xsh
60.0046 75.827 mo
90.2446 75.827 li
90.2446 105.107 li
60.0046 105.107 li
60.0046 75.827 li
.245304 .194125 .199344 0 cmyk
ef
60.0046 75.827 mo
60.0046 75.5271 li
90.2446 75.5271 li
90.4567 75.6149 li
90.5446 75.827 li
90.5446 105.107 li
90.4567 105.319 li
90.2446 105.407 li
60.0046 105.407 li
59.7925 105.319 li
59.7046 105.107 li
59.7046 75.827 li
59.7925 75.6149 li
60.0046 75.5271 li
60.0046 75.827 li
60.3046 75.827 li
60.3046 104.807 li
89.9447 104.807 li
89.9447 76.127 li
60.0046 76.127 li
60.0046 75.827 li
60.3046 75.827 li
60.0046 75.827 li
.75021 .679683 .670222 .90164 cmyk
f
120.365 75.827 mo
150.725 75.827 li
150.725 105.107 li
120.365 105.107 li
120.365 75.827 li
.245304 .194125 .199344 0 cmyk
ef
120.365 75.827 mo
120.365 75.5271 li
150.725 75.5271 li
150.937 75.6149 li
151.025 75.827 li
151.025 105.107 li
150.937 105.319 li
150.725 105.407 li
120.365 105.407 li
120.152 105.319 li
120.065 105.107 li
120.065 75.827 li
120.152 75.6149 li
120.365 75.5271 li
120.365 75.827 li
120.665 75.827 li
120.665 104.807 li
150.425 104.807 li
150.425 76.127 li
120.365 76.127 li
120.365 75.827 li
120.665 75.827 li
120.365 75.827 li
.75021 .679683 .670222 .90164 cmyk
f
180.725 75.827 mo
211.085 75.827 li
211.085 105.107 li
180.725 105.107 li
180.725 75.827 li
.245304 .194125 .199344 0 cmyk
ef
180.725 75.827 mo
180.725 75.5271 li
211.085 75.5271 li
211.297 75.6149 li
211.385 75.827 li
211.385 105.107 li
211.297 105.319 li
211.085 105.407 li
180.725 105.407 li
180.513 105.319 li
180.425 105.107 li
180.425 75.827 li
180.513 75.6149 li
180.725 75.5271 li
180.725 75.827 li
181.025 75.827 li
181.025 104.807 li
210.785 104.807 li
210.785 76.1272 li
180.725 76.127 li
180.725 75.827 li
181.025 75.827 li
180.725 75.827 li
.75021 .679683 .670222 .90164 cmyk
f
241.085 75.827 mo
271.445 75.827 li
271.445 105.107 li
241.085 105.107 li
241.085 75.827 li
.245304 .194125 .199344 0 cmyk
ef
241.085 75.827 mo
241.085 75.5271 li
271.445 75.5271 li
271.657 75.6149 li
271.745 75.827 li
271.745 105.107 li
271.657 105.319 li
271.445 105.407 li
241.085 105.407 li
240.872 105.319 li
240.785 105.107 li
240.785 75.827 li
240.872 75.6149 li
241.085 75.5271 li
241.085 75.827 li
241.384 75.827 li
241.384 104.807 li
271.145 104.807 li
271.145 76.1272 li
241.085 76.127 li
241.085 75.827 li
241.384 75.827 li
241.085 75.827 li
.75021 .679683 .670222 .90164 cmyk
f
301.445 75.827 mo
331.805 75.827 li
331.805 105.107 li
301.445 105.107 li
301.445 75.827 li
.245304 .194125 .199344 0 cmyk
ef
301.445 75.827 mo
301.445 75.5271 li
331.805 75.5271 li
332.017 75.6149 li
332.105 75.827 li
332.105 105.107 li
332.017 105.319 li
331.805 105.407 li
301.445 105.407 li
301.232 105.319 li
301.145 105.107 li
301.145 75.827 li
301.233 75.6149 li
301.445 75.5271 li
301.445 75.827 li
301.745 75.827 li
301.745 104.807 li
331.505 104.807 li
331.505 76.127 li
301.445 76.127 li
301.445 75.827 li
301.745 75.827 li
301.445 75.827 li
.75021 .679683 .670222 .90164 cmyk
f
361.805 75.827 mo
392.165 75.827 li
392.165 105.107 li
361.805 105.107 li
361.805 75.827 li
.245304 .194125 .199344 0 cmyk
ef
361.805 75.827 mo
361.805 75.5271 li
392.165 75.5271 li
392.377 75.6149 li
392.465 75.827 li
392.465 105.107 li
392.377 105.319 li
392.165 105.407 li
361.805 105.407 li
361.592 105.319 li
361.505 105.107 li
361.505 75.827 li
361.592 75.6149 li
361.805 75.5271 li
361.805 75.827 li
362.105 75.827 li
362.105 104.807 li
391.865 104.807 li
391.865 76.127 li
361.805 76.127 li
361.805 75.827 li
362.105 75.827 li
361.805 75.827 li
.75021 .679683 .670222 .90164 cmyk
f
422.165 75.827 mo
452.524 75.827 li
452.524 105.107 li
422.165 105.107 li
422.165 75.827 li
.245304 .194125 .199344 0 cmyk
ef
422.165 75.827 mo
422.165 75.5271 li
452.524 75.5271 li
452.737 75.6149 li
452.825 75.827 li
452.825 105.107 li
452.737 105.319 li
452.524 105.407 li
422.165 105.407 li
421.952 105.319 li
421.865 105.107 li
421.865 75.827 li
421.953 75.6149 li
422.165 75.5271 li
422.165 75.827 li
422.465 75.827 li
422.465 104.807 li
452.225 104.807 li
452.225 76.1272 li
422.165 76.127 li
422.165 75.827 li
422.465 75.827 li
422.165 75.827 li
.75021 .679683 .670222 .90164 cmyk
f
482.525 75.827 mo
512.885 75.827 li
512.885 105.107 li
482.525 105.107 li
482.525 75.827 li
.245304 .194125 .199344 0 cmyk
ef
482.525 75.827 mo
482.525 75.5271 li
512.885 75.5271 li
513.097 75.6149 li
513.185 75.827 li
513.185 105.107 li
513.097 105.319 li
512.885 105.407 li
482.525 105.407 li
482.312 105.319 li
482.225 105.107 li
482.225 75.827 li
482.312 75.6149 li
482.525 75.5271 li
482.525 75.827 li
482.825 75.827 li
482.825 104.807 li
512.584 104.807 li
512.584 76.1272 li
482.525 76.127 li
482.525 75.827 li
482.825 75.827 li
482.525 75.827 li
.75021 .679683 .670222 .90164 cmyk
f
45.9046 99.047 mo
526.745 99.047 li
526.745 122.327 li
45.9046 122.327 li
45.9046 99.047 li
.245304 .194125 .199344 0 cmyk
ef
532.905 117.047 mo
526.745 117.047 li
526.745 104.447 li
532.905 104.447 li
532.905 117.047 li
45.9046 117.047 mo
40.7446 117.047 li
40.7446 104.447 li
45.9046 104.447 li
45.9046 117.047 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 71.0954 169.568 ]ct
[493.32 0 0 13.5333 -30.8306 52.0543 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 1028 
/H 29 
/M[1028 0 0 -29 0 29 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 1028 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1028 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1028 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1028 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&h#N$,JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcOU,JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&h#N$,JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcOU,JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&h#N$,JcLB&
JcLB&JcLB&JcP$8rW/PkJc^N*Jc^N*Jc^N*JcbcMrW.rXJcLB&JcLB&JcLB&JcOU,JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&huEo]!sAc3#H8#]$%`J8$%`J8$%`J8$18*'#6k>7!s/)qJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&h#R9O#lt/6$4ROZ'G_LK(kNTV(kNTV
(kNTV(l9(6(D[\t&.JsJ#6Y']!.k3&!.k3&!.k3&!.k4-!;cet!eLK*!eLK*!eLK*!eLLC!rE#j!.k3&
!.k3&!.k3&!.k3&!:Kmq!<`]@(`a_E-RgMqTIb[GJh2L)Jh2L)Jh2L)r@A=,.Oc_j+<;:2#m:9l!.k3&
!.k3&!.k3&!.k4,!;QWo!<<3#!s/T."-`q?"G-c."G-c."G-c6"9JZ."TAK(!Wi<%KE-T(JcLB&JcLB&
JcLB&j8]Pg":>kd.53V=3]oR+5(YtM5(YtM5(YtM5(Yuf4psM93]JuN.3K?4"9J?!JcLB&JcLB&JcLB&
JcLB&m/R.f!r`=l"bHo0"bHo0"bHo0"bHpQ"o\W*!WeA_JcLB&JcLB&JcLB&JcOU,qu@*+#SS@73^?)&
7nH=:97ffg97ffg97ffg98Q:G8kDNB6pNd90-Lu7!f$c-!.k3&!.k3&!.k3&!9*t[!<NE%"T\f2Ws4.[
Jd-f2Jd-f2Jd-f2n-/ms#5eW+"9JW!!.k3&!.k3&!.k3&!.k3&!:^$s!<`lP/NlQs:/=\_Sl():Jl.+s
Jl.+sJl.+sqb[_t:esh[7Qi=C%Klfs!.k3&!.k3&!.k3&!.k4,!;ZZt!<`Q0N<Xt=Jd-f2Jd-f2Jd-i3
!!NE-"9F2VJcLB&JcLB&JcLB&JcOm4#QY2E,r\7d;,[BlW`"FHJl71uJl71uJl71umo'-`#Z=Mn75lM+
#Qaf&JcLB&JcLB&JcLB&JcLB&mf3Fj!sJl-#+GjL#D*24#D*24#D*24#P\Q'"p5#4!s+PbJcLB&JcLB&
JcLB&JcOU,r;[**$5kBX8l/DaO&U^1JlI>$JlI>$JlIG'!`Mun"\Lp/)%$J%!.k3&!.k3&!.k3&!.k43
!!WH)"9er5#,VWW#D*24#D*24#D*24#O;U!"pP57"9AQ"!.k3&!.k3&!.k3&!.k3&!:^$o":Q8)5tk-S
RT+l<JlI>$JlI>$JlI>$pJ_Ar;+s81*"2t7!.k3&!.k3&!.k3&!.k4,!;lg"!<NB-#)ie=#D*24#D*24
#D*24#6Y57"9JUZ!.k3&!.k3&!.k3&!.k44!!`W:*\p)W;H'GlJlI>$JlI>$JlI>$JlM&8#?+Mp6S]\m
"T&1N!.k3&!.k3&!.k3&!.k4?!!NB)"9eu6R0S<KJd6l4Jd6l4Jd6l4p'1a*"pG,2!L!M8!.k3&!.k3&
!.k3&!8RYR!!`W9*ATrU;H&TTJlI>$JlI>$JlI>$KN%tN;?]c]1*$f,L]E#,JcLB&JcLB&JcLB&j8]>a
!X&Z2#,MQV#D*24#D*24#D*24#O2Nt"pP56!Wi,tJcLB&JcLB&JcLB&JcLB&nGidr$QC]`9Mn`W<.\)$
<.\)$<.\)$<.\*D<!Q?!9L(3L$NlUnJcLB&JcLB&JcLB&JcOU,qZ$^""9f!g#D*24#D*24#D*24#D*0_
"pG,2L&cf*JcLB&JcLB&JcLB&jT#Me#o4sO7o*!Z;h@r";h@r";h@r";h@s6;[6/q7lr.8#m0u(JcLB&
JcLB&JcLB&JcLB&mf3Ik"9er5R0S<KJd6l4Jd6l4Jd6l4p'1^)"U,#0OoU(6JcLB&JcLB&JcLB&h#RBR
#lt5B+>Q5T:JaoM;M%eu;M%eu;M%eu;MJ'O;,C%\"[Omd&I&8l!.k3&!.k3&!.k3&!.k42!!`N,"9er5
"p_(2Jd-f2Jd-f2Jd-f2Jd1TH#6tG;"U,#2!Vl_I!.k3&!.k3&!.k3&!.k4?!"&i:(aq=/7S6?J9qG.4
:P)Ao:P)Ao:P)Ao:]!op9h\5Q7R8s](^gJ1!.k3&!.k3&!.k3&!.k4,!;ZZr!X&B)Ns:1?Jd-f2Jd-f2
Jd-o5rWN?,!s4/VJcLB&JcLB&JcLB&JcOj3$3:>A)CRC%4[;;$W^VM.Jjk8[Jjk8[Jjk8[mmRRO5sRRn
1FO.P"p+Q#JcLB&JcLB&JcLB&JcLB&mJm=i!<WIm"bHo0"bHo0"bHo0"bHpO"Tnl0!<J;_JcLB&JcLB&
JcLB&JcOU,qZ$s)#7hXo,qL](1,P1PJi/-;Ji/-;Ji/-;M)>Jo1,1F5,p3:,%gN/j!.k3&!.k3&!.k3&
!.k40!!<6'!s>D'JcpZ.JcpZ.JcpZ.JctBB!s8W,!VZSG!.k3&!.k3&!.k3&!.k4=!!r`3$P4!h)BBnA
T-/_.JfoXfJfoXfJfoXfr#c:f*uu7:'G(WV"-ES8!.k3&!.k3&!.k3&!8RYL!!<6&!Wi9%P66C=JcgT,
JcgT,Jcgi3rW30&!W`=R!.k3&!.k3&!.k3&!.k40!!iT."UGDB%1WoL&:tIF&:tIF&:tIF&:tJ_&-rdV
%1<IJ"U"l#!.k3&!.k3&!.k3&!.k3&!9jIa!<AVjJcUH(JcUH(JcUH(JcYZJ!<<.Z!.k3&!.k3&!.k3&
!.k4,!;?Hs!<E6("9akkJd$`0Jd$`0Jd$`0L]mqb"9S]+!J1<'!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!8RX,!.k3&!.k3&!.k3&!.k44!1j4C!J1?(!J1?(!J1?(!W)nR!.k3&!.k3&!.k3&!.k4,!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!8RX,!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k4,!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!8RX,!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k4,!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!9jK6~>

%%EndBinary
grestore
np
526.745 117.047 mo
45.9046 117.047 li
45.9046 104.447 li
526.745 104.447 li
526.745 117.047 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 71.0954 169.568 ]ct
[481.802 0 0 13.5333 -25.5519 52.0543 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 1004 
/H 29 
/M[1004 0 0 -29 0 29 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 1004 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1004 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1004 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1004 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
Jj4iOJj4iOJj4iOJj58[oeM+SJhhp5Jhhp5Jhhp5RPO+`Jhr!7Jhr!7Jhr!7Jhs8[h#N$,JcLB&JcLB&
JcLB&Z2fJ@Jj4iOJj4iOJj4iON^*1lJhhp5Jhhp5Jhhp5JhicMkqdoIJhr!7Jhr!7Jhr!7VDI$.JcLB&
JcLB&JcLB&JcN(VJj4iOJj4iOJj4iOJj58[oeM+SJhhp5Jhhp5Jhhp5RPO+`Jhr!7Jhr!7Jhr!7Jhs8[
h#N$,JcLB&JcLB&JcLB&Z2jeeLHpGVJj=oQJj=oQJj>Mbr'1*7qD!RVJh_j3Jh_j3Jh_j3T/$7!kqdoI
Jhr!7Jhr!7Jhr!7VDI$.JcLB&JcLB&JcLB&JcN(V!'pNLs$DN/JjY,WJjY,WJjY,WPXGI;r]p`R0ek=7
0JNAWJhM^/JhM^/JhM^/JhNcMs"OI+s"XI.s"a%!Jhr!7Jhr!7Jhr!7JhsJas"aO/h#N$,JcLB&JcLB&
JcLB&Z2b"r7Rp!@LJ!.jJkCVeJkCVeJkD5!#t[ZX7R\s_0.egQ/:oF)/:oF)/:oF)/:oFF/.!p\0.nn5
1,1O<mP0;JJh_j3Jh_j3Jh_j3X"a`21,1O>h#N$,JcLB&JcLB&JcLB&Z2b&&:Jk%i<JX\-<e=A(<e=A(
<e=A:<XVo,;c-=b.Ocbm-7A[:JgH!pJgH!pJgH!pJgI'9$R[8J-n-W"0.eh//FP3C/qP^-/qP^-/qP^-
0!$Z//1iM,0/22^JcLB&JcLB&JcLB&JcN(V"Bo&;@Ub+'Jn0IDJn0IDJn0IDP@Ou/@UEAD,9\-L*Vpb-
*.f/^*.f/^*.f/^*1n2R*??4F,Q94o/+"g<.Y9.%.Y9.%.Y9.%.]Oru/,h*U!.k3&!.k3&!.k3&!.k3V
!!R"ODf9W9Li\/hJocNbJocNbJod/t$$($(Des&*(`*q_'S7$N'S7$N'S7$N'S7$j'F>Kj(`OkN-71)d
mj<W5JgQ'rJgQ'rJgQ'rX<n)s-RL/f.,=lT!.k3&!.k3&!.k3&!3uS.Fa&(VH[CQrJp`/tJp`/tJp`/t
P^EdaH[9p\FV>;t&,?]e%Y>1B%Y>1B%Y>1B%\=.:%hK9c-7'r_,UDh&Jg,djJg,djJg,djJg.9?"XG?<
,pano!.k3&!.k3&!.k3&!.k3V!!.Lsrd]cTJq8N)Jq8N)Jq8N)PC`^`#(Ct0$jmCMq?ql_Jd[/<Jd[/<
Jd[/<T*kr4$jmCP+sA-R,46S*+G(_f+G(_f+G(_f+KHUf+sA-R,2E6N!.k3&!.k3&!.k3&!3uS)JV/Q+
JqAT+JqAT+JqAT8JcpW4#mh"8$%`J8$%`J8$%`J8$%`JT#mUhE#n%k!+X$.qJg#^hJg#^hJg#^hJg%-;
"!Aa1+Pd$L!.k3&!.k3&!.k3&!3uS)JqJ]-K7\`-K7\`-K7\`:K)gMr$%`J8$%`J8$%`J8$%`JP#ll.6
+G(_f+G(_f+G(_f+G(`6+93S@!.k3&!.k3&!.k3&!.k3V!.oiTK7\`-K7\`-K7\`9KCoP&$%`J8$%`J8
$%`J8$(;1b+G(_f+G(_f+G(_f+G(`5+Pd$L!.k3&!.k3&!.k3&!3uTVK7\`-K7\`-K7\`-K8tTW$%`J8
$%`J8$%`J8$%`JP$0`Ra+G(_f+G(_f+G(_f+Jp:;!.k3&!.k3&!.k3&!.k3V!.oiTK7\`-K7\`-K7\`9
KCoP&$%`J8$%`J8$%`J8$(;1b+G(_f+G(_f+G(_f+G(`5+Pd$L!.k3&!.k3&!.k3&!3uS)JqJ]-K7\`-
K7\`-K7\`:K)pQ3p'H<WJdI#8JdI#8JdI#8RgB'&kobR#JfoXfJfoXfJfoXfVBF[pJcLB&JcLB&JcLB&
JcN(V!J,iUK7\`-K7\`-K7\`-K91]dJq<S$JdI#8JdI#8JdI#8JdIkPrup\NJfoXfJfoXfJfoXfJfq!7
rup1uJcLB&JcLB&JcLB&JcN(V!e5`OKn=o.JqAT+JqAT+JqB,:#(_;S$k*FMq$DWZJdI#8JdI#8JdI#8
Sd>K,#n.7A+TNYP+bCkh+bCkh+bCkh+bCl;+TNYa+l*-M!.k3&!.k3&!.k3&!3uS-G^FjfIYWE)ItE0%
ItE0%ItE06Ig1@NI=$2M%fQq6$A&V:$A&V:$A&V:$A&VW$N:J:%M0p3lQUp)Jg,djJg,djJg,djW$26f
-/AQQ!.k3&!.k3&!.k3&!3uS-DfTrBGDCEpG_10lG_10lG_11(GRAY;FE2:7'GD&i')N5l&:tIF&:tIF
&:tIF&>0R>&eGWg'GVuAr[%Uimj3Q3JgH!pJgH!pJgH!pX<dikr[%Xl-f"cS!.k3&!.k3&!.k3&!3uS.
@:X"aBkrN@Jo$$TJo$$TJo$$TP\^_CBkV-i@3-C-)B'Lj(kNTV(kNTV(kNTV(kNTt(^_-!)B0Y;.k2tr
../I7-\<^t-\<^t-\<^t-`\Tt-n$Mo/):2W!.k3&!.k3&!.k3&!3uS,;c["(L0T=8Jm<n4Jm<n4Jm=ID
$<gP4;^Ne9,9e9Sr#gS6JfoXfJfoXfJfoXfTcaXb+X/-V,pk8t/c@6i/V5R+/V5R+/V5R+/V5RV/c@4%
/M8^4!.k3&!.k3&!.k3&!.k3V!!Pnc92//VLeiUuJkptoJkptoJkqV,#Yn,h91h`,/1^]Lq^I+GJgl:#
Jgl:#Jgl:#TIKji"=l#T0JWP\!&!^nJhM^/JhM^/JhM^/JhO2Y!&"7)!AQ:a!.k3&!.k3&!.k3&!.k3V
!!GSS6q'M!7Y4*]7Y4*]7Y4*]7[$:J6q'L15qt&I/hm,SJhDX-JhDX-JhDX-JhEZJ">DG^0JWP^!AcFt
14h9514h9514h9514h9^1'''br\E:0JcLB&JcLB&JcLB&JcN(V!'gHJL-^DWJjFuSJjFuSJjGPcr]gKK
1A3GS0nM-30nM-30nM-30q0lt1?gTH1P.E71P.E71P.E71Suta!.k3&!.k3&!.k3&!.k3V!.mFe5Cu+O
5Cu+O5Cu+[5P6d`14h9514h9514h9517Bu_1P.E71P.E71P.E71P.E[1Yi%_!.k3&!.k3&!.k3&!3uTV
5Cu+O5Cu+O5Cu+O5E7u$14h9514h9514h9514h9M1?gTH1P.E71P.E71P.E71Suta!.k3&!.k3&!.k3&
!.k3V!.mFe5Cu+O5Cu+O5Cu+[5P6d`14h9514h9514h9517Bu_1P.E71P.E71P.E71P.E[1Yi%_!.k3&
!.k3&!.k3&!3uTT~>

%%EndBinary
grestore
np
2.28 lw
45.9646 110.747 mo
526.784 110.747 li
.704677 .130922 0 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: QJJAAA+CambriaMath-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/QJJAAA+CambriaMath 5 GetGlyphDirectory
1868 <001C60D8A8C9B7EDAFE893F5FC1FF656FC61BE6EC450AACD5A0DF9BB13
1EBD8DF8B5ED5CF5AEEA3D84F24972B3E5CA4CBC5799371AEB2AA83D0C0E5D42
9141DCFE144FC38BC7DC3592F24D29DDCEB8DD9E7BF8D949F8090C8588B3889B
29F10E5823C1417A315379DF47B7D7DBC2DEB37100C8B3638A9709DC4D4EAFCF
F4152048F08FC6BF0F3ED91D4629E11321E4B2036D6A77F7AFAD51F43A67D6B0
C181316B971D49CA151A7C8215977BC9D131A48D26F07B2DB21EF4514B0FF716
5E21572640CA8FFFF5CE5255DB0CB294F8D7537748C4BC7ABFE4A62C27C77A26
4CD1AE452E837CFC1F5B3062EC78631419B149B770366CCA5E1D5A58ABBDE651
C162E754AFAE135937FFA6A8FB5F7F45DFF9F3B84D969D741CD7E577D0ACF516
FE24> |
2868 <001C60D8A8C9B7F88C248BC44663CC8512938FEF3C1D5F63370BE7BF14
771DBAFB5661CD9F0DBD1108DB477E8FD479A53F3FA0D6DF5416F79F5C56965D
BCFA2D2BF23BFFD0D7AA63F2307B61BF6B7E4E5BEFBDE61242588508A1CA99B5
2ABCC7EEA83F7E6289462D2DE17573CB7B101659568B97778A5E7679E490B527
017BD9B0781CBF664C77ABDF05F708E85E813C8B0FFBEE292A46B8C59DB1E8B9
CC1702DE5E999F5BB8E51EC44610144ADD176D108261BEC3D2F834949865D0F4
3A027351BF066D8E3331E48345189AC4D22648613D37F8311821E41D89> |
1668 <001C60D8A8C9B850A9C8B7665F6204D51B4579A210C8493C875E670835
496854B5CAC4A8BD7F882C3E2BD67B2E5721DC2D33F3BCB3F76808A3AC12DFA8
E7EC75EE448FC27165F7> |
1827 <001C60D8A8C9B66C0E6DD67DAD30FE5ADDE8E77400E963927E1FBBB528
D031D2D16818D37D07E7F9BD5A1361EEB6C0C455005133AEEAE6CF39FFB7C14C
78807C3E36B55B57C346AF00362FDD79EEBF310E0C44CAB9807711C9F5F3734A
ADB374F2C65A487AF5FA31A2A723C2741B0246F28968731B816D9245611919D0
AA5CB7C8B3885450479331ECCD4492CCD662584A914DB092CA48AF0AA5EBB389
8A3BC861> |
2911 <001C60D8A8C9B7931D8801B03F7A8EDB958393ECB70FEF0C2E36364428
B0D7F3DC258C1EE10E6B4998EE02D22782297AADD54EF6D822936C6CD491D6FB
85F1849174D86F711ABE8102A0A03861761C6B4294E2137633B8D6DB0CB78712
7C32E71BC24B274E155BFD9FA836254C7DA4103F82E8A060909E41F5101D9485
CDA32CA6DC68F654AD53FA3A4C7D64201C4DD49C78A3DA04BCBA517FF26CDBA3
438C6413F2E1A112278A2ED313554807406DF77085315E061F21A8FE543EC135
CC267981456B46C00B84B374C6FEB817CECBDFE527E4EF826ABFBC19C4DB94C9
9B929C45840C4165B9F025C1136B19D77A0F46AFC64EC5ABB43BCC4E76CB68C9
E295AD1087F5254B679CC429856A4C9B6ECB3912CF0930632E7366F83A3C6F8F
29E3C0F3ADE97B31F78F6BA8ED59043D40366F46DBA27B014C> |
!
end
end end
%ADOEndSubsetFont
PYNFHY+CambriaMath [12 0 0 -12 0 0 ]msf
140.788 11.1399 mo
(\007L)sh
PYNFHY+CambriaMath [8.76 0 0 -8.76 0 0 ]msf
147.148 13.5397 mo
(\0134)sh
PYNFHY+CambriaMath [12 0 0 -12 0 0 ]msf
155.549 11.1399 mo
(\006\204)sh
161.549 11.1399 mo
(\007#)sh
PYNFHY+CambriaMath [8.76 0 0 -8.76 0 0 ]msf
169.109 13.5397 mo
(\013_\013j\013j)
[4.80052 2.75941 0 ]xsh
1.56 lw
99.4846 24.587 mo
99.4846 58.311 li
@
102.485 57.3109 mo
99.485 63.3109 li
96.485 57.3109 li
cp
ef
115.325 24.587 mo
115.325 58.311 li
@
118.325 57.3109 mo
115.325 63.3109 li
112.325 57.3109 li
cp
ef
131.165 24.587 mo
131.165 58.311 li
@
134.165 57.3109 mo
131.165 63.3109 li
128.165 57.3109 li
cp
ef
147.005 24.587 mo
147.005 58.311 li
@
150.005 57.3109 mo
147.005 63.3109 li
144.005 57.3109 li
cp
ef
162.725 24.587 mo
162.725 58.311 li
@
165.725 57.3109 mo
162.725 63.3109 li
159.725 57.3109 li
cp
ef
178.565 24.587 mo
178.565 58.311 li
@
181.565 57.3109 mo
178.565 63.3109 li
175.565 57.3109 li
cp
ef
194.405 24.587 mo
194.405 58.311 li
@
197.405 57.3109 mo
194.405 63.3109 li
191.405 57.3109 li
cp
ef
210.245 24.587 mo
210.245 58.311 li
@
213.245 57.3109 mo
210.245 63.3109 li
207.245 57.3109 li
cp
ef
226.085 24.587 mo
226.085 58.311 li
@
229.085 57.3109 mo
226.085 63.3109 li
223.085 57.3109 li
cp
ef
.72 lw
90.1846 24.527 mo
234.307 24.527 li
@
%ADOBeginSubsetFont: GFNBAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PYNFHZ+CambriaMath gcheck setglobal} if
4 4068 4666 <000100b4fe3c032c05a5000d0011b500070b0a0304002f332f33012fcd31
3001101217072400111000251706020161e1e718fedbfec8013901241bea
e101fafea2fe3a4d4d4d01fd016a016901ff4d4d4dfe4100>PYNFHZ+CambriaMath AddT42Char 
4 4152 4667 <00010026fe3c029e05a5000d0011b507000b0a0304002f332f33012fcd31
30011002273704001110000527361201f1e0eb1b01240139fec8fedb18e7
e101fa015201bf4d4d4dfe01fe97fe96fe034d4d4d01c600>PYNFHZ+CambriaMath AddT42Char 
4 3822 3397 <00010095ffc7056504cc000b0014b608060abe030100b803e8003fcd33fd
32c6313001112311213521113311211503448efddf02218e02210207fdc0
0240850240fdc085>PYNFHZ+CambriaMath AddT42Char 
PYNFHZ+CambriaMath /CharStrings get begin
/parenleft 4666 def
/parenright 4667 def
/plus 3397 def
end
PYNFHZ+CambriaMath /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PYNFHZ+CambriaMath*1 
[40{/.notdef}rp /parenleft /parenright /.notdef /plus 4{/.notdef}rp /zero 207{/.notdef}rp]
PYNFHZ+CambriaMath nf
PYNFHZ+CambriaMath*1 [12 0 0 -12 0 0 ]msf
115.789 156.476 mo
(\()sh
%ADOBeginSubsetFont: QJJAAA+CambriaMath-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/QJJAAA+CambriaMath 1 GetGlyphDirectory
2912 <001C60D8A8C9B7D2D03104B6E39CF2312365014ADF1C2718145F96DD3D
10FF2D1DF83E8D90B318AEB7D4C44B7196F9B84581BEE3B440FD3DAEB92162D7
61F7D3F4B44FBD7BF08A38A9B3CA0A8FCEF80237CEC9490DF58D6E0E19F459EC
4989EC200F17820F927E015DAE68E7A51EB4F8F312605280C1E02ABED8AC9A9F
B0F9BB19EC577CA34B629A3EBA66DB10D3CD3DF0BA10B542E527154EF353A2AC
07C3881789451395053BC3E6EB97DFC2725AE925AA25BFEC95399FDA1758BBAB
8E4392F62686208773AF4011B605733D21BAF65D97BD462127421752043A78CC
44EA4D10D11B88EDE10AC2EB59FE2A4AE9BDC96D6C0186E6AA529286DB3528A7
D717B33D9AA115FCF49B0D2BE53BF881> |
!
end
end end
%ADOEndSubsetFont
PYNFHY+CambriaMath [12 0 0 -12 0 0 ]msf
120.828 156.476 mo
(\007L)sh
PYNFHY+CambriaMath [8.76 0 0 -8.76 0 0 ]msf
127.189 158.876 mo
(\0134)sh
PYNFHZ+CambriaMath*1 [12 0 0 -12 0 0 ]msf
135.469 156.476 mo
(+)sh
PYNFHY+CambriaMath [12 0 0 -12 0 0 ]msf
147.109 156.476 mo
(\007L)sh
PYNFHY+CambriaMath [8.76 0 0 -8.76 0 0 ]msf
153.469 158.876 mo
(\013`\013_\013a\013i)
[5.39975 4.80051 4.43962 0 ]xsh
PYNFHZ+CambriaMath*1 [12 0 0 -12 0 0 ]msf
173.749 156.476 mo
(\))sh
PYNFHY+CambriaMath [12 0 0 -12 0 0 ]msf
181.309 156.476 mo
(\006\204)sh
187.428 156.476 mo
(\007#)sh
PYNFHY+CambriaMath [8.76 0 0 -8.76 0 0 ]msf
194.988 158.876 mo
(\013`\013_\013a\013i)
[5.39975 4.80051 4.43961 0 ]xsh
1.56 lw
99.1246 140.632 mo
99.1246 80.5871 li
@
102.125 81.5869 mo
99.125 75.5869 li
96.125 81.5869 li
cp
ef
111.605 140.632 mo
111.605 80.5871 li
@
114.605 81.5869 mo
111.605 75.5869 li
108.605 81.5869 li
cp
ef
159.965 140.632 mo
159.965 80.5871 li
@
162.965 81.5869 mo
159.965 75.5869 li
156.965 81.5869 li
cp
ef
170.525 140.632 mo
170.525 80.5871 li
@
173.525 81.5869 mo
170.525 75.5869 li
167.525 81.5869 li
cp
ef
221.045 140.632 mo
221.045 80.5871 li
@
224.045 81.5869 mo
221.045 75.5869 li
218.045 81.5869 li
cp
ef
232.085 140.632 mo
232.085 80.5871 li
@
235.085 81.5869 mo
232.085 75.5869 li
229.085 81.5869 li
cp
ef
.72 lw
89.8246 140.567 mo
244.476 140.567 li
@
PYNFHY+CambriaMath [11.04 0 0 -11.04 0 0 ]msf
360.231 33.6164 mo
(\0070)sh
PYNFHY+CambriaMath [8.04 0 0 -8.04 0 0 ]msf
367.311 35.8964 mo
(\013a\013f\013s\013a\013i)
[4.08035 5.03949 5.04031 4.07953 0 ]xsh
1.56 lw
316.565 75.8466 mo
316.565 45.6666 li
@
313.564 46.667 mo
316.564 40.667 li
319.564 46.667 li
cp
ef
377.045 75.8466 mo
377.045 45.6666 li
@
380.045 46.667 mo
377.045 40.667 li
374.045 46.667 li
cp
ef
437.4 75.7353 mo
437.199 46.2673 li
@
434.205 47.2873 mo
437.164 41.2673 li
440.205 47.2463 li
cp
ef
.75021 .679683 .670222 .90164 cmyk
PYNFHY+CambriaMath [12 0 0 -12 0 0 ]msf
352.667 137.27 mo
(\007\()sh
PYNFHY+CambriaMath [8.76 0 0 -8.76 0 0 ]msf
358.667 139.67 mo
(\013c\013j\013c\013a)
[4.80051 2.76022 4.91962 0 ]xsh
250.805 69.7071 mo
250.805 105.786 li
.911711 .616754 .18909 .0310369 cmyk
@
253.805 104.787 mo
250.805 110.787 li
247.805 104.787 li
cp
ef
279.845 69.7071 mo
279.845 105.786 li
@
282.845 104.787 mo
279.845 110.787 li
276.845 104.787 li
cp
ef
308.765 69.7071 mo
308.765 105.786 li
@
311.765 104.787 mo
308.765 110.787 li
305.765 104.787 li
cp
ef
337.685 69.7071 mo
337.685 105.786 li
@
340.685 104.787 mo
337.685 110.787 li
334.685 104.787 li
cp
ef
366.725 69.7071 mo
366.725 105.786 li
@
369.725 104.787 mo
366.725 110.787 li
363.725 104.787 li
cp
ef
395.645 69.7071 mo
395.645 105.786 li
@
398.645 104.787 mo
395.645 110.787 li
392.645 104.787 li
cp
ef
424.685 69.7071 mo
424.685 105.786 li
@
427.685 104.787 mo
424.685 110.787 li
421.685 104.787 li
cp
ef
453.605 69.7071 mo
453.605 105.786 li
@
456.605 104.787 mo
453.605 110.787 li
450.605 104.787 li
cp
ef
482.525 69.7071 mo
482.525 105.786 li
@
485.525 104.787 mo
482.525 110.787 li
479.525 104.787 li
cp
ef
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: QJJAAA+CambriaMath-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/QJJAAA+CambriaMath 4 GetGlyphDirectory
1833 <001C60D8A8C9B66B395F52CBD8404B9D0E07C1BB7932164E11392B7EAD
8E81D2A17F5F5BCD357BB096BA66E214DF7058CE8CD87F2E570A4CF15CD54A12
3326DB6673D885BFE34F0FF19C51EB78CCFCCC4AE557D8E7E579FB7F75448E0F
3FFDB40ABD80C18503AD5B2D61F912D5541AA7923902C7F42C58C552F6880D24
4CCF6135256F1D6DE43E8C4A99C428272F9E4E2A4E9216B91839572DF2F2CAB5
79F4801F0522BFA572FED771BF28EF59DC32FD43B54241DE4642EB8661B15B69
EF548F4F291E66CC1C19B9386FB0FAD78109653969FD885098A848C2C26F48AF
362766E39DB58685B82B205656F1ED9A30BE7DF23A2AEC48691D3267CDB5> |
2933 <001C60D8A8C9B69BE485232BC7CD0371AAFE0E6B6225906A091EEE2BD6
B1E61D6CAE875D6A0148D7C4B6AE2402316B67E1EBB6507293AD543E599F5B58
42AC09E168A1144E1C8B006769A1650CCA999E6F30A3FFABD474D4E7D980C611
BE4BDED660DA114DEF99E6E20741448DABF7FF03B198B315A97C0F3C7AFD0056
D15C59069428E67E6FBAA553F20DFE3DA1561CA5FD0939B7B78878219F88D872
A86AC2AB0C94C39565321DFB61F0841F48F4DB716DE278> |
2916 <001C60D8A8C9B80898F37F465B76B1549AC2FA5B141983065ED46EFC0A
A2394024BEC1DEDBF8CC0855C0194BF26DD929F6A4B873CB87DE5C9C702D6195
DF72049290BB34664D064915B2B085010586BD93E0A3C978B9FE2D644034CEC3
9089248259E4CDDFC1562E328C3DC7E1B518AD3F5B501FEC32DDA25AB7FCFA7D
B506F4817CD6293C27BCDA803C4FF34C0BCEF643BFA3E392A6128C0566AFE85B
5882574F38DD9BB15A376623F436956EAF4F83B78C5027139152B68A2F11C135
33D180774A03CF873F6D1EAE50824CFCBDF4AC9AACE8704AD06945095E57015D
710901EE2195> |
2928 <001C60D8A8C9B7438399B1B48E0445D38785D20A5EB1D722E749D18A7F
9A3DBA05DDF48A7AC207CA9061055F92CFA011E76AE583A119864D3947B9D78A
04DF10B391573D22AB130AA68DF8126F3BABF029E19690E24C84AAD81DABDDCF
7399D3F9270FC7F55CD5AD508E663892BD4387DB8224D9B04618FB61A8712570
B06C91715B95CDDBFCDE0AC0FF63CD77F93564DA78F1A01DA3D59DE253E73DD5
75055789DE962880A32C35560BBB58978D61725DB80A8497654BEEC084BF02C5
90D90DF733E8CA09470A1D97CEDA8D8F2BD8B0EC102389DF283F8378574EE7BE
533376414E9EA4594D29> |
!
end
end end
%ADOEndSubsetFont
PYNFHY+CambriaMath [12 0 0 -12 0 0 ]msf
268.082 164.384 mo
(\007\))sh
PYNFHY+CambriaMath [8.76 0 0 -8.76 0 0 ]msf
275.281 166.784 mo
(\013u\013_\013d\013c\013p)
[7.55981 4.80051 3.11951 4.92056 0 ]xsh
3 lw
286.325 69.7071 mo
286.325 148.92 li
0 .476295 .878691 0 cmyk
@
290.825 147.42 mo
286.325 156.42 li
281.825 147.42 li
cp
ef
152.076 178.739 mo
153.787 179.19 155.101 180.164 156.018 181.661 cv
156.935 183.158 157.393 184.965 157.393 187.08 cv
157.393 189.201 156.936 191.007 156.022 192.498 cv
155.108 193.989 153.793 194.961 152.076 195.412 cv
151.865 194.735 li
153.219 194.284 154.225 193.393 154.884 192.063 cv
155.543 190.733 155.873 189.043 155.873 186.992 cv
155.873 185.011 155.545 183.366 154.889 182.057 cv
154.232 180.747 153.216 179.867 151.839 179.416 cv
cp
71.6439 178.739 mo
71.8809 179.416 li
70.5099 179.867 69.4949 180.747 68.8359 182.057 cv
68.1769 183.366 67.8469 185.011 67.8469 186.992 cv
67.8469 189.043 68.1769 190.733 68.8359 192.063 cv
69.4949 193.393 70.5019 194.284 71.8549 194.735 cv
71.6439 195.412 li
69.9269 194.961 68.6119 193.989 67.6979 192.498 cv
66.7839 191.007 66.3269 189.201 66.3269 187.08 cv
66.3269 184.965 66.7849 183.158 67.7019 181.661 cv
68.6189 180.164 69.9329 179.19 71.6439 178.739 cv
.75021 .679683 .670222 .90164 cmyk
ef
PYNFHY+CambriaMath [18 0 0 -18 0 0 ]msf
72.1846 192.16 mo
(\007L)sh
PYNFHY+CambriaMath [13.2 0 0 -13.2 0 0 ]msf
81.6646 195.88 mo
(\0134)sh
%ADOBeginSubsetFont: GFNBAA+CambriaMath AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PYNFHZ+CambriaMath gcheck setglobal} if
4 3978 3404 <000300950137058f035b000300070008002d401007be900501cf05df05ef
0503b0050105b803f6b30802be00ba03f6000803eb003ff6ed10f65d5d71
ed31301335211501352115139504d0fb3004d02a02d68585fe6185850112
>PYNFHZ+CambriaMath AddT42Char 
PYNFHZ+CambriaMath /CharStrings get begin
/equal 3404 def
end
PYNFHZ+CambriaMath /Encoding get
dup 61 /equal put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PYNFHZ+CambriaMath*1 
[40{/.notdef}rp /parenleft /parenright /.notdef /plus 4{/.notdef}rp /zero 12{/.notdef}rp 
/equal 194{/.notdef}rp]
PYNFHZ+CambriaMath nf
PYNFHZ+CambriaMath*1 [18 0 0 -18 0 0 ]msf
94.0246 192.16 mo
(+)sh
PYNFHY+CambriaMath [18 0 0 -18 0 0 ]msf
111.539 192.16 mo
(\007L)sh
PYNFHY+CambriaMath [13.2 0 0 -13.2 0 0 ]msf
121.025 195.88 mo
(\013`\013_\013a\013i)
[8.16036 7.19397 6.5988 0 ]xsh
PYNFHY+CambriaMath [18 0 0 -18 0 0 ]msf
162.905 192.16 mo
(\006\204)sh
172.031 192.16 mo
(\007#)sh
PYNFHY+CambriaMath [13.2 0 0 -13.2 0 0 ]msf
183.425 195.88 mo
(\013`\013_\013a\013i)
[8.16035 7.31946 6.60001 0 ]xsh
PYNFHZ+CambriaMath*1 [18 0 0 -18 0 0 ]msf
217.865 192.16 mo
(+)sh
PYNFHY+CambriaMath [18 0 0 -18 0 0 ]msf
235.379 192.16 mo
(\0070)sh
PYNFHY+CambriaMath [13.2 0 0 -13.2 0 0 ]msf
247.145 195.88 mo
(\013a\013f\013s\013a\013i)
[6.60001 8.16016 8.16019 6.59998 0 ]xsh
PYNFHZ+CambriaMath*1 [18 0 0 -18 0 0 ]msf
289.985 192.16 mo
(=)sh
PYNFHY+CambriaMath [18 0 0 -18 0 0 ]msf
308.471 192.16 mo
(\007L)sh
PYNFHY+CambriaMath [13.2 0 0 -13.2 0 0 ]msf
317.945 195.88 mo
(\0134)sh
PYNFHY+CambriaMath [18 0 0 -18 0 0 ]msf
330.305 192.16 mo
(\006\204)sh
339.431 192.16 mo
(\007#)sh
PYNFHY+CambriaMath [13.2 0 0 -13.2 0 0 ]msf
350.825 195.88 mo
(\013_\013j\013j)
[7.31946 4.19772 0 ]xsh
PYNFHZ+CambriaMath*1 [18 0 0 -18 0 0 ]msf
371.105 192.16 mo
(+)sh
PYNFHY+CambriaMath [18 0 0 -18 0 0 ]msf
388.619 192.16 mo
(\007\))sh
PYNFHY+CambriaMath [13.2 0 0 -13.2 0 0 ]msf
399.425 195.88 mo
(\013u\013_\013d\013c\013p)
[11.5196 7.19397 4.6795 7.19397 0 ]xsh
PYNFHZ+CambriaMath*1 [18 0 0 -18 0 0 ]msf
440.945 192.16 mo
(+)sh
PYNFHY+CambriaMath [18 0 0 -18 0 0 ]msf
458.459 192.16 mo
(\007\()sh
PYNFHY+CambriaMath [13.2 0 0 -13.2 0 0 ]msf
467.585 195.88 mo
(\013c\013j\013c\013a)
[7.19397 4.19891 7.19397 0 ]xsh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/PYNFIB+Calibri*1 uf
/PYNFIB+Calibri uf
/UGXAAA+Calibri uf
/PYNFIA+CaeciliaLTStd-Roman*1 uf
/PYNFIA+CaeciliaLTStd-Roman uf
/HJCBAA+CaeciliaLTStd-Roman uf
/PYNFHZ+CambriaMath*1 uf
/PYNFHZ+CambriaMath uf
/GFNBAA+CambriaMath uf
/PYNFHY+CambriaMath-Identity-H uf
/PYNFHY+CambriaMath /CIDFont ur
/PYNFHX+MicrosoftYaHei-GBK-EUC-H-Identity-H uf
/PYNFHX+MicrosoftYaHei-GBK-EUC-H /CIDFont ur
/PYNFHW+MyriadPro-Cond*1 uf
/PYNFHW+MyriadPro-Cond uf
/PBAAAA+MyriadPro-Cond uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
