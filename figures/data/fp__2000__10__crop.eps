%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: ADPF5EF.tmp.pdf
%%Creator: Adobe Acrobat 11.0.7
%%For: Yin
%%CreationDate: 2014/06/14, 23:22:04
%%BoundingBox: 0 0 339 226
%%HiResBoundingBox: 0 0 339 226
%%CropBox: 0 0 339 226
%%LanguageLevel: 3
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1149 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreatorTool="MATLAB, The MathWorks, Inc. Version 8.2.0.701 (R2013b). Operating System: Microsoft Windows 8."
   xmp:ModifyDate="2014-06-14T23:21:42+08:00"
   xmp:CreateDate="2014-06-14T23:21:42+08:00"
   dc:format="application/pdf"
   pdf:Producer="Acrobat Distiller 11.0 (Windows)"
   xmpMM:DocumentID="uuid:c525c8cc-b753-4024-b10c-b182826c5452"
   xmpMM:InstanceID="uuid:5dc5d8e8-032a-4277-b5b6-b8768b9af403">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">D:\my\mech\e-chuck (local)\_thesis\figures\data\fp__2000__10__crop.eps</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Yin</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -226 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 226 li
339 226 li
339 0 li
cp
clp
.059998 225.083 mo
353.4 225.083 li
353.4 .0399933 li
.059998 .0399933 li
cp
false sop
1 /0 /CSD get_res sepcs
0 sep
f
41.633 198.667 mo
332.466 198.667 li
332.466 17.167 li
41.633 17.167 li
cp
f
.5 lw
0 lc
1 lj
10 ml
[] 0 dsh
false sadj
41.633 198.667 mo
41.633 17.167 li
332.466 17.167 li
332.466 198.667 li
41.633 198.667 li
@
41.633 17.167 mo
332.466 17.167 li
1 /0 /CSD get_res sepcs
1 sep
@
41.633 198.667 mo
332.466 198.667 li
332.466 17.167 li
@
41.633 198.667 mo
41.633 17.167 li
@
41.633 198.667 mo
332.466 198.667 li
@
41.633 198.667 mo
41.633 17.167 li
@
48.8 198.667 mo
48.8 195.75 li
@
48.8 17.167 mo
48.8 20 li
@
%ADOBeginSubsetFont: TRVCAA+ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2.043 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /TRVCAA+ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3210325d83000000cc000000606376
7420aa86dc6e0000012c0000065a6670676dc9bcda0500000788000007c1
676c7966dde7f0e300009bac00003f7668656164e1d9c23d00000f4c0000
003668686561129117b500000f8400000024686d7478c7e38a2800000fa8
00003e506c6f636103ce282e00004df800003e546d6178701502099e0000
8c4c000000206e616d65f6a3fa1300008c6c00000356707265708d21ed41
00008fc400000be767646972000000000000000000000000000303880190
00050008059a05330000011b059a0533000003d1006602120805020b0604
020202020204e0002affc00078430000000900000000544d432000400020
fffc05d3fe510133073e01b2400001ffffff0000042605bb000000200014
05ba001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69
ffe805ba0019fe69ffe802ea000000b8000000b80000000000a800ad0169
00ad00bf00c201f0001800af00b900b400c800170044009c007c00940087
0006005a00c80089005200520005004400940119ffb4002f00a1000300a1
00cd00170057007e00ba00160118ffe9007f008503d300870085000d0022
00410050006f008d014cff75005c00df04830037004c006e00700180ff58
ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc
002d005c0095009900df019209b500400057008000b9039d0072009a035d
0401ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e7
0118017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba01350147
0221055cff4dffcd0016002d00780080009900b200b600b600b800bd00da
010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540
057affd4001400310055005700a700b400e601f7027e027e027f03c60446
ff42000e0085009100bf00c200c500e1011a012f014f01560229026f029e
03720008002c00310031006400690089009800c700de012b01b6020c02cf
03a304ab04fb061dfee0ff0e00060026009b009d00c1010d011801200173
018201d601e30243025f029b02e2039404a904d20761001c005e006d008d
00ab00f7011201380151015b0168017c01870191019901cd01d001e80241
0254026b02ef0368037103bd044204420453047304830586058b06e8fe58
fec4fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d9
00d900df00e20105010b010e010e012001210155017b017b017e018d01a2
01a801a901b401d001d001e201e901f201f501fb020002000206021b0221
022202220223027202770294029c02cf02cf02d002ec02f903170322032b
0335033c0359036f037103870390039003b503e1041a04cf04ff05320532
0596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88
fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078
009600a500af00d3010c0118011a012a013e014c0151015f016a01710178
01820184019a01a501a801a901ae01bc01cd01d701ef0200020d021c0221
0222022e02350242024f024f025e026502710290029202b402d602fa0307
030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c
05cb05e5060a066d068606b806f10736073e07500751075d078f07b607d4
086000b600c300b500b700000000000000000000000001e00381034503b5
008e0233041902ce02ce002d005f0064034d023f000002a80188027d01b4
02240578063b023b014e00f00426029402c6029f02f6023b034d014b0153
006a0231000000000000061404aa0000003c04c300ed04bc026502ce03b5
0078060c017e02ef060c00b201000239000001c50330042b03cb00da03df
010704a100db040a011701ed02a70350010b01bd043e05580021039c00ae
0371017d00b5024500000afb088c012b014e01aa00870054013201f803ff
0003024e00b4003703e30083006b02d800ed00770088009701640467008e
0033017c00e700a6029e0329056e062a061501c90269048a021301b40002
04a9000002390124010305140084015d039a06ef02d9007500cf040a00de
03ac04bc02cf02ae034d04f005520168006d007d00860071ff8100790558
04d2016700030156002504e00094007c033204210094007f0072005c002f
00b6001800ba00b80041034d00720018001f004c016a01550099009a009a
009800b200040078006900140057006e00ce00b4065402b80067050e0165
00e7000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b8
00a800e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d
028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd50015002800220099
0062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df
0051ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d2
00b6007b00650252ff740365fe690094008f005c00400086007500890089
0471048304f900004046585756555441403f3e3d3c3b3a39383735343332
31302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a191817161514
131211100f0e0d0c0b0a090807060504030201002c4523466020b02660b0
04262348482d2c452346236120b02661b004262348482d2c45234660b020
6120b04660b004262348482d2c4523462361b0206020b02661b02061b004
262348482d2c45234660b0406120b06660b004262348482d2c4523462361
b0406020b02661b04061b004262348482d2c0110203c003c2d2c20452320
b0cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920
b09051582320b00d44235921212d2c20204518684420b001602045b04676
688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0
172370b101173e01b0172370b10217453ab10200080d2d2c45b01a234445
b01923442d2c2045b00325456164b050515845441b2121592d2cb0014363
2362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d
2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b003
61592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb0
1243588745b0112bb0172344b0177ae41b038a45186920b01723448a8a87
20b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2cb0
022546608a46b040618c482d2c4b53205c58b002855958b00185592d2c20
b0032545b019234445b01a23444565234520b00325606a20b00923422368
8a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b0
3f1b235961441cb114008a5279b31940201945208a54582321b03f1b2359
61442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d
2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d
2c4b525845441b2121592d2c0120b003252349b04060b0206320b0005258
23b002253823b002256538008a63381b212121212159012d2c4bb0645158
4569b00943608a103a1b212121592d2c01b005251023208af500b0016023
edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500ed
ec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2cb02b2b
b02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802232370
1020b802234520b0005058b00161593a2f182d2c21210c6423648bb84000
622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c21
b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423648b
b84000626023212d2cb4000100000015b00826b00826b00826b008260f10
161345683ab001162d2cb4000100000015b00826b00826b00826b008260f
1016134568653ab001162d2c4b53234b515a5820458a60441b2121592d2c
4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b54
58381b2121592d2cb0134358031b02592d2cb0134358021b03592d2c4b54
b012435c5a58381b2121592d2cb012435c580cb00425b00425060c642364
6164b807085158b00425b00425012046b01060482046b0106048590a2121
1b2121592d2cb012435c580cb00425b00425060c6423646164b807085158
b00425b00425012046b8fff060482046b8fff06048590a21211b2121592d
2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121
592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426
024b545a8a8a0ab012435c5a58381b2121592d2c4b5258b00425b0042549
b00425b00425496120b0005458212043b0005558b00325b00325b8ffc038
b8ffc038591bb04054582043b0005458b00225b8ffc038591b2043b00054
58b00325b00325b8ffc038b8ffc0381bb00325b8ffc03859595959212121
212d2c462346608a8a462320468a608a61b8ff8062232010238ab902c202
c28a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2c
b1020042b123018851b1400188535a58b910000020885458b20201024360
4259b12401885158b920000040885458b2020202436042b12401885458b2
022002436042004b014b5258b2020802436042591bb940000080885458b2
02040243604259b94000008063b80100885458b202080243604259b94000
010063b80200885458b202100243604259b12601885158b94000020063b8
0400885458b202400243604259b94000040063b80800885458b202800243
604259b12801885158b94000080063b81000885458ba0002010000024360
42595959595959592d2cb0024354584b53234b515a58381b2121591b2121
2121592d2cb0572b580c028a4b53b004264b515a580a381b0a2121591b21
212121592d2c20b0024354b00123b05f237821b1000243b056237921b002
4323b020205c58212121b100471c598a8a208a208a23b81000635658b810
00635658212121b1012c1c591b2159b08062205c58212121b1001b1c5923
b08062205c58212121b1000c1c598ab00161b8ffb31c23212d2c20b00243
54b00123b07b237821b1000243b072237921b10002438ab020205c582121
21b0631c598a8a208a208a23b81000635658b81000635658b00426b0015b
b00426b00426b004261b21212121b13600231c591b2159b0042623b08062
205c588a5c8a5a23212321b01d1c598ab08062205c5821212321b00e1c59
b00426b00161b8ff981c23212d000000000100000006cf5c589da7795f0f
3cf5081b080000000000a2e3272a00000000ccb58100faaffd67105e0851
00000009000100010000000000010000073efe4e00431000faaff9d2105e
000100000000000000000000000000000f94060001000000000002390000
02390000023900b002d7005e0473001504730049071d0077055600580187
005a02aa007c02aa007c031d004004ac0072023900aa02aa0041023900ba
0239000004730055047300df0473003c047300560473001a047300550473
004d047300610473005304730055023900b9023900aa04ac007004ac0072
04ac00700473005a081f006f0556fffd0556009605c7006605c7009e0556
00a204e300a80639006d05c700a4023900bf040000370556009604730096
06aa009805c7009c063900630556009e0639005805c700a10556005c04e3
003005c700a105560009078d0019055600090556000604e300290239008b
023900000239002703c100360473ffe102aa00590473004a047300860400
0050047300460473004b02390013047300420473008701c7008801c7ffa2
0400008801c7008306aa00870473008704730044047300870473004802aa
00850400003f02390024047300830400001a05c700060400000f04000021
0400002802ac0039021400bc02ac002f04ac00570556fffd0556fffd05c7
0068055600a205c7009c0639006305c700a10473004a0473004a0473004a
0473004a0473004a0473004a040000500473004b0473004b0473004b0473
004b023900bd023900230239ffe502390009047300870473004404730044
047300440473004404730044047300830473008304730083047300830473
0049033300800473006b0473001b0473005102cd006d044c000104e30099
05e5000305e50003080000e102aa00de02aa003d0464004e080000010639
005305b4009a0464004e0464004d0464004d0473fffd049c00a003f40038
05b4007a069600a1046400000231000002f6002f02ec002d0625007f071d
004404e3008104e3009e02aa00e804ac0072046400540473002e04640033
04e5001a047300860473008c080000ef0556fffd0556fffd063900630800
0081078d00520473fffc0800000002aa005302aa004701c7008001c7006c
0464004e03f4002f04000021055600060156fe390473ffe402aa005c02aa
005c040000170400001704730049023900b901c7006c02aa004708000025
0556fffd055600a20556fffd055600a2055600a20239008d0239ffe00239
00040239001506390063063900630639006305c700a105c700a105c700a1
023900c602aa001902aa000602aa001d02aa002e02aa00e502aa00a202aa
006b02aa003a02aa004b02aa00280473000001c700030556005c0400003f
04e3002904000028021400bc05c7fffd0473004905560006040000210556
009e0473008704ac007204ac00a102aa006b02aa001902aa002106ac006b
06ac006b06ac0021047300000639006d04730042023900b10556005c0400
003f05c700660400005005c700660400005004730046046bffe102aa00ee
0556fffd0473004a0556fffd0473004a05c7009e04eb004705c7fffd0556
00a20473004b055600a20473004b0473009601c700420473009602550088
0473009602ac008305c7009c0473008705c7009c04730087063900630473
004405c700a102aa008505c700a102aa003c0556005c0400003f04e30030
0239002404e300300300002305c700a10473008305c700a10473008304e3
00290400002804e3002904000028046800a4063900600662005504a00048
047400480391006204f000440329002e05300048046bffe1040000b002eb
005208c000330800004f040000990800004f040000990800004f04000098
0400009807d5016a05c0009e04ab007204d5009d04ac007104d5022204d5
010505abffe9050001c905ab027e05abffe905ab027e05abffe905ab027e
05abffe905abffe905abffe905abffe905abffe905ab01c005ab027e05ab
01c005ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c0
05abffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
02d605ab006605abffea05d5ffff04d500920800000007eb013007eb0120
07eb013007eb012004d500b204d5008004d5002a082b0198086b01b80755
0010060000f40600006f0440003a0540003704c0003f0415004004000025
0600005505e100bf038d008904d5ffd90180008002d50086071500610296
000f04d5009202d6008302d6008304d500b202d600700556fffd0473004a
05c700660400005005c7006604000050055600a20473004b055600a20473
004b055600a20473004b0639006d047300420639006d047300420639006d
0473004205c700a40473008705c7001f047300060239ffce0239ffce0239
ffe40239ffe40239fff60239fff50239004b01c700190400003701c7ffa2
0556009604000088040000860473009601c7fffa05c7009c0473008705c9
00a50473008b0639006304730044063900630473004405c700a102aa006b
0556005c0400003f04e300300239000c05c700a10473008305c700a10473
008305c700a10473008305c700a104730083078d001905c7000605560006
0400002101c700890556fffd0473004a08000001071d00440639005304e3
0081023900b9078d001905c70006078d001905c70006078d001905c70006
055600060400002101c7008a02aaffe10473001b04cd005a06ac006b06ac
002206ac002206ac004a02aa00e202aa006b02aa00de02aaffea0557ffff
0646ffa706b4ffa80312ffa80632ffa706d8ffa70605ffa701c7ff780556
fffd055600960558fffe055600a204e3002905c700a4023900bf05560096
0558000b06aa009805c7009c0533006d0639006305c700a40556009e04f2
009404e30030055600060556000906af007f05fb00610239000405560006
04a00048039100620473008b01c7006b04600088049a008c040000190387
00480473008b0473005c01c700890400008604000018049c00a00400001a
0395005c04730044048d008303db0056046000880433001105b4007a063f
005701c7ffc9046000880473004804600088063f0057055700a206eb0032
045500a105c000640556005c023900bf02390004040000370875000d0815
00a406d5003104a900a10515000a05c000a00556fffd054000a705560096
045500a1056b0000055600a20763000704d5004e05c000a105c000a104a9
00a10540001206aa009805c700a40639006305c000a00556009e05c70066
04e300300515000a061500520556000905eb009f05550057075500a10780
00a106550000071500a8054000a505c00055081500a405c7001a0473004a
0495005b0440008802eb008804ab00000473004b055afffb03ab00320478
0087047800870380008604ab00180580008c046b00880473004404550088
047300870400005003aa0026040000210695004b0400000f0495008a042b
0045066b008d0695008d0500002805c0008b042b00840415003006000089
0455001f0473004b0473000002eb00890415004b0400003f01c700880239
000901c7ffa20740001306800083047300000380008604000021046b0088
03e900a1034a008808000041089500a00585002d000001010000001e0000
003100000031000001010000007e0000007e0000008c0000008c00000101
0000001000000101000001210310007d0000008c023300d20000030b0000
ff04023900b90481006904560032033100190411002d04d1009601f9009b
030f005f04ca009b04b8008c01f9009b0413002803b0005003b4003c04ca
009b04cf005001f9009b02d2003c0498005a043c00190488006e045f0073
03b1001903d4000a0466009604130028058e00640524002803f2009b03f2
009b03f2009b01e3005a0356005a0686009b01f9ffac0413002804130028
03b4ff5703b4ff570448002d058e0064058e0064058e0064058e00640481
0069048100690481006904560032033100190411002d04d10096024b0000
034a000004b8008c024b00000413002803b0005003b4003c04cf005002d2
003c0498005a0488006e045f007303d4000a0466009604130028058e0064
0524002801f9009b0456003203b00050045f0073049b003c0000ffdc0000
ff250000ffdc0000fe51028d00ab028d00a002da0043034d007901a8ffba
000000460000004600000046000000460000004800000046000000460000
00460435017c0435012e043500b7043500810435012c043500be043500af
043500810435009a043500db04350085028d00c1043500b3060001000600
010002420036060001000435009e04350098043500cb0600010006000100
060001000600010006000100000000460600010006000100060001000600
010006000100060001000600010006000100051bffba0600010006000100
0600010005b5003a05b5003a01f4ffba01f4ffba06000100060001000600
0100060001000481003604350036043dffba043dffba03e9004a03e9004a
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba051b003204b500240300fff706000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010000000030000000460000004600000040
0000004606000100060001000000ffdc0000fe510000ff160000ff160000
ff160000ff160000ff160000ff160000ff160000ff160000ff160000ffdc
0000ff160000ffdc0000ff200000ffdc0473004a08000000060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010006000100028d007f028d005d0600010004ee
0015034d007901a8001301d6ffd701a8005601d600100375003203750032
01a8002d01d60013051b003204b5002401f4ffba01f4ffba01a8009301d6
001305b5003a05b5003a01f4ffba01f4ffba024200000300fff705b5003a
05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
0481003604350036043dffba043dffba02b3005f02b3005f02b3005f02b3
005f03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba
043fffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5
ffba06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba
04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba045a002a039a
00360435ffba0327ffba045a002a039a00360435ffba0327ffba064f0027
064f00270224ffba021affba04a7004604a700460224ffba021affba04cf
002d04cf002d0327ffba0327ffba040d0047040d004701a8ffba01a8ffba
02b4002302b400230327ffba0327ffba043500450435004501f4ffba01f4
ffba024200360300fff7039affba0327ffba0375003203750032051b0032
04b50024051b003204b5002401f4ffba01f4ffba045a003104ce0041045a
002604ce0039045a005304ce004a045a005304ce004a0600010006000100
000000460000004606000100060001000600010000000046000000460600
010006000100000000480000004606000100060001000600010000000046
000000460000004600000046000000400000003006000100000000460000
004606000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100028d00ca028d00c7028d00c606000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
01000600010006000100060001000600010006000100060001000100ffba
0800ffba1000ffba06dc0063053f004406d500a1055b00830000fddc0000
fc2f0000fca60000fe540000fcd70000fd730000fe290000fe0d0000fd11
0000fc670000fd9d0000fbf50000fc720000fed50000fed50000ff02041b
00a006ac006b06ac00190000feb60000fd730000fe080000fca60000fe53
0000fd110000fbc80000faf40000faaf0000fc720000fbaa0000fb6a0000
fcf10000fc7d0000fbdd0000fcc10000fb980000fdea0000fe840000fdc2
0000fcf10000fd5f0000fe760000febc0000fceb0000fd6c0000fd580000
fc900000fd150000fc2c0000fc130000fc120000fb960000fb9601c70088
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd
0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a0556
fffd0473004a055600a20473004b055600a20473004b055600a20473004b
055600a20473004b055600a20473004b055600a20473004b055600a20473
004b055600a20473004b0239006301c7001f023900ba01c7007c06390063
047300440639006304730044063900630473004406390063047300440639
0063047300440639006304730044063900630473004406dc0063053f0044
06dc0063053f004406dc0063053f004406dc0063053f004406dc0063053f
004405c700a10473008305c700a10473008306d500a1055b008306d500a1
055b008306d500a1055b008306d500a1055b008306d500a1055b00830556
000604000021055600060400002105560006040000210556fffd0473004a
0239ffe201c7ffb0063900630473004405c700a10473008305c700a10473
008305c700a10473008305c700a10473008305c700a1047300830000fefe
0000fefe0000fefe0000fefe0455fffd02eb000c07630007055afffb04a9
00a10380008604a900a10380008605c700a4046b00880473fffd04000014
0473fffd04000014055600090400000f05550057042b0045055500a10473
00870605006304730055063900600473004405b5003a01f4ffba0224ffba
021affba04a7004601f4009e01f4001001f4001b01f4001001f4006b01f4
fff90227ffce0000000f0000fff502aa00a402aa00a40000001300000056
000000560000ffcf01a8000f01d6ffbf01a8fff501d6ffcd01a8001d01d6
fff501a8009301d6001303750032037500320375003203750032051b0032
04b5002405b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
0481003604350036043dffba043dffba0481003604350036043dffba043d
ffba02b3003202b3003202b3005f02b3005f02b3005f02b3005f02b30032
02b3003202b3005f02b3005f02b3005f02b3005f02b3005f02b3005f02b3
003802b3003802b3004902b3004903e9004a03e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba
043fffba0692003e0692003e043fffba043fffba0692003e0692003e043f
ffba043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e
06c5ffba06c5ffba04a7ffba04a7ffba045a002a039a00360435ffba0327
ffba064f0027064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba064f0027064f
00270224ffba021affba064f0027064f00270224ffba021affba04a70046
04a7004604a7004604a70046093e0032093e00320740ffba0740ffba067f
0014077600140327ffba041effba04cf002d04cf002d0327ffba0327ffba
04cf002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba067f0014077600140327
ffba041effba067f0014077600140327ffba041effba040d0047040d0047
01a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d
004701a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba04350045
0435004501f4ffba01f4ffba043500450435004504350045043500450435
00450435004501f4ffba01f4ffba04350045043500450481003604350036
043dffba043dffba024200360300fff7031a001a031a001a031a001a0375
003203750032037500320375003203750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
0032051bffba04b5ffba051b003204b5002401f4ffba01f4ffba03750032
03750032051b003204b5002401f4ffba01f4ffba051b003204b50024067f
0045067f0045067f0045067f004501a800280000fe290000fea20000ff30
0000ff1d0000ff120000ff920000fe7e08fc003208ad00320000ffb50000
ffb60000feed0000ff640000fe7e0000ff9f018d000002f6fffd0000fe82
0000ff1004cd00320000ff580000ff580000ff640692003e0692003e043f
ffba043fffba08c9003e08c9003e06c5ffba06c5ffba045a002a039a0036
0435ffba0327ffba034d007902b400230242003601f4ffba0290ffba01f4
002f01f4003b01f4001201f400b101f4006d067f00140776001401f9009b
0000fed902bc000003f2009b045afff504cefff5045a005304ce004a045a
005304ce004a045a005304ce004a045a005304ce004a045a005304ce004a
045a005304ce004a04350071043500ad045a000f04ce000f047300140611
0014054000a7047300860540000a0473000a05c7005105c7006604000050
05c7fffd067a00140540004a04730046047400480556006e04d5005304e3
ffc40639006d04fe000f070c008701c700830239001f0556009604000088
01c7001504000018072000a405c7ffb80473008b0639006006f200630557
004406090014047300860556009e0556006b0400004f04f20094030b0044
0239002404e300140239002404e3003005fb006105c700a1062e00100400
002104e300290400002804e3002904e30031045c0044045c003f0473003c
0473005503ab003203e5002404730087021400bc034e00bc04ac00720239
00b00aaa009e09c7009e08640046087f009606aa0096039c008309c7009c
078e009c062b0087047300550556fffd0473004a0000fefe0556fffd0473
004a08000001071d00440639006d0473001a0639006d0473004205560096
040000880639006304730044063900630473004404e30029045c004c01c7
ffa20aaa009e09c7009e086400460639006d04730042084600a404f2009e
05c7009c047300870556fffd0473004a0556fffd0473004a055600a20473
004b055600a20473004b0239ff8a0239ff64023900040239fff606390063
04730044063900630473004405c700a102aaffcc05c700a102aa006805c7
00a10473007605c700a1047300830556005c0400003f04e3003002390024
045c0051037e001305c700a40473008705a600a404d6005e0486005e04e3
0029040000280556fffd0473004a055600a20473004b0639006304730044
0000fefd0639006304730044063900630473004406390063047300440556
000604000021047300570473004804730086047300860400001304000050
04730046047300460473005505e9005503ab004903ab0032050d0032040f
00440239ffb90473004204730042047800500402001904ef00190473008b
047300870473008701c7001901c7005702d90044029e0000026e001401c7
00830493008306aa008406aa008406aa00870473ffa60473008b046c0087
0473004406530044063f00570466004402aaffe402aaffe402aaffe402aa
008502aa008502aa008502aaffe40455008a0455008a0400003f01c7ffa2
0214ffb901c7ff7202cb00000239000f0239002404730019048c00540460
00880400001a05c7000604000018042800190400002804540028045c004c
045c0079040000240400005004000024040000500639006304400088040f
004904780050046b0088032e000004000008033b00880473004804000024
0400005007b7004607400046080b004605b30024036f002405c00024061c
0013054a0083050f008303e2001e0438006303110064031100640146ffce
01eb006401eb000001eb000002ea006403d90000029100000187005a02d7
005e01c7008001c7006c01c7008a02aa00fb02aa00fb02ca003202ca0032
04ac007004ac007004ac006504ac006502aa012102aa00de02aa005902aa
012102aa001d02aa005902aa00de023900b6023900b602aa00fb02aa00fb
02aa00a602aa00a602aa00a602aa001d02aaffe202aafffb029400000142
006402b8003202a0000002ca003203100096031000960310009603100096
0310009602aa006202aa006202aa002802aa001d02aa0047045700960457
009604570096045700960457004304570043045700430457004304570043
031000430457002f0457002f0457002f0457002f0457002f0310002f0457
0025045700250457002504570025045700250310002f0457001a0457001a
0457001a0457001a0457001a0310001a0457004204570042045700420457
004204570042031000420457009604570096045700960457009604570042
04570042045700420457004204570042031000420457002f0457002f0457
002f0457002f0457002f0310002f0457002f0457002f0457002f0457002f
0457002f0310002f04570026045700260457002604570026045700260310
002604570042045700420457004204570042045700420310004204570096
045700960457009604570096045700420457004204570042045700420457
004203100042045700260457002604570026045700260457002603100026
0457002304570023045700230457002304570023031000230457002f0457
002f0457002f0457002f0457002f0310002f0457004b0457004b0457004b
0457004b0457004b0310004b045700960457009604570096045700960457
004204570042045700420457004204570042031000420457001a0457001a
0457001a0457001a0457001a0310001a0457002404570024045700240457
002404570024031000240457002f0457002f0457002f0457002f0457002f
0310002f0457004e0457004e0457004e0457004e0457004e0310004e0457
00960457009604570096045700960000fec10000fec60000fdac0000fed8
0000ff920000fee90000ff4c0000fea00000fec40000ffce0000ff660000
fea00000fed80000fed80000ff970000ff980000ff990000fff40000ff42
0000ff420000ff440000ff5f0000fe870000ffec0000ffa60000ff510000
ff510000ff510000fec90000ff1c000000000000fee90000ff4c0000ff93
0000ff2a0000ff560000ffce0000fe870000febb0000fec40000fec40000
fed80000fed80000feb30000fec90000fdad0000fec80000feb30000fec9
0000fdad0000fe160000fee60000ffa60000fe870000ff440000feba0000
ff230000ff9a0000fdac0000fe88000000000000feb00000ff980000fe93
0000ffa60000fe870000fe1c0000ff660000ff440000feb00000feb00000
feb00000ff030000ff520000fd1f0000ff530000ff530000ff530000feb5
0000feb50000ffc30000feae0000fedc0000fec70000fec80000fedc0000
fe1e0000ff420000ff510000feb70000feb002aa00de02aa005902aa00fa
049a007004600000062e001407aa0000062e0014047b004c063f005704cf
0044063900630473004405c700700400005004e300a8033b008804ff0000
043c0032060d000a049d0042072000a406aa0084056500630473008b0564
00a40400000a0556006b0556006b04e0000504c5001905e5005f046e0044
03b600140347002804cf00440495005b0400005001c7ffa2063900600389
004d03890050055600a205c000a10473004b047800870ab4006d04fe0010
0639001404e70014079900bf05b500880558000104000006072e00bf0590
008806a10078057b007a086d00bf06f0008804d5006603ab001f065f0039
058200480639006004730044066d0009050c001a066d0009050c001a0898
0063072c004406aa002004e6001c0987006d06d000500000fe370ab4006d
04fe001005c7006604000050040700140000fea60000febc0000ff980000
ff980000fc2b0000fc4c05c000a10478008705400004042b00140556009e
04730087055d00a40464008804d5004e03ab003204a900040380000005ef
002904490028070900a4052f0088091800a006f600880606003e042b0023
05c700660400005004e3003003aa0026076700310587002605550057042b
004506e4000a0554000a06e4000a0554000a023900bf07630007055afffb
055700a1046800860540001204ab001805c700a4046b008805c700a4046b
008805550057042b004506aa00980580008c02aa002e0556fffd0473004a
0556fffd0473004a08000001071d0044055600a20473004b060500630473
005507630007055afffb04d5004e03ab003204d5004e045c004c05c000a1
0478008705c000a1047800870639006304730044063900600473004405c0
004a0415002b0515000a040000210515000a040000210515000a04000021
05550057042b0045071500a805c0008b0540004a0473004607bf004a0703
004607a6006606860053054d00660413005307c3001207470018084600a4
070700880639006d0478005005f90030055300260000ff430000fec90000
ff770000ffb00000ff470000ff560000ff740000fed70000feac00000000
0000ff520000ff56000000000000feac0000fd9a000000000000ff6a0000
ff7c0000ff690000ff560000feac0000ff7f0000ff560000fdef0000ff43
0000ff690000ff7c000000000000fdae0000ff8c000001020000fefe0000
fefe0000fedf0000fedf0000ff580000ff200000fefe0556fffd0473004a
05560096047300860556009604730086055600960473008605c700660400
005005c7009e0473004605c7009e0473004605c7009e0473004605c7009e
0473004605c7009e04730046055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b04e300a802390013
0639006d0473004205c700a40473008705c700a40473008705c700a40473
008705c700930473006805c700a4047300870239ffdf01c7ff9202390020
023900060556009604000088055600960400008805560096040000880473
009601c7007e0473009601c7ffb90473009601c7ffa50473009601c7ffa3
06aa009806aa008706aa009806aa008706aa009806aa008705c7009c0473
008705c7009c0473008705c7009c0473008705c7009c0473008706390063
047300440639006304730044063900630473004406390063047300440556
009e047300870556009e0473008705c700a102aa008505c700a102aa0085
05c700a102aa005e05c700a102aa00260556005c0400003f0556005c0400
003f0556005c0400003f0556005c0400003f0556005c0400003f04e30030
0239002404e300300239002404e300300239ffff04e300300239000e05c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
05c700a104730083055600090400001a055600090400001a078d001905c7
0006078d001905c70006055600090400000f055600090400000f05560006
0400002104e300290400002804e300290400002804e30029040000280473
00870239000305c70006040000210473004a01c7008904a0004804a00048
04a0004804a0004804a0004804a0004804a0004804a000480556fffd0556
fffd06820013068200130682001306820013068200560682005603910062
0391006203910062039100620391006203910062061e0000061e0000076c
0000076c0000076c0000076c00000473008b0473008b0473008b0473008b
0473008b0473008b0473008b0473008b068f0000068f0000081f0000081f
0000081f0000081f0000081ffff3081ffff301c7008101c7008101c7ff9b
01c7ff9b01c7ffeb01c7ffeb01c7ffa201c7ffa203010000030100000491
00000491000004910000049100000491fff30491fff30473004404730044
04730044047300440473004404730044069d0000069d0000082d0000082d
000007c9000007c900000460008804600088046000880460008804600088
0460008804600088046000880682000007ae00000812000007ae0006063f
0057063f0057063f0057063f0057063f0057063f0057063f0057063f0057
065f0000065f000007ef000007ef0000078b0000078b0000078bffff078b
ffff04a0004804a0004803910062039100620473008b0473008b01c7ffe6
01c7006804730044047300440460008804600088063f0057063f005704a0
004804a0004804a0004804a0004804a0004804a0004804a0004804a00048
0556fffd0556fffd06820013068200130682001306820013068200560682
00560473008b0473008b0473008b0473008b0473008b0473008b0473008b
0473008b068f0000068f0000081f0000081f0000081f0000081f0000081f
fff3081ffff3063f0057063f0057063f0057063f0057063f0057063f0057
063f0057063f0057065f0000065f000007ef000007ef0000078b0000078b
0000078bffff078bffff04a0004804a0004804a0004804a0004804a00048
04a0004804a000480556fffd0556fffd0556fffd0556fffd0556fffd02aa
00e502aa00fd02aa00e502aa000602aa00060473008b0473008b0473008b
0473008b0473008b068200000682000006f3000006f3000005c700a402aa
001302aa001302aa000601c7ffbb01c7ffab01c7ffca01c7ffca01c7ff93
01c7ff930239001a0239fff5036500000365000002aa001302aa001302aa
000604600088046000880460008804600088048d0083048d008304600088
04600088055600060556000606e6000007180000061e000002aaffea02aa
ffea02aa0059063f0057063f0057063f0057063f0057063f005707650000
069d000007270000065f000005fb006102aa00de02aa00e50473000d05c7
006605c7006606aa008705c70024095000a1078d00190556001f04e30030
080000290400003004c100660000ff530000ff530000ff530000ff5301c7
001901c7ffa2042b0005055600110574004602cbffa3057a008702f0ffc8
057f000a057f000a02aa008402aa008402aa00c902aa00c902aa00a002aa
005902aaffaf02aa003a02aa0006023900b902aa00a902aa00a902aa00a9
02aa00a9032e001e032e001e02aa003a0000ff730000ffa50000fed80000
ff230000ff720000ff720000fee70000ffa50000ff530000ff530000ff53
0556009e0473008703f8001905fb0019071d004404400019040000500469
00870469001903eb008703ab003201c70088036100410400008803360010
0580008c04780087047300440400001304de004404de004404de000d078d
005003a800440473004404730044042b00840455001f0455001f03aa0026
0460008804c6004405de004404c600440400001a05c700060400002803ab
0032036b003f04db001f02eb00880400001a04550088042b008405b4007a
04ab001803a00000054f0000035100320351ffd103980032034800320348
003203f80032036e0032015600690284002d0366003202d0003204150032
03710032036f003204180032030f003203590032039c003203760031036f
003204fb000002fa003202fa00320304003204cc00320305006403050032
02f9003202f90032028c0032028c0032030400320142006402b600640495
0064030f00640305003202d5003203050032030500320306006401c20032
030f00640342003204950064029200000320000003150064029200000306
00320385003202bf00000142006401eb0064030f00640292000003150064
02920000030900320385003202bf0000077d00460a660046038300460a2f
00460541ffba01e9003c045a00110000ff0d0000ff350000fece0000feb7
0000fec90000ffcf0000ff4f0000ff9e0000feca02b3005f02b3005f03e9
004a03e9004a039affba0327ffba039affba0327ffba05ad0069053d002d
05fd009604dc005004e0003c05f6009b053f00280650002804ac00720000
fe3b0000fe660000fe660473fffc02aa005302d5ffce01a8ffba01a8ffba
01a8ffba01a8ffba0658001509c500470400000008000000040000000800
000002ab000002000000015500000473000002390000019a000000ab0000
0000000005e5000305c7006606aa00980580008c07440083071800460718
00480556fffd05c70066040000140473000a04e300300400004f04000028
04a5001d000001020000ff420000febf0000ff3a0000ff53048d000a05c7
005105c7006605c70051045500a102eb00880000ff430000ff040000ffac
02d200960000ff37021affba0250001e0000ff3a0000ff5b0000ff5f0000
ff7e0000ff940000ff4a0000fe9c05b5003a05b5003a01f4ff9601f4ff96
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba0481003604350036043dffba043dffba0481003604350036
043dffba043dffba02b3003202b3003202b3005f02b3005f03e9004a03e9
004a0692003e0692003e043fffba043fffba045a002a039a00360435ffba
0327ffba045a002a039a00360435ffba0327ffba045a002a039a00360435
ffba0327ffba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba067f0014077600140327ffba041effba067f00140776
00140327ffba041effba067f0014077600140327ffba041effba02b40023
02b400230327ffba0327ffba02b4002302b400230327ffba0327ffba0435
00450435004501f4ffba01f4ffba043500450435004501f4ffba01f4ffba
043500450435004501f4ffba01f4ffba040d0047040d004701a8ffba01a8
ffba03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba
043fffba0473ff93047300460239ffbf06aaffd50473ffb70473ff9102aa
ffa402aaffa40400ffff0239ffb90400002804730089030b006404740048
0649002401c7001901c700190473001e0460001e048c000a047300860473
00460239001305b400420400008801c7fffc06aa00870473008b04730087
02aafffb0400003f0318ffa20400001a0400000f040000280473004a0473
0048047300460473004b03ab004903ab00320534005501c7008804000013
01c7ffa204730083045c004c0304006402d5003202c9003302fc0032028c
003201d5003201d500000304003203110064014200190142006401420064
01420019022a00000142006401420009023300640493006404930064030f
ffc9030f0064030e0064030500320300003202b800320142ffca01c20032
030f001d031a00320306006402d400640292000002de003202de003202de
003202f4003202ea00320000febc0000febc0000ff730000fea9023900b9
02fa003202f900320305003202a0000002f900320639006d0556fffd0473
000f05c7006602aa004104a0004804a0004804a0004804a0004804a00048
04a0004804a0004804a0004801c7ff9b01c7ffab01c7ff9b01c7ffab01c7
ff9b01c7ffbb01c7ff9b01c7ffbb04600088046000880460008804600088
0460008804600088046000880460008801c7ffab01c7ffab01c7ffbb01c7
ffbb04600088046000880460008804600088045a005304ce004a03a00013
0556001105c700290558000b055600a20473004b0400003301c7ffa205e6
00630473004805c7000002aa000f05560006040000210400001304000050
0400001301c700830455fffd02eb0001055600090400000f055600090400
000f04d5005303ab00490540001204ab00180000fec60000fed40000fec6
0000fed40000fe5f0000fe5f0000ff720000ff730000fee7078b000a03eb
004c040000130473000a01c700150473fff40556001105c700a104730019
0239ff8b05c700a404730087055600960400008804e30029040000280400
003b049e00a403670088053000480000ff530000ffbc0000fefe0000fefe
0000fea40000fea401c7008805c900a505c7009c05c900a50000fecd0000
ff480000fec90000fece0000fec50000fed00000fed10000feee0000fed6
0000fedc0000fdd90639005804730048078d001905c70006059f00a40000
feb905dc006304c60009084c001906ba0006023900b9038000720187005a
0187005a0400009904000099023900b0023900b0023900b002aa00190000
00460000003b000000310000005600000044000000560000004a00000049
04e30030047300500473005c0312003f045000480446003d047300310450
003d047d00620427003f0473005604790054047300550319003b0473003c
047300560473003204730055047e0062042f004b04730053047b005505c5
006a05d3006305f800a6094a00a605f8009c0302003b054100a406390060
0472004601c7008903f80087020a00890473004e0250000e047800850473
005c0473005c0302003b020a008901c70088047100000489009804c3005c
04e70098046f009804080098052f005c04f0009801ea0098037300290489
009803bc009805c7009804ec00980531005c046d00980531005c04db0098
046d004a0410002904dd0091046800080659001e046f0008046c0008040e
001f0691000006aa005c03bc003805310031046f009804e7001404c30090
04710000047100000471000004710000047100000471000004c3005c046f
0098046f0098046f0098046f009801eafff401ea008e01eaffb601eaffda
04ec00980531005c0531005c0531005c0531005c0531005c04dd009104dd
009104dd009104dd0091046c000804710000047100000471000004c3005c
04c3005c04c3005c04c3005c04e7009804e70014046f0098046f0098046f
0098046f0098046f0098052f005c052f005c052f005c052f005c04f00098
04f2002e01eaff9601eaffbd01eaffd401ea003e01ea0087054300980373
00290489009803bc009803bc009803bc009803bc009804ec009804ec0098
04ec009804f500980531005c0531005c0531005c04db009804db009804db
0098046d004a046d004a046d004a046d004a046d004a0410002904100029
04100029040e002904dd009104dd009104dd009104dd009104dd009104dd
00910659001e0659001e0659001e0659001e046c0008046c0008046c0008
040e001f040e001f040e001f047100000691000005310031047100000489
009803ae009804710000046f0098040e001f04f000980531005c01ea0098
04890098045a000205c7009804ec0098042f004c0531005c04e60098046d
00980425006a04100029046c00080546004c046f00080543004c05310052
04710000046f009804f0009801ea008e0531005c046c00080531005201ea
ffda046c0008046f009805af002903ae009804c7005c046d004a01ea0098
01eaffda0373002906f4000f06b6009805da0029041600980463002304e6
009804710000048600980489009803ae00980469000f046f009806540023
041f004604e5009804e50098041600980469000f05c7009804f000980531
005c04e60098046d009804c3005c0410002904630023050d004c046f0008
04dc0098047d004c06280098061e0098057c003c05e700980455009804c6
004606af009804db00120323009802aa002202aa006b02aa001902aa0021
02aa001702aa002202aa002e02aa004902aa002a02aa003302aa002e02aa
003302aa002205c5006a05c5006a05c5006a05c5006a05c5006a05c5006a
05c5006a05c5006a05c5006a05c5006a05c5006a05d3006305d3006305d3
006305d3006305d3006305d3006305d3006305d3006305d3006305d30063
05d3006305f800a605f800a605f800a605f800a605f8009c05f8009c05f8
009c05f8009c05f8009c05f8009c05f8009c05f8009c05f8009c0302003b
0302003b0302003b0302003b030200320302003b0302003b0302003b0302
003b0416ffac0302003b0302003b0302003b020a0089020a004e02690089
02a50089020a00070302003b0302003b0302003b0302003b030200320302
003b0302003b0302003b054100a404720046047200460472004604720046
047200460472004604720046047200460472004601c7ffa703f80087020a
0089020a004e0269008902a50089020a00070250000e0250000e0300000e
0250000e0478008504780085047800850478008504a0005702aa001702aa
002202aa004902aa002a04ee001504ed009d04ed009d060b001a04d50085
05e3008502260099022600890226002c0226001e02260063022600300226
001b0226001d0226001d022600290226001e022600260226001d02260008
022600280c9600460e0c00460000ffba0ed200460000ff5b0000ff910000
ffb70000ff9b0481003604350036043dffba043dffba0481003604350036
043dffba043dffba0692003e0692003e043fffba043fffba03e9004a03e9
004a0481003604350036043dffba043dffba01a8ffc301d6ff5f01a8ffe9
01d6ff85051b003204b5002401f4ffba01f4ffba051b003204b5002401f4
ffba01f4ffba051b003204b5002401f4ffba01f4ffba0375003203750032
0375003203750032067f0045067f0045067f0045067f0045048100360435
0036043dffba043dffba0692003e0692003e043fffba043fffba0692003e
0692003e043fffba043fffba04cf002d04cf002d0327ffba0327ffba04b4
ffe00500ffe00496ffe804e4ffe8075c003205da0032070e003205130039
0bb700000000fe2c0000fffc0000006b000000730000006b051b003204b5
002401f4ffba01f4ffba067f0014077600140327ffba041effba067f0014
077600140327ffba041effba051b003204b5002401f4ffba01f4ffba051b
003204b5002401f4ffba01f4ffba051b003204b5002401f4ffba01f4ffba
0000fff5049e00a403cd000a04e3003003aa002605c000a104ac00870556
00960473005a0a6600440473007e0556001d07ae001206150018064e009e
05be008707a9000906da001f0556009604000086088c000d07130018090e
00a406ce008805c700a40455008805a300a2046f00870239001302390013
04740048062200bf032f000e04ba005c0474004905590014049b000a06aa
00980556fffd05dc00a50590004b02aaffe50473004403eb004c0146ffce
029200000556005c04e3002902390069063c00aa0b56ffc2084aff120b0c
00320ed2004401a8ffba01a8ffba01a8ffba01d6000201a8003201a80046
01a8ffba01a8001a0251003a01a8002901a8004601a8ffba01a8004801a8
ffba01a8002901a8ffba01a8004601a8ffba01a8006e01a8ffba01f4009e
01f4001001f4001b01f4001001f4fff9022e008d01f4006b0199004602bf
003202bf00320473000f00>
<000000000000006c0000006c0000006c0000006c0000006c0000006c0000
006c0000006c0000006c0000006c0000006c0000006c0000006c0000006c
0000006c0000006c0000006c000000a8000001180000035c000004740000
06ce0000090200000b3000000b3000000d6a00000e160000113c000013e4
000013e4000013e4000013e4000013e4000013e4000013e4000013e40000
13e4000013e4000013e4000013e4000013e4000014ba000014ba000014ba
000014ba000014ba000014ba000014ba000014ba000016c8000016c80000
182200001822000018220000182200001822000018220000182200001822
000018220000182200001822000018220000182200001822000018220000
18220000182200001ba600001dec00002074000022b8000024de0000265c
000028c4000028c400002adc00002adc00002e0200002e02000031a80000
33b4000035ea000037f6000037f60000391a00003d9000003d9000003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600003f76
00003f7600003f7600003f7600003f7600003f7600003f7600003f760000
3f7600003f7600003f7600003f7600003f7600003f7600003f7600010000
0f9402b5003c00ca000700020010002f0059000004bc05ec000500020000
000e00ae0000000300000000006a000000000003000000070064006a0001
000000000000003500ce0001000000000003000e01030001000000000004
000e01110001000000000006000e011f00010000000000070031012d0003
000104090000006a015e0003000104090001001c01c80003000104090002
000e01e40003000104090003001c01f20003000104090004001c020e0003
000104090006001c022a00030001040900070062024600a9002000320030
0031003200200054006800650020004d006f006e006f0074007900700065
00200043006f00720070006f0072006100740069006f006e002e00200041
006c006c0020005200690067006800740073002000520065007300650072
007600650064002e0041007200690061006c002000200069007300200061
002000740072006100640065006d00610072006b0020006f006600200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e002ea9203230313220546865204d
6f6e6f7479706520436f72706f726174696f6e2e20416c6c205269676874
732052657365727665642e4f45504a42492b417269616c4d544f45504a42
492b417269616c4d544f45504a42492b417269616c4d54417269616c2069
7320612074726164656d61726b206f6620546865204d6f6e6f7479706520
436f72706f726174696f6e2e00a900200032003000310032002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e004f
00450050004a00420049002b0041007200690061006c004d005400520065
00670075006c00610072004f00450050004a00420049002b004100720069
0061006c004d0054004f00450050004a00420049002b0041007200690061
006c004d0054004f00450050004a00420049002b0041007200690061006c
004d00540041007200690061006c00200069007300200061002000740072
006100640065006d00610072006b0020006f006600200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e002e0000410c0054032c032c032c0222001d001f
032b032a003c001f032ab2061d1fb80328b326181fd0bc032900e0032900
020329b22b1d1fb90327031db23b1f40b80323b31215320f412d03200001
002f0320000100200320006f032000af032000bf03200004005f031e0001
0010031e007f031e0080031e00af031e00bf031e00d0031e00060000031e
0010031e0020031e006f031e009f031e00e0031e0006031d031cb2201f10
41270319007f03190002000f031700ef031700ff03170003001f0317002f
0317004f0317005f0317008f0317009f03170006000f0317005f0317006f
0317007f031700bf031700f00317000600400317b2923340b80317b28b33
40b80317b36a6c3240b80317b2613340b80317b35c5d3240b80317b35759
3240b80317b34d513240b80317b344493240b80317b23a3340b80317b331
343240b80317b32e423240b80317b3272c3240b80317b312253280b80317
b30a0d32c04116031600d00316000200700316000102c4000f0101001f00
a0031500b0031500020306000f0101001f00400312b32426329fbf030400
01030203010064001fffc00301b20d1132410a02ff02ef0012001f02ee02
ed0064001fffc002edb30e11329f414a02e200af02e200bf02e2000302e2
02e202e102e1007f02e00001001002e0003f02e0009f02e000bf02e000cf
02e000ef02e0000602e002e002df02df02de02de000f02dd002f02dd003f
02dd005f02dd009f02dd00bf02dd00ef02dd000702dd02dd001002dc0001
000002dc0001001002dc003f02dc000202dc02dc001002db000102db02db
000f02da000102da02daffc002d3b2373932b9ffc002d3b22b2f32b9ffc0
02d3b21f2532b9ffc002d3b2171b32b9ffc002d3b2121632b802d2b2f929
1fb90326031cb23b1f40bb0322003e00330322b225311fb80318b23c691f
b802e3b3202b1fa0413002d400b002d40002000002d4001002d4002002d4
005002d4006002d4007002d40006006002d6007002d6008002d6009002d6
00a002d600b002d60006000002d6001002d6002002ca002002cc002002d6
003002d6004002d6005002d6000802d0b2202b1fb802cfb226421f411602
ce02c70017001f02cd02c80017001f02cc02c60017001f02cb02c5001700
1f02c902c5001e001f02ca02c6b21e1f00410b02c6000002c7001002c600
1002c7002f02c5000502c1b324121fff411102bf0001001f02bf002f02bf
003f02bf004f02bf005f02bf008f02bf000602bf0222b2641f12410b02bb
00ca0800001f02b200e90800001f02a600a20800406a1f40264349324020
43493240263a3d3240203a3d329f209f2602402696993240209699324026
8e923240208e92324026848c324020848c3240267a813240207a81324026
6c763240206c76324026646a324020646a3240265a5f3240205a5f324026
4f543240204f5432b8029eb724271f374f6b0120410f0277003002770040
027700500277000402770277027700f90400001f029bb22a2a1fb8029a40
2b292a1f80ba0180bc0180520180a201806501807e01808101803c01805e
01802b01801c01801e0180400180bb0138000100800140b40180400180bb
013800010080013940180180ca0180ad0180730180260180250180240180
20013740b80221b2493340b80221b2453340b80221b341423240b80221b3
3d3e320f410f0221003f0221007f0221000300bf022100cf022100ff0221
000300400221b320223240b80221b3191e3240b80222b32a3f3240b80221
b32e3a326f414a02c3007f02c3008f02c300df02c30004002f02c3006002
c300cf02c30003000f02c3003f02c3005f02c300c002c300ef02c300ff02
c3000600df02220001008f02220001000f0222002f0222003f0222005f02
22007f022200ef0222000600bf022100ef02210002006f0221007f022100
af02210003000f0221002f0221003f0221004f0221000402c302c3022202
2202210221401d101c102b1048038f1c010f1e014f1eff1e023700161600
000012110811b8010db6f70df8f70d00094109028e028f001d001f029002
8f001d001f028fb2f91d1fb80198b226bb1f41150197001e0401001f0139
00260125001f013800730401001f0135001c0801001f0134001c02ab001f
0132b21c561fb8010fb2262c1fba010e001e0401b61ff91ce41fe91cb802
01b61fe81cbb1fd720b80401b21fd51cb802abb61fd41c891fc92fb80801
b21fbc26b80101b21fba20b80201b61fb91c381fadcab80401b21f8126b8
019ab21f7e26b8019ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e
73b80401400f1f52265a1f481c891f441c621f4073b80801b61f3f1c5e1f
3c26b8019ab21f351cb80401b61f301cbb1f2b1cb80401b61f2a1c561f29
1cb80101b21f231eb80401b21f5537b80168402c07960758074f07360732
072c0721071f071d071b071408120810080e080c080a0808080608040802
08000814b8ffe0402b000001001406100000010006040000010004100000
01001002000001000200000001000002010802004a00b013034b024b5342
014bb0c063004b6220b0f65323b8010a515ab005234201b0124b004b5442
b0382b4bb807ff52b0372b4bb007505b58b101018e59b0382bb00288b801
005458b801ffb101018e851bb0124358b900010111858d1bb90001012885
8d5959001816763f183f123e113946443e113946443e113946443e113946
443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b
2b2b2b2b2b2b182b1db0964b5358b0aa1d59b0324b5358b0ff1d594bb093
53205c58b901f201f04544b901f101f045445958b9033e01f2455258b901
f2033e4459594bb8015653205c58b9002001f14544b9002601f145445958
b9081e0020455258b90020081e4459594bb8019a53205c58b9002501f245
44b9002401f245445958b909090025455258b9002509094459594bb80401
53205c58b173244544b1242445445958b917200073455258b90073172044
59594bb8040153205c58b1ca254544b1252545445958b9168000ca455258
b900ca16804459594bb03e53205c58b11c1c4544b11e1c45445958b9011a
001c455258b9001c011a4459594bb05653205c58b11c1c4544b12f1c4544
5958b90189001c455258b9001c01894459594bb8030153205c58b11c1c45
44b11c1c45445958b90de0001c455258b9001c0de04459592b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b65422b2b01b33b59635c456523456023456560234560b08b76
6818b080622020b163594565234520b003266062636820b003266165b059
236544b063234420b13b5c4565234520b003266062636820b003266165b0
5c236544b03b2344b1005c455458b15c406544b23b403b4523614459b347
503437456523456023456560234560b089766818b080622020b134504565
234520b003266062636820b003266165b050236544b034234420b1473745
65234520b003266062636820b003266165b037236544b0472344b1003745
5458b137406544b24740474523614459004b5342014b5058b10800425943
5c58b108004259b3020b0a124358601b2159421610703eb0124358b93b21
187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411b
ba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a8
0400000b2b59b0102342b0112342002b7475737500184569444569444569
447373737374757374752b2b2b2b74752b2b2b2b2b737373737373737373
737373737373737373737373737373732b2b2b45b0406144737400004bb0
2a534bb03f515a58b1070745b040604459004bb03a534bb03f515a58b10b
0b45b8ffc0604459004bb02e534bb03a515a58b1030345b040604459004b
b02e534bb03c515a58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b752b2b2b2b2b2b2b435c58b9008002bbb301401e017400
735903b01e4b5402b0124b545ab012435c5a58ba009f0222000100735900
2b7473012b01732b2b2b2b2b2b2b2b737373732b2b2b2b2b002b2b2b2b2b
2b0045694473456944734569447374754569447345694445694445694473
74456944456944732b2b2b2b2b732b002b732b74752b2b2b2b2b2b2b2b2b
2b2b2b2b2b737475732b7374757374752b2b2b742b002b2b2b0018456944
2b0000>
[16247 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 108 17 <000100ba0000018700cd000300254018023c000a023c5f006f007f00af00
04a0000100a004a198182b10f65d5ded003fed313033353315bacdcdcd00
>TRVCAA+ArialMT AddT42Char 
2 280 19 <00020055ffe7041105c00010001d01ddb10202435458400a1a1e0405141e
0d0d1709b8ffe8b40f0f025509b8ffe840190d0d02550911000c0f0f0255
00160c0c0255000c0d0d0255002f2b2b2bcd2f2b2bcd003fed3fed31301b
b10602435458400a1a1e0405141e0d0d1709b8fff4b40f0f065509b8ffe6
b40d0d065509b8ffee40190b0b0655091100100d0d065500100c0c065500
100b0b0655002f2b2b2bcd2f2b2b2bcd003fed3fed31301b404e04068702
880b880fc90e0509070b180245134c154a19431b54135c155c19521b6b07
6b0b63136c156b19601b79027706760b7a0f870698079610c918da02d606
d60bdb0f1a1a1e0405141e0d0d174110fff4000c000c014000560017fff2
000b000b014000560017fff8000d000d0140401156177309402123343009
01000910090209410afff4000b000b014000560009ffe8000d000d0140b7
5609901f110c0c0cb80140b456110e0b0bb80140b45611080d0db80140b3
56117300b8ffc0400c2123342000400002000c0c0cb80140b45600080b0b
b80140b45600080d0db80140b65600901ec78b182b10f62b2b2b5d2bed2b
2b2b10f62b2b5d712bed2b2b2b003fed3fed3130015d71005db00243b040
5058b4062019101cb8fff0b202200bbeffe00016ffe00012ffe0000fffe0
003838383838013838385959591310123633321616121510020623222726
13101633323611102623220706556bd3a076b274426ad3a1d47991b9a97c
7ca9a97e7c4a5d02d30104013dac5fb3feffdafefefec3ad98b7019dfe97
eff00168016aee698600>TRVCAA+ArialMT AddT42Char 
2 2864 25 <0002004dffe7041505c0001d002a01b2b10202435458401f0f011f015f01
03011b281e400d010d0d14051e1b05221e140d0a1e01002510b8fff44019
0d0d0255101e17100f0f025517100c0c0255170c0d0d0255172f2b2b2bcd
2f2bcdd4cd10c5003fed3fed12392f5ded10c45d31301b402d6b19014407
4015441944205a1254206b03640764086a1264207408751c8508861cd608
d4161107200d0d065527b8ffe0b40d0d065523b8ffe0401b0d0d06552120
0d0d0655281e400d500d020d0d141b01d35f000100b802684009051e1b05
221e140d01b80138b200b5254110fff4000c000c014000560025fff2000b
000b014000560025fff8000d000d01404011562573104021233430100100
1010100210b8fff0b70c0c065510902c0ab80138b31e0c0c0cb80140b456
1e0e0b0bb80140b4561e080d0dbb01400056001e0139400d3f175f176f17
7f170417100b0bb80140b45617100c0db80140400e5617160c0c06551716
0d0d065517b80224b32bc78b182b10f62b2b2b2b5ded2b2b2bed10f62b5d
712bed2b2b2bf4ed003fed3fedfd5de41112392f5ded3130b00243b04050
58b90007ffe0b42720232021b8ffe00138383838592b2b2b2b015d005d59
010726272623220706060736363332121514060623220011103736333216
0114161633323635342623220603fbb3182c496b564155620241bc67b4fd
77d084e1fee49d89e8adddfd374f8e4e72a4a27b7aaa04530e6a304d303e
eedc6360fef7d28aed7e014b017c01a9c1a8c2fcdd5daa59b89e98afaf00
>TRVCAA+ArialMT AddT42Char 
2 0 0 <00020100000005000500000300070042b40201e40607b802994013000504
e403000a0704e4010019080605e40203bc023100090199012e00182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>TRVCAA+ArialMT AddT42Char 
TRVCAA+ArialMT /CharStrings get begin
/period 17 def
/zero 19 def
/six 25 def
end
TRVCAA+ArialMT /Encoding get
dup 46 /period put
dup 48 /zero put
dup 54 /six put
pop
end
%ADOEndSubsetFont
/QMYVMT+ArialMT /TRVCAA+ArialMT findfont ct_VMDictPut
/QMYVMT+ArialMT*1 
[46{/.notdef}rp /period /.notdef /zero 5{/.notdef}rp /six 201{/.notdef}rp]
QMYVMT+ArialMT nf
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
39.1333 210.75 mo
(0.66)
[5.559 2.779 5.559 0 ]xsh
81.8 198.667 mo
81.8 195.75 li
@
81.8 17.167 mo
81.8 20 li
@
%ADOBeginSubsetFont: TRVCAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QMYVMT+ArialMT gcheck setglobal} if
2 3434 26 <000100610000041605a7000d0070400ec40d01040d010402080409030d00
b802bb4030020104090c0d73030302402123344f025f026f0203021a0f08
7309eb004f015f015f02033f015f016f017f010401190eb80192b18b182b
4e10f45d713c4df4ed4e10f6712b3c4d10ed003f3f3cfd3c391139011112
39313001715d13352115060003060723361212376103b58cfeed4b360fb9
0382f38904faad8c95fe12fefbb8dbad01ea01c79c00>QMYVMT+ArialMT AddT42Char 
QMYVMT+ArialMT /CharStrings get begin
/seven 26 def
end
QMYVMT+ArialMT /Encoding get
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QMYVMT+ArialMT*1 
[46{/.notdef}rp /period /.notdef /zero 5{/.notdef}rp /six /seven 200{/.notdef}rp]
QMYVMT+ArialMT nf
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
72.1333 210.75 mo
(0.67)
[5.559 2.779 5.559 0 ]xsh
114.717 198.667 mo
114.717 195.75 li
@
114.717 17.167 mo
114.717 20 li
@
%ADOBeginSubsetFont: TRVCAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QMYVMT+ArialMT gcheck setglobal} if
2 3606 27 <00030053ffe7041905c00017002300300293b10202435458b40c001b1e2e
b8ffc04017131302552e2e12211e0605281e120d1e090c0c0c025509b8ff
f4b60d0d0255092b0fb8fff0b40f0f02550fb8ffe8b40b0b02550fb8ffe8
b60d0d02550f1803b8fff0b41010025503b8fff0b40f0f025503b8fff440
190d0d02550324150c0b0b0255150c0c0c0255150c0d0d0255152f2b2b2b
cd2f2b2b2bcd2f2b2b2bcd2f2b2bcd003fed3fed12392f2bed393931301b
b10602435458b71e090c0c0c065509b8fff4b60d0d0655092b0fb8ffe4b4
0f0f06550fb8ffe4b60d0d06550f1803b8fff0b40f0f065503b8fffc4022
0d0d06550324150c0c0c0655150c0d0d0655150c001b1e2e2e12211e0605
281e120d003fed3fed12392fed3939012f2b2bcd2f2b2bcd2f2b2bcd2f2b
2bcd31301b404d351601291649164926e60ce930050930017d007d017c04
7408710b720c750d7a178b008a018c048608810b840c860d8d17cc11c613
120c001e18000c1b1e2ea02e012e12211e0605281e120d1e4110fff4000c
000c01400056001efff2000b000b01400056001efff8000d000d0140b656
1e73bf09010941120267002bfff4000c000c01400056002bfff2000b000b
01400056002bfff8000d000d01404011562b730f40202334300f01000f10
0f020fb80191b432180c0c0cb80140b456180e0b0bb80140b45618080d0d
b80140b6561873b0030103b80267b3240c0c0cb80140b456240e0b0bb801
40b45624080d0db80140b356247315b8ffc0400e21233420154015021590
31c78b182b10f65d2bed2b2b2bf45ded2b2b2b10f45d712bed2b2b2bf45d
ed2b2b2b003fed3fed12395d2fed393901111239393130b00243b0405058
b90022ffe0b21c201ab8ffe0b220202fb8ffe0b22d2026b8ffe0b1292001
383838383838383859015d72710071595901262635343633321615140607
161615140023220035343613141633323635342623220603141616333236
353426232206016a706ce6bfc0ea6b6d878dfef6d9d9fef69162866b6885
896667883a49905381a8ad827fa7031b29986aa0dadfa06697292cc488bc
ff000101c08fc101546884835f638784fcff4d904fa68082aaa8>QMYVMT+ArialMT AddT42Char 
QMYVMT+ArialMT /CharStrings get begin
/eight 27 def
end
QMYVMT+ArialMT /Encoding get
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QMYVMT+ArialMT*1 
[46{/.notdef}rp /period /.notdef /zero 5{/.notdef}rp /six /seven /eight 
199{/.notdef}rp]
QMYVMT+ArialMT nf
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
105.05 210.75 mo
(0.68)
[5.559 2.779 5.559 0 ]xsh
147.717 198.667 mo
147.717 195.75 li
@
147.717 17.167 mo
147.717 20 li
@
%ADOBeginSubsetFont: TRVCAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QMYVMT+ArialMT gcheck setglobal} if
2 4412 28 <00020055ffe7041905c0001e002a0223b10602435458b70b1f1801002511
18b8fff6b40f0f065518b8fff4b40d0d065518b8fff040280c0c06551811
0c0d0d065511100c0c06551118112c2b0b281e0f0e1f0e4f0e030e0e1400
50010101b8ffc0400d1011065501041e1c0d221e1405003fed3fedc42b5d
3212392f5ded3201111239392f2b2b2f2b2b2b10cdd4cd10ddc531301bb1
0202435458b70b1f180100251118b8ffeab40f0f025518b8ffea402a0d0d
025518110c0c0c02551118112c2b0b281e0f0e1f0e4f0e030e0e14005001
0101041e1c0d221e1405003fed3fedc45d3212392f5ded3201111239392f
2b2f2b2b10cdd4cd10ddc531301b40473a1a4c1640235b16572366036c16
6d1a67237a1a7d1e8c1a8b1e9a16a91abc1aea16e620f620133d169e16ad
16033a29640602281e4f0e5f0e020e0e1c221e140501d350000100b80268
b4041e1c0d1f4127fff4000c000c01400056001ffff2000b000b01400056
001ffff8000d000d01400056001f0139000bfff4000c000c01400056000b
fff6000b000b01400056000bfff8000d000d01400056000b013840111840
212334301801001810180218902c01b80138b500b5250c0c0cb80140b456
250e0b0bb80140b45625080d0db80140b356257311b8ffc0400e21233420
1140110211902bc78b182b10f65d2bed2b2b2bf4ed10f65d712bed2b2b2b
ed2b2b2b003fedfd5de43fed12392f5ded3130b00243b0405058bb0027ff
e00023ffe0b321200620013838383859005d71015d59591337161633323e
023534270606232202353400333216121110020623222601342623220615
141633323670ad167c61537d50360136bb6db6fc0107c68fed7b7af1a2ac
da02cba57478b2a97c7da10153107a6e4c7fd8700c18566b0108d8df0110
9afee3fef2fee7feb3aebf03349bb6c49c8cafaf>QMYVMT+ArialMT AddT42Char 
QMYVMT+ArialMT /CharStrings get begin
/nine 28 def
end
QMYVMT+ArialMT /Encoding get
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QMYVMT+ArialMT*1 
[46{/.notdef}rp /period /.notdef /zero 5{/.notdef}rp /six /seven /eight 
/nine 198{/.notdef}rp]
QMYVMT+ArialMT nf
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
138.05 210.75 mo
(0.69)
[5.55899 2.77901 5.55899 0 ]xsh
180.717 198.667 mo
180.717 195.75 li
@
180.717 17.167 mo
180.717 20 li
@
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
173.8 210.75 mo
(0.7)
[5.56 2.78 0 ]xsh
213.717 198.667 mo
213.717 195.75 li
@
213.717 17.167 mo
213.717 20 li
@
%ADOBeginSubsetFont: TRVCAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QMYVMT+ArialMT gcheck setglobal} if
2 860 20 <000100df000002fb05c0000a00ecb30a0c0c0cb80140b456000c0c0cb801
40b4560a0e0b0bb80140b456000e0b0bb80140b4560a080d0db80140b456
00080d0db8014040215603400d11346b047f028f02990804ac0401090006
0502030905010c0201ca0a00b8ffc0400a21233430000120000100b8ffe0
b41010025500b8ffea40110f0f0255001c0c0c0255000e0d0d025500b8ff
f040190f0f065500100c0c065500100d0d0655001a0c05400d0f3405b8ff
c0400e212334300501200540050205190bba013c018500182b4e10e45d71
2b2b10f62b2b2b2b2b2b2b5d712b3c4dfd3c003f3f17390111393130015d
005d2b012b2b2b2b2b2b212311060607353636373302fbb441d35497e22f
74047b3e7c1fae47ca5f>QMYVMT+ArialMT AddT42Char 
QMYVMT+ArialMT /CharStrings get begin
/one 20 def
end
QMYVMT+ArialMT /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QMYVMT+ArialMT*1 
[46{/.notdef}rp /period /.notdef /zero /one 4{/.notdef}rp /six /seven 
/eight /nine 198{/.notdef}rp]
QMYVMT+ArialMT nf
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
204.05 210.75 mo
(0.71)
[5.55899 2.77901 5.55899 0 ]xsh
246.717 198.667 mo
246.717 195.75 li
@
246.717 17.167 mo
246.717 20 li
@
%ADOBeginSubsetFont: TRVCAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QMYVMT+ArialMT gcheck setglobal} if
2 1140 21 <0001003c0000040705c0001e01f7b10602435458400911100d1813130655
0db8fff4b4111106550db8ffee4009101006550d1e14051eb8ffe8401713
1306551e1e111106551e1c0e1006551e0c0d0d06551eb802bb400c020a17
17201f10110202201f1112392fd4cd1112392fcd002fed2b2b2b2b3fed2b
2b2bc43231301bb10202435458400911100d0c121202550db8fff440090f
1102550d1e14051eb8ffe0400b121302551e140f1102551eb802bbb2020a
17b8ffe8b40b0b025517b8ffec400e0d0d02551717201f10110202201f11
12392fd4cd1112392f2b2bcd002fed2b2b3fed2b2bc43231301b40473b05
3b06bb05bf06bb07c708c91c07490c590c540e6b0c640e7a127a138912bc
12e51ae51bf01a0cbf0bb713021e0a10080606ca1c1a141c1c1a081c1a03
0102081a1c030d1e10b802a4b34f110111b80118b50d1e1405001eb802bb
b301020c0a4110fff4000c000c01400056000afff2000b000b0140005600
0afff8000d000d0140400d560a7317d30000014021233401bb0281002000
100138400c11b53f025f026f027f020402ba0224001f018fb18b182b10f6
5df4ed10f62b3c10f4ed2b2b2b003f3cfd3c3fedfd5de411121739011112
1739870e2e2b0e7d10c4011112393130b00243b040505840091b101c101d
101e1006befff00007ffe00008fff00009fff00038383838013838383859
005d015d7259592515212637363637363635342623220607273636333216
15140606070606070407fc37021725a39aefa8997b829c01b913f8d1d3f6
48a7c2a25c1eadad413c63c07ec4e5666b939c8a13cfd9eaad58aabca488
6131>QMYVMT+ArialMT AddT42Char 
QMYVMT+ArialMT /CharStrings get begin
/two 21 def
end
QMYVMT+ArialMT /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QMYVMT+ArialMT*1 
[46{/.notdef}rp /period /.notdef /zero /one /two 3{/.notdef}rp /six 
/seven /eight /nine 198{/.notdef}rp]
QMYVMT+ArialMT nf
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
237.05 210.75 mo
(0.72)
[5.55899 2.77901 5.55899 0 ]xsh
279.717 198.667 mo
279.717 195.75 li
@
279.717 17.167 mo
279.717 20 li
@
%ADOBeginSubsetFont: TRVCAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QMYVMT+ArialMT gcheck setglobal} if
2 1742 22 <00010056ffe6041605c0002b01b2b10202435458400b1918400d0d025518
1c0001b8ffc0402b0c0d02550129230a0d0f0c0f1e0a0a29151e1c041e29
1c05290d230d0c181901001220100c0c0255200726b8ffe8b40c0d025526
2f2bcd2f2bcd2fcd2fcd2f0012393f3f10ed10ed12392fedc610c6123910
c42b3210c42b3231301b4030050d160d450d860d0445115711761b035216
6c106a146416750d7914860d8a14891ba50d0a0b0c0d0e040701230d0c01
b802a4b340000100bb01180029000d0135b40c0c150418ba02a400190268
4009151e1c05041e290d124110fff4000c000c014000560012fff2000b00
0b014000560012fff8000d000d014040115612735f206f200220180d0d06
552080074110fff4000c000c014000560007fff2000b000b014000560007
fff8000d000d014040115607732640212334302601002610260226b8fff4
b70d0d065526902d18b80138b219d301ba01380000ffc0400b2123342000
40000200902cb80192b18b182b10f65d2bedf4ed10f62b5d712bed2b2b2b
f42b5ded2b2b2b003fed3fedfde41112392fed10fd5de411123901111217
393130b00243b0405058b2052003b8ffe001383859015d005d0171591337
161633323635342623220737163332363534262322060727363633321616
15140607161615140023222656b41f956b7fafa27d334c14120b73b8866a
698c14b421eaae78ca6b66648290fee8d6c1ff0183189987b0827ca1149e
02787d6382848420b5c767b2645f9c2e1ebd8ec0fef5e600>QMYVMT+ArialMT AddT42Char 
QMYVMT+ArialMT /CharStrings get begin
/three 22 def
end
QMYVMT+ArialMT /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QMYVMT+ArialMT*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three 2{/.notdef}rp 
/six /seven /eight /nine 198{/.notdef}rp]
QMYVMT+ArialMT nf
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
270.05 210.75 mo
(0.73)
[5.55899 2.77899 5.55902 0 ]xsh
312.717 198.667 mo
312.717 195.75 li
@
312.717 17.167 mo
312.717 20 li
@
%ADOBeginSubsetFont: TRVCAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QMYVMT+ArialMT gcheck setglobal} if
2 2306 23 <0002001a0000041005ba000a000d01f3bc000cfffa000c000c0140b4560d
060c0cb80140b456050c0c0cb80140b456060c0c0cb80140b456090c0c0c
b80140b4560a0c0c0cb80140b456050e0b0bb80140b456060e0b0bb80140
b456090e0b0bb80140b4560a0e0b0bb80140b45607080c0cb80140b45608
080c0cb80140b45607080b0bb80140b45608080b0bb80140b45607080d0d
b80140b45608080d0db80140b45605080d0db80140b45606080d0db80140
b45609080d0db80140b4560a080d0db8014040375612580c680c9a0ca90c
c90c054c034c0d94040312010208000c060307050a0b0307000c0c0d0dca
030414030304030d00020c0d040703bb02bb0008000201a0400a00040400
0c0c00ca0a04b80266b705050a401d1f340ab8ffe0b4101002550ab8ffe6
b40d0d02550ab8ffeeb40d0d06550ab80137400d07402223340780213507
900f02b8ffc0400b0d14340002100220020302b8ffe0b40d0d025502b8ff
e4b60d0d065502b50eb8018cb18b182b10ec2b2b5d2b10f62b2bf42b2b2b
2b3c10e610fd3c003f3f10f43cf63c1139390111123939872e2b047d10c4
0f0f0f313001435c58b9000dffdeb212390db8ffd4400b333903222d3903
041d1d3c2b2b2b2b595d005d435c5840140c400b390c8050390c4026390c
221c390c402d392b2b2b2b2b59012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b002b21112135013311331523110311010296fd84029d93c6c6b4fe
35015fa503b6fc4aa5fea102040295fd6b00>QMYVMT+ArialMT AddT42Char 
QMYVMT+ArialMT /CharStrings get begin
/four 23 def
end
QMYVMT+ArialMT /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QMYVMT+ArialMT*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
/.notdef /six /seven /eight /nine 198{/.notdef}rp]
QMYVMT+ArialMT nf
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
303.05 210.75 mo
(0.74)
[5.55899 2.77899 5.55902 0 ]xsh
41.633 173.417 mo
44.466 173.417 li
@
332.466 173.417 mo
329.549 173.417 li
@
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
27.6333 177.083 mo
(10)
[5.558 0 ]xsh
41.633 145.583 mo
44.466 145.583 li
@
332.466 145.583 mo
329.549 145.583 li
@
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
19.3 149.25 mo
(10.2)
[5.559 5.559 2.779 0 ]xsh
41.633 117.833 mo
44.466 117.833 li
@
332.466 117.833 mo
329.549 117.833 li
@
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
19.3 121.5 mo
(10.4)
[5.559 5.559 2.779 0 ]xsh
41.633 90 mo
44.466 90 li
@
332.466 90 mo
329.549 90 li
@
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
19.3 93.6667 mo
(10.6)
[5.559 5.559 2.779 0 ]xsh
41.633 62.167 mo
44.466 62.167 li
@
332.466 62.167 mo
329.549 62.167 li
@
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
19.3 65.8333 mo
(10.8)
[5.559 5.559 2.779 0 ]xsh
41.633 34.333 mo
44.466 34.333 li
@
332.466 34.333 mo
329.549 34.333 li
@
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
27.6333 38 mo
(11)
[5.558 0 ]xsh
41.633 17.167 mo
332.466 17.167 li
@
41.633 198.667 mo
332.466 198.667 li
332.466 17.167 li
@
41.633 198.667 mo
41.633 17.167 li
@
gsave
41.633 198.75 mo
332.55 198.75 li
332.55 17.167 li
41.633 17.167 li
cp
clp
182.717 150.917 mo
182.717 149.667 li
185.05 149.667 li
184.05 148.417 li
187.634 148.417 li
188.967 149.667 li
190.634 149.667 li
191.3 150.917 li
188.967 152.167 li
189.634 153.417 li
187.967 153.417 li
186.05 154.667 li
186.634 155.917 li
187.3 155.917 li
187.967 157.167 li
186.967 157.167 li
189.634 157.167 li
187.3 157.167 li
187.634 157.167 li
189.634 155.917 li
189.634 154.667 li
191.634 154.667 li
191.3 154.667 li
193.3 155.917 li
193.967 155.917 li
194.217 157.167 li
192.3 158.417 li
193.634 159.667 li
191.967 160.917 li
196.217 160.917 li
195.884 160.917 li
198.217 160.917 li
199.55 162.167 li
199.55 160.917 li
199.884 160.917 li
199.55 160.917 li
199.55 162.167 li
200.217 162.167 li
199.55 162.167 li
201.55 163.417 li
201.217 163.417 li
201.884 164.667 li
203.467 164.667 li
202.8 164.667 li
202.467 163.417 li
201.884 163.417 li
204.134 163.417 li
200.55 163.417 li
200.884 164.667 li
201.217 164.667 li
200.55 165.917 li
199.884 165.917 li
203.8 165.917 li
204.467 164.667 li
205.467 165.917 li
208.134 165.917 li
208.8 167.167 li
210.717 167.167 li
212.384 168.417 li
214.05 168.417 li
212.717 168.417 li
213.05 168.417 li
212.717 168.417 li
214.384 167.167 li
211.384 167.167 li
211.717 167.167 li
213.05 168.417 li
212.717 168.417 li
216.717 169.667 li
217.717 170.917 li
218.3 170.917 li
212.384 170.917 li
219.967 170.917 li
217.717 170.917 li
220.634 170.917 li
221.634 172.167 li
221.967 173.417 li
223.3 173.417 li
225.967 174.667 li
224.634 174.667 li
225.634 175.917 li
223.3 175.917 li
223.634 175.917 li
223.967 174.667 li
224.634 174.667 li
222.3 174.667 li
223.3 174.667 li
222.634 174.667 li
223.967 174.667 li
223.634 174.667 li
229.217 174.667 li
228.217 175.917 li
230.217 175.917 li
226.55 175.917 li
228.55 175.917 li
227.884 175.917 li
227.884 174.667 li
225.967 173.417 li
224.634 173.417 li
229.55 173.417 li
227.55 172.167 li
228.884 172.167 li
223.3 172.167 li
224.3 170.917 li
222.3 170.917 li
219.967 169.667 li
223.634 169.667 li
224.967 170.917 li
226.884 170.917 li
228.55 172.167 li
229.55 172.167 li
226.884 172.167 li
227.217 172.167 li
218.3 172.167 li
219.634 172.167 li
218.967 170.917 li
219.3 170.917 li
218.3 170.917 li
217.384 169.667 li
214.717 169.667 li
217.384 168.417 li
214.384 168.417 li
214.717 167.167 li
216.05 167.167 li
214.05 167.167 li
213.717 168.417 li
214.717 168.417 li
212.384 168.417 li
212.717 168.417 li
212.384 169.667 li
212.717 169.667 li
211.717 169.667 li
215.384 169.667 li
213.384 169.667 li
216.05 169.667 li
211.384 169.667 li
211.717 168.417 li
211.05 168.417 li
212.717 168.417 li
212.384 168.417 li
214.05 168.417 li
215.384 169.667 li
215.05 169.667 li
215.717 169.667 li
216.05 168.417 li
220.634 168.417 li
219.3 168.417 li
220.634 168.417 li
221.3 169.667 li
229.217 169.667 li
228.217 169.667 li
228.884 168.417 li
230.55 168.417 li
229.217 167.167 li
230.884 167.167 li
231.217 165.917 li
231.884 165.917 li
230.884 165.917 li
231.884 164.667 li
231.217 164.667 li
233.217 164.667 li
235.467 163.417 li
237.134 163.417 li
236.8 163.417 li
255.967 163.417 li
257.634 164.667 li
258.884 164.667 li
258.884 165.917 li
258.217 165.917 li
263.884 165.917 li
262.217 165.917 li
268.134 165.917 li
267.134 164.667 li
265.8 164.667 li
269.467 164.667 li
267.467 164.667 li
269.467 164.667 li
269.134 164.667 li
269.467 164.667 li
267.134 163.417 li
271.8 163.417 li
273.467 162.167 li
277.05 162.167 li
277.384 160.917 li
273.134 160.917 li
274.717 162.167 li
272.8 162.167 li
273.467 162.167 li
269.8 162.167 li
271.8 162.167 li
270.467 162.167 li
275.717 162.167 li
276.717 160.917 li
275.717 159.667 li
277.384 159.667 li
277.05 158.417 li
279.384 158.417 li
279.384 157.167 li
277.717 157.167 li
285.967 157.167 li
285.3 157.167 li
288.3 157.167 li
283.634 157.167 li
286.967 157.167 li
289.3 155.917 li
287.967 155.917 li
289.3 154.667 li
288.967 154.667 li
292.884 154.667 li
288.967 154.667 li
292.217 154.667 li
291.884 154.667 li
295.884 153.417 li
306.05 153.417 li
312.384 152.167 li
332.55 152.167 li
.880034 .763699 .00323491 0 cmyk
@
grestore
262.217 64.5 mo
262.884 65.75 li
261.217 65.75 li
259.884 64.5 li
256.3 64.5 li
255.967 63.25 li
254.3 63.25 li
253.3 62 li
249.717 62 li
248.717 60.75 li
247.717 60.75 li
245.384 59.5 li
241.8 59.5 li
242.717 59.5 li
241.467 59.5 li
241.467 60.75 li
239.8 60.75 li
240.134 60.75 li
238.8 60.75 li
241.134 60.75 li
238.8 60.75 li
235.467 62 li
234.467 62 li
235.134 62 li
233.217 62 li
237.134 62 li
233.55 62 li
232.884 60.75 li
231.884 59.5 li
230.884 59.5 li
229.217 58.25 li
225.634 58.25 li
227.55 58.25 li
223.634 58.25 li
222.3 57 li
221.967 57 li
225.634 57 li
223.967 57 li
224.634 57 li
222.634 57 li
221.634 58.25 li
219.967 58.25 li
219.967 59.5 li
219.634 59.5 li
219.634 60.75 li
221.967 62 li
221.3 63.25 li
223.3 63.25 li
222.634 63.25 li
222.3 64.5 li
220.967 63.25 li
222.634 63.25 li
224.967 62 li
225.967 62 li
224.967 62 li
226.884 62 li
225.967 63.25 li
224.3 63.25 li
223.3 64.5 li
223.967 64.5 li
222.634 64.5 li
225.634 64.5 li
224.967 65.75 li
223.3 65.75 li
224.3 65.75 li
222.967 65.75 li
223.634 67 li
225.967 67 li
225.634 67 li
224.634 68.25 li
227.217 68.25 li
225.634 68.25 li
224.634 67 li
226.217 67 li
225.3 67 li
225.967 67 li
224.967 67 li
225.3 68.25 li
225.634 68.25 li
225.967 69.5 li
224.634 69.5 li
225.634 70.75 li
224.634 70.75 li
226.884 70.75 li
229.217 72 li
230.884 73.25 li
230.55 73.25 li
232.217 73.25 li
231.884 73.25 li
230.55 72 li
231.217 72 li
231.55 70.75 li
231.217 70.75 li
231.884 70.75 li
230.884 70.75 li
231.55 70.75 li
230.217 70.75 li
229.884 72 li
221.3 72 li
216.384 73.25 li
211.384 73.25 li
208.134 74.5 li
205.8 74.5 li
205.467 75.75 li
203.134 77 li
203.467 78.25 li
203.467 79.5 li
205.467 80.75 li
202.467 82 li
199.217 82 li
198.217 83.25 li
197.217 83.25 li
198.217 83.25 li
197.55 83.25 li
198.55 84.5 li
198.217 84.5 li
197.217 85.75 li
197.884 85.75 li
199.217 87 li
196.55 87 li
196.217 88.333 li
192.634 88.333 li
192.3 89.583 li
189.634 89.583 li
190.3 90.833 li
188.3 90.833 li
187.967 92.083 li
185.384 92.083 li
186.05 92.083 li
185.384 93.333 li
186.05 93.333 li
185.717 93.333 li
185.384 94.583 li
186.05 94.583 li
184.384 94.583 li
184.717 95.833 li
185.384 97.083 li
186.05 97.083 li
186.967 98.333 li
186.3 98.333 li
186.634 99.583 li
185.05 99.583 li
185.384 99.583 li
183.384 99.583 li
184.384 99.583 li
181.717 102.083 li
182.05 103.333 li
184.384 103.333 li
185.717 104.583 li
186.05 104.583 li
184.717 104.583 li
187.967 104.583 li
187.634 104.583 li
186.967 105.833 li
186.3 105.833 li
186.634 105.833 li
186.05 107.083 li
186.634 107.083 li
187.634 108.333 li
186.967 108.333 li
183.717 109.583 li
182.384 109.583 li
181.717 110.833 li
181.717 112.083 li
181.384 113.333 li
182.05 113.333 li
181.717 114.583 li
182.384 115.833 li
183.384 115.833 li
183.717 117.083 li
181.05 117.083 li
181.05 118.333 li
180.05 118.333 li
179.05 119.583 li
176.467 119.583 li
178.384 119.583 li
177.8 120.833 li
178.717 120.833 li
179.384 119.583 li
181.05 119.583 li
180.717 119.583 li
184.05 119.583 li
181.384 119.583 li
182.05 120.833 li
181.05 120.833 li
181.384 120.833 li
178.134 122.083 li
178.717 123.333 li
177.134 123.333 li
175.467 124.583 li
179.384 124.583 li
178.384 125.833 li
179.384 127.083 li
177.8 128.333 li
177.467 128.333 li
176.8 129.667 li
177.467 129.667 li
176.134 130.917 li
176.467 130.917 li
176.134 130.917 li
175.8 132.167 li
176.134 132.167 li
175.8 132.167 li
176.134 132.167 li
175.8 132.167 li
178.717 132.167 li
179.384 133.417 li
178.717 133.417 li
179.05 133.417 li
177.467 133.417 li
178.134 133.417 li
177.8 134.667 li
177.467 134.667 li
177.8 135.917 li
178.717 135.917 li
178.717 137.167 li
177.8 137.167 li
179.05 138.417 li
176.467 138.417 li
176.134 139.667 li
176.8 139.667 li
176.467 140.917 li
175.134 140.917 li
175.467 140.917 li
175.134 140.917 li
175.8 140.917 li
175.467 140.917 li
177.467 140.917 li
176.8 140.917 li
177.8 140.917 li
174.8 140.917 li
175.8 140.917 li
175.134 142.167 li
176.134 142.167 li
175.134 143.417 li
174.467 143.417 li
174.134 144.667 li
174.467 145.917 li
174.8 145.917 li
176.467 147.167 li
180.384 148.417 li
180.717 149.667 li
184.717 149.667 li
185.384 150.917 li
183.05 150.917 li
185.717 150.917 li
182.717 150.917 li
.880034 .763699 .00323491 0 cmyk
@
gsave
41.633 198.75 mo
332.55 198.75 li
332.55 17.167 li
41.633 17.167 li
cp
clp
41.633 65.75 mo
44.8 65.75 li
46.133 64.5 li
49.133 63.25 li
50.466 63.25 li
52.716 62 li
56.355 62 59.994 62 63.633 62 cv
64.966 62 li
65.633 60.75 li
69.216 60.75 li
69.883 59.5 li
81.466 59.5 li
84.716 58.25 li
85.716 58.25 li
84.716 58.25 li
91.3 58.25 li
92.3 59.5 li
95.966 58.25 li
96.966 58.25 li
96.633 58.25 li
98.883 57 li
101.216 55.75 li
102.55 55.75 li
103.216 54.5 li
104.55 54.5 li
107.133 53.25 li
108.466 53.25 li
112.133 52 li
117.05 52 li
117.383 50.75 li
116.383 50.75 li
119.05 50.75 li
122.05 49.5 li
126.3 49.5 li
126.966 48.25 li
129.633 48.25 li
129.633 47 li
132.883 47 li
132.216 47 li
142.466 47 li
142.133 47 li
146.133 47 li
147.716 45.75 li
149.05 44.5 li
149.716 44.5 li
149.383 43.25 li
156.966 43.25 li
156.3 43.25 li
158.966 43.25 li
162.161 43.25 165.355 43.25 168.55 43.25 cv
169.55 43.25 li
170.8 44.5 li
175.133 44.5 li
176.133 43.25 li
180.05 43.25 li
182.383 42 li
183.716 42 li
184.05 40.75 li
187.3 40.75 li
187.633 39.5 li
188.966 39.5 li
193.577 39.5 198.189 39.5 202.8 39.5 cv
205.133 38.25 li
204.133 38.25 li
211.383 38.25 li
211.05 38.25 li
212.383 36.917 li
216.05 36.917 li
217.383 35.667 li
225.633 35.667 li
225.3 35.667 li
224.633 36.917 li
227.883 36.917 li
226.883 36.917 li
230.55 38.25 li
233.55 38.25 li
234.466 39.5 li
243.05 39.5 li
240.466 39.5 li
249.383 39.5 li
251.3 40.75 li
254.3 40.75 li
254.3 42 li
258.55 42 li
258.216 42 li
257.883 43.25 li
260.55 43.25 li
260.216 43.25 li
261.216 43.25 li
259.216 43.25 li
260.55 44.5 li
259.55 44.5 li
260.883 44.5 li
260.883 45.75 li
261.883 45.75 li
260.55 47 li
260.55 48.25 li
262.55 49.5 li
264.216 50.75 li
264.55 52 li
265.216 52 li
264.55 53.25 li
265.55 53.25 li
265.216 54.5 li
264.216 54.5 li
262.216 55.75 li
263.55 55.75 li
262.883 57 li
263.216 58.25 li
262.883 58.25 li
261.216 59.5 li
259.883 60.75 li
259.216 62 li
259.883 62 li
261.216 63.25 li
260.55 63.25 li
260.883 63.25 li
260.883 64.5 li
262.216 64.5 li
@
grestore
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: TRVCAA+ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QMYVMT+ArialMT gcheck setglobal} if

2 0 3 <> QMYVMT+ArialMT AddT42Char 
2 168 18 <00010000ffe7023905d300030053b90003ffdeb2143902b8ffde40201439
97030102039f03af0302037600011400000102010003000a03e80002e801
b801a9b5000004b37a182b103c10f4ed10ed003f3c3f3c87052e2b5d7d10
c43130015d2b2b1501330101a990fe581905ecfa1400>QMYVMT+ArialMT AddT42Char 
2 5092 41 <000100a80000048505ba000900ac402206051e08088f070107070003041e
0201020008079c2002200b02021a0b0409020c0cb80140b456090e0b0bb8
0140b456090a0c0db80140400e5609200120000100201010025500b8fff6
b40f0f025500b8fff6b40d0d025500b8fffa400b0c0c0255000c0b0b0655
00b8fffeb40c0c065500b8fff0400a0d0d0655005d0a3b5c182b4e10f42b
2b2b2b2b2b2b5d3c4dfd2b2b2b3c4e10f65d4de4003f3f3cfd3c12392f5d
3c10fd3c313033112115211121152111a803ddfce502b0fd5005baadfe3a
adfd6600>QMYVMT+ArialMT AddT42Char 
2 5306 49 <0001009c0000051f05ba000901e2b303180c0cbe014000560008ffe8000c
000c0140b256120bb8ffc0400a13153408180c16025503b8ffe8b40c1602
5503b8fff4402311114255080c1111425508020303200708140707080207
0303080904020209070804034110fffb000c000c014000560003fff2000b
000b014000560003fffb000c000c0140b5560320060605b8ffecb40f0f02
5505b8fff2400b0d0d025505120c0c025505b8fff7401a0b0b0655055d20
0b01200b500b600b700b800b050b08090e0b0bb80140b456090a0c0cb801
40b45609200100b8ffc0400d13153420000100201010025500b8fff6b40f
0f025500b8fff6b40d0d025500b8fffa400b0c0c025500040b0b065500b8
fff7b40c0c065500b8fff8400a0d0d0655005d0a3b59182b10f62b2b2b2b
2b2b2b5d2b3cfd2b2b3c105d71f42b2b2b2b3c10fd2b2b2b3c003f3c3f3c
1239390111393987042e2b877dc4b10602435458b90003ffe0b70c113408
200c1134002b2b592b2b31302b2b012b435c58b40840463903b8ffc0b646
390840323903b8ffc0b632390722193902b8ffdeb619390722323902b8ff
deb632390722233902b8ffde400b2339070e1439070e133902b8fff4b613
39070e1d3902b8fff4b61d39070e153902b8fff8b115392b2b2b2b2b2b2b
012b2b2b2b2b2b002b2b2b2b59002b2b331133011133112301119cc70302
bac7fcfe05bafb81047ffa460480fb80>QMYVMT+ArialMT AddT42Char 
2 5832 51 <0002009e000004fd05ba000d00180107401e65116b14024b104b145b105b
14040b0c1e0f0e0e0017181e0201020008124110fffe000c000c01400056
0012fff2000b000b014000560012fff8000d000d0140b356122608bbfff6
000d000d0140400e56080a0d0d025508100b0b065508b8fff440120c0c06
55081a201a01201a011a180d020c0cb80140b4560d0e0b0bb80140b4560d
0a0c0db80140400e560d200120000100201010025500b8fff6b40f0f0255
00b8fff6b40d0d025500b8fffa400b0c0c0255000c0b0b065500b8fffab4
0c0c065500b8fff0400a0d0d0655005d193b5c182b10f62b2b2b2b2b2b2b
5d3cfd2b2b2b3c4e10715df62b2b2b2b4ded2b2b2b003f3f3cfd3c12392f
3cfd3c3130015d005d33112132171e021514022121111121323635342627
2623219e0229924d6c9259eefec9fe88017bbc9e5d4c3184fe8905ba0e12
65b66dbbfefdfdac03018c7f5c83150d>QMYVMT+ArialMT AddT42Char 
2 6178 68 <0002004affe8041c043e0028003702de402c090d092a190d1a2a290d2a2a
390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a169b1aa90d
1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619bb28c419
cf28d215dd28084416011eb8fff440110c0c065512120c0c0655050c0c0c
065535b8ffe0404f0c0c06551f171f182b2c2a343904392c4904482c5608
592b6608692b760c870cc90cf90df92b1137340e0104102f243417322114
185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e030ebbfffa
000b000b0140b7560e0c0f0f02550eb8ffeab4101002550eb8fff4401410
1006550e0c0d0d06550e060f0f06550e260d0db80140b4560e180c0cb801
40b5560e0e1c0317b802aab3182c0b0bb80140400e56182c0a0a42551895
141c1c0700b8fff440110c0c06550045270a321c030b29611061004110ff
f6000b000b014000560000fff8000c000c014000560000fffc000d000d01
40400b5600060d0d025500252124b8ffecb41010025524b8ffec400b0d0d
025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b065524b8ffdc
400b1010065524060f0f065524b8fffcb40c0c065524b8025b400e274000
26102620263026af260539b8ffc0b40e0e025526b8ffd6b40e0e025526bb
fff4000d000d0140b356263139b8ffc0400d1e23343039c03902a0390139
17b8fff4b71010065517080c0cb80140400956172518222f080d0db80140
b4562f0c0c0cb80140b4562f0e0b0bb801404011562f24bf06cf06021f06
3f060206140b0bb80140b45606140d0db80140b45606080c0cb80140402e
56060e0f0f0255060c0d0d025506180c0c0255060c0b0b0255060c0b0b06
55060e0d0d065506100c0c065506313810f62b2b2b2b2b2b2b2b2b2b5d71
ed2b2b2bf4ed2b2b105d712bf62b2b2b5dedf42b2b2b2b2b2b2b2b3cfd2b
2b2b2be5e5003fed3fe42b3fedfd2b2be41112392f2b2b2b2b2b2b2b2b5d
71ed711112391112393901111217393130005d2b2b2b2b01715d2b2b0071
250606232226353436363736373637363534272623220607273e02333216
161716151514161723260306070e02151416333236373635033c64b96aaf
bc477348356bda67013345887f791db0186ed08988aa5010091722bc1c17
62c46f5c326d6968a2261d835546ab854e814e140e0d1a24250a6e2d3d59
7118718b4b40614a2e78f0fb853d3801dd281c10284d2f48605b4f3d7700
>QMYVMT+ArialMT AddT42Char 
2 7078 69 <00020086ffe8041f05ba0010001d01e7407b01050c0f240535054505053f
1fb01f021f1f221c331c421c701f901f063a133c163c1a4c164c1a5d085d
0d580f5d165e1a6a086c0d680f6e166e1ac01fd90cda17da19e213ec17ec
19e31de01fff1f1920052f0f2f1430053f0f40054c0f50056605da1df504
fa100c10150e040602001b1c0607010a151c0e0b184110fff8000d000d01
4000560018fff4000c000c014000560018fff2000b000b01404022561824
d00b01100b400b600b800b041f400d0d02550b0c0f0f02550b180d0d0255
0bb8fff6b40c0c02550bb8fff0b40b0b06550bb8fff4b40f0f06550bb8ff
e0b40c0c06550bb8fff4400b0d0d06550b740111020d0db80140b4561108
0c0cb80140b656113300120b0bb80140b45600040d0db801404013560004
0c0c025500040d0d06550033030c0c0cb80140b45603080d0db801404019
5603250202c001019001a001b001f001041f013f014f010301b8fffeb410
10025501b8fffc401d0e0e0255010c0d0d025501100c0c025501120b0b02
55010c0b0b065501b8fff8b41010065501b8fffc40160f0f065501180c0c
065501140d0d065501191e4737182b4e10f42b2b2b2b2b2b2b2b2b2b5d71
723c4d10fd2b2bf42b2b2b2be42b2b10fd2b2b2b2b2b2b2b2b5d71ed2b2b
2b003fed3f3fed3f11391112393130005d015d7172007121231133113633
321e0215100023222703141716333236353426232206012da7b472b162af
7140fef2bdbc6b0234559176aca57576ac05bafdf58f4f8fca73feeffed6
9d0196bf558bcdcbd0c6cd00>QMYVMT+ArialMT AddT42Char 
2 7660 70 <00010050ffe803ed043e001a022fbc0017fff0000c000c0140b4560a080c
0cb80140b45609080c0cb80140b4560f080c0cb80140b45610080c0cb801
40b45611080c0cb901400056b1020243545840340e7f0f010f0b01400050
007000030004121c0b07181c040b010e1507080e0e0255070c0d0d025507
0c0c0c025507100b0b0255072f2b2b2b2bcdd4c6003fed3fed10c45d3210
c45d3231301b4047090c011f1c4313431753135317601360179b029b039a
0da410a41a0c080d190a6a0269036a05750c700d800da60cb509b60ab50c
0c160c860ce302030e225f0f6f0f7f0f030f01b802aa4026300040005000
600070009000a000e000f00009000f0f0b000004121c0b07181c040b1c0f
010f410afff4000c000c01400056000ffff2000b000b0140400f560f240e
080d0d06550e221b000100410afff4000c000c014000560000ffee000b00
0b0140400f5600240b2b1f010100010101400e2bb80140b45601400d0db8
0140b45601400c0cb80140b45601360b0bb8014040205601400b0b065501
401010065501480c0c0655011a0d0d065501491c15080d0db80140b45615
0c0c0cb80140b456150e0b0bb801404021561524cf07011f073f0702070e
0b0b0655070a1010065507120c0c0655070c0d0db80140b456070c0c0cb8
0140b65607311b34c4182b10f62b2b2b2b2b5d71ed2b2b2b10f62b2b2b2b
2b2b2b2b5d724b53234b515a58b90001ffc03859ed2b2b72f42bed2b2b72
003fed3fed12392f11392f105de4105de43130005d71015d7159012b2b2b
2b2b2b011706062322001134123633321617072626232206151416333236
033cb11defaedafef772e989addc1faf197f5a88aaa4846a8e018517b7cf
011d010aac010281afa11b6b6cc3d3d6c282>QMYVMT+ArialMT AddT42Char 
2 8308 71 <00020046ffe803df05ba0011001d01e5407c0a02040d250d340d440d0535
14351c5702540a5214531c6702640565096314601cc01fd405d513dd19e5
13e514ef17eb19e51de01fff1f161f1f2b1a3c163c1a4b1a701f901f072e
02240d2e163a02350d4b02450d4614491c570a560d670de506e716fa01f4
0e100115030e0b100f001b1c0b0711000a151c030b18410afff8000d000d
014000560018fff8000c000c0140b45618330100bbfff2000b000b0140b4
560025110f4110fff8000d000d01400056000ffff4000c000c0140005600
0ffff2000b000b01404024560f251010d011011011401160118011041f40
0b0b02551f400d0d025511121010025511b8fff440110f0f025511060e0e
025511180d0d025511b8fff2400b0b0b0655110e1010065511b8ffeeb40c
0c065511b8fff8b40d0d065511bbfff8000c000c0140b656117412080d0d
b80140b456120c0c0cb80140b456120e0b0bb80140b656122407100c0cb8
0140b45607100d0db80140403b56bf07cf07df07ff07041f073f074f0703
071e0b0b025507180c0c0255071e0d0d0255070c0b0b0655070c0d0d0655
071a0c0c065507191e3450182b4e10f42b2b2b2b2b2b5d712b2b4ded2b2b
2bfd2b2b2b2b2b2b2b2b2b2b2b5d713c10ed2b2b2b10fd2b3ce42b2b003f
ed3f3c3fed3f3c11391112393130005d01715d0071213506232226263534
123633321617113311011416333236353426232206033865c47fd5756ad4
8360962fb3fd20ac7576a5a87b78a1869e8cfba39f01038a5141020efa46
0212cccac1c6daccc400>QMYVMT+ArialMT AddT42Char 
2 8888 72 <0002004bffe8041e043e0015001d01bb40171f001c150255035d055d0955
0b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d0d06551d
1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c51125c19
521c61126d1a611c78067815f602f618100016010f0d1717501660167016
03161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b41010025501
b8ffc0400e101006551001010195131c040b174110fff0000c000c014000
560017fff2000b000b014000560017fff8000d000d0140b35617400db8ff
dcb40d0d02550db8ffeeb40d0d06550db8ffeab40c0c06550db8ffc04009
272a34b00d010d1a1fb8ffc0b32526341fb8ffc0b71e2334301f011f16bb
fffc000d000d0140b656163310080c0cb80140b456100e0b0bb80140b456
10080d0db8014040135610240740242a341f073f074f0703070c0c0cb801
40b456070c0d0db80140402b5607200b0b025507180c0c0255071c0d0d02
55070e0b0b0655071c0c0c065507160d0d065507191e3437182b4e10f42b
2b2b2b2b2b2b2b5d2b4dfd2b2b2be42b4e10712b2bf6712b2b2b2b4ded2b
2b2b003fedfd5d2b2be43fed12392f5d3cfd713c01111239391239313001
5d005d2b2b2b017172011706062322001110003332001114072116163332
360121262726232206035eba2ceeb9e9feef0114dcd5010e01fce80ab285
638cfdda02510c3856897ca9015617a3b4011f0103010c0128fedefef910
20afba680195864368a6>QMYVMT+ArialMT AddT42Char 
2 9438 73 <000100130000028005d300170136401e1409010f192f193019401970199b
0c9c0da90d081a0d280db019c0190419b8ffc0401f1a1f341d080d030c0f
1c0a0115022b1413040306000a9f140114ff130e0b0bb80140b756134004
170e0b0bb80140b45617080d0db80140b456170c0c0cb80140400b561725
0400030292010100b8ffc0b331383400b8ffc0402b1c1f3490000119400f
0f025519400d0e025500141010025500280f0f025500220e0e0255002c0d
0d025500b8fff2400b0c0c025500140b0b065500b8ffeab41010065500b8
ffe6b40f0f065500b8fffab70c0c065500a31819bc01ba002100f6010a00
182b2bf62b2b2b2b2b2b2b2b2b2b2b5d2b2b3c10f43c103ced2b2b2b10ed
2bed5d003f3f3c3c3cfd3c3fed3911393130437940141011060907060806
02061009121b0011060f1b012b012b2a8181012b715d0072331123353335
343736363332170726232206151533152311b29f9f131a83764c5c1b3832
5244cfcf039a8c716b344657129d0a4660628cfc6600>QMYVMT+ArialMT AddT42Char 
2 9820 74 <00020042fe5103ea043e001e002a01e740600b0b05142c0b25144c0b4514
06091d191d2c0b26142c23390b36144a0b46145607580b680bfa0af5150e
2e232c273e233e274c27902ca02c07362136293f2c460b46214529542154
29690763216329602c802cda27e821ee23ef271117160615b802b1b4281c
130701b802aa401020003000600070008000c000d0000700b8027d401005
1c1c0f0a45221c0c0a16153325330a4110fff2000b000b01400056000aff
f2000c000c01400056000afff8000d000d01404024560a251818d0170110
17401760178017042c400b0c02552c400d0d025517121010025517b8fff4
40110f0f025517060e0e025517160d0d025517b8ffea400b0b0b06551712
1010065517b8ffeeb40c0c065517b8fffcb40d0d065517410afffa000c00
0c014000560017fffa000d000d0140400c5617740f012500221f0e0b0bb8
0140b4561f080d0db80140b4561f0c0c0cb801404017561f24bf0fcf0fdf
0fff0f041f0f3f0f4f0f030f0c0c0cb80140b4560f100d0db80140402e56
0f200b0b02550f1a0c0c02550f220d0d02550f1c0b0b06550f0c0d0d0655
0f1a0c0c06550f192b2c74213450182b2b4ef42b2b2b2b2b2b2b2b5d714d
ed2b2b2bf4ed10fd2b2b2b2b2b2b2b2b2b2b2b2b5d713c10fd2b2b2be4f6
3c003fede43fedfd5de43fede43f3c3130015d71005d7117171617163332
363736270623220235341236333217353311140606232226131416333236
35342623220666af0b3243747d88180e0176b0dbf06ed18dbc7aa665dba0
beea99a67d7ca8ad7a78a8581a512532645a37b08b013cdd9801018c9880
fc6af8cf78ab032ad1c0bfccc3c6c300>QMYVMT+ArialMT AddT42Char 
2 10436 76 <000200880000013c05ba0003000701f2b3020a0b0bb80140b456030a0b0b
b80140b456060a0b0bb80140b456070a0b0b4119014000560001fffc000b
000b014000560000fffc000b000b014000560005fffc000b000b01400056
0004fffc000b000b0140b456020b0c0cb80140b456030b0c0cb80140b456
060b0c0cb80140b456070b0c0c4119014000560001fffd000c000c014000
560000fffd000c000c014000560005fffd000c000c014000560004fffd00
0c000c0140b45602040d0db80140b45603040d0db80140b45606040d0db8
0140b45607040d0d4119014000560001fffc000d000d014000560000fffc
000d000d014000560005fffc000d000d014000560004fffc000d000d0140
40375609360b0b02554f099009a009b009c009df09f0090700091f097009
80099f09b009c009df09e009ff090a1f0901000107040203090603bbffc0
000d000d0140402a56037e0100060506040a0607250500049f04a004b004
c004e00406c004f0040200042004d004e0040404b8fff8b41010025504b8
fffa40170e0e025504040c0c0255040a0b0b025504140b0b065504b8ffea
b41010065504b8fffeb40d0d065504b8fffc400a0c0c0655044e08475018
2b10f62b2b2b2b2b2b2b2b5d71723cfd3c003f3f3c3fed2b011112393911
1239393130015d72712b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b133533150311331188b4b4b404ebcfcffb150426fbda>QMYVMT+ArialMT AddT42Char 
2 10972 78 <00010088000003f805ba000b02efb3030e0b0b4113014000560009fff200
0b000b014000560008fff2000b000b014000560004fff2000b000b0140b4
56070c0c0cb80140b456060c0c0cb80140b456050c0c0cb80140401c5606
0c0d0d0655070656065a09030f0df305f60603090c1010025506b8fff4b4
0c0c02550ab8fff4b40c0c025509b8fff4b40c0c025503b8ffe840100d0d
06555503770a0212062013213408b8fff0b312273409b8fff0b412273412
05b8fff0b312213409b8fff0408412273406040405040637094704052506
2d0a580a7703750ada03e30607a60601230626072508390638093f0d4f0d
59045906580759097d0479059909c606d204d606e406e907f706f9081512
0a0a05030304020606070909080a0a050908082507061407070603040425
050a1405050a0a09060304080102000405060708080b0b000a04b8010f40
0905040c0c0655052208b8010f401520073f070207100c0c0655071a900d
010d0b0e0b0bb80140b4560b080d0db80140b4560b0c0c0cb80140b7560b
2500020e0b0bb80140b45602080d0db80140b456020c0c0cb80140400e56
022501019000013f004f000200b8fffe40310e0e025500100d0d02550010
0c0c0255000a0b0b025500120b0b065500120c0c065500080d0d06550019
0c0de1214766182b2b4ef42b2b2b2b2b2b2b5d713c4d10ed2b2b2b10ed2b
2b2b4e1071f62b5d4dedf42bed003f3c103c103c3f3c3f3c11173987052e
2b047d10c487052e182b0e7d10c40710083c083c0310083c083cb1060243
5458400d4b09011f0984030209180d1134002b5d7159313001435c58400a
092c1d3909081d1d3c06b8ffdeb21d3906b8ffd4b2203906b8ffd4b12139
2b2b2b2b2b595d00715d0171002b2b435c58b90006ffc0b2213903b8ffc0
b2163903b8ffdeb2103906b8ffdeb2103903b8ffdeb20c3903b8ffdeb10b
392b2b2b2b2b2b59012b2b2b435c584012dd040108141639090814143c09
0814143c06b8fff6b2183906b8ffecb11b392b2b2b2b2b015d59005d2b2b
2b2b2b015d712b2b2b2b2b2b002b2b33113311013301012301071188b401
aae9fe6a01bfdefea17f05bafcbc01b0fe76fd64021f7afe5b00>QMYVMT+ArialMT AddT42Char 
2 11778 80 <0001008700000626043e0023033d41920013fff2000b000b014000560010
fff2000b000b014000560012fff2000b000b014000560011fff2000b000b
01400056001dfffc000d000d01400056001cfffc000d000d01400056001b
fffc000d000d01400056001afffc000d000d01400056001dfffc000c000c
01400056001cfffc000c000c01400056001bfffc000c000c01400056001a
fffc000c000c01400056000cfffe000c000c01400056000dfffe000c000c
01400056000efffe000c000c01400056000ffffe000c000c014000560013
fff2000c000c014000560010fff2000c000c014000560012fff2000c000c
014000560011fff2000c000c014000560013fff8000d000d014000560010
fff8000d000d014000560012fff8000d000d014000560011fff8000d000d
01400056000dfff4b40d0d065508b8fff4b40d0d065509b8ffd8404d0b0d
342504e404e409e117e52005d505f620021708202309181b20090303231e
1c06151c0b0b06070106231a19100ad025019025a025022517171a0e2590
110111041010025511180f0f025511b8ffec400b0e0e025511140c0c0255
11b8ffe840170b0b025511020b0b0655110c1010065511060f0f065511b8
fffab40c0c065511b8fff8b40d0d065511b8015db318080c0cb80140b456
180e0b0bb80140b45618040d0db80140400d561825901b011b180f0f0255
1bb8ffec400b0e0e02551b140c0c02551bb8ffee40110b0b02551b040b0b
06551b0a101006551bb8fffe400b0d0d06551b0c0f0f06551bb8fffcb40c
0c06551bb8015db6000233230e0b0bb80140b45623080d0db80140b45623
0c0c0cb80140401456232501d000019000a000021f003f004f000300b8ff
fe401d0e0e025500100d0d025500100c0c0255000c0b0b025500160b0b06
5500b8fffcb41010065500b8fff440140f0f0655000a0c0c0655000e0d0d
065500192425b80178b3214750182b2b4ef42b2b2b2b2b2b2b2b2b5d7172
3c4dfd2b2b2be410f42b2b2b2b2b2b2b2b2b5ded2b2b2bf42b2b2b2b2b2b
2b2b2b2b5dfd4e456544e67172003f3c3c3c3f3f3c4d10ed10ed11173901
111239123931304379400e0c141326140c111b01120d151b01002b012b2b
81015d005d2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b331133153636333216173633321615112311342626232206151123
11342623220606151187a132a66a76971f7eca9eaab3235c3e7094b45864
4c813a0426954e5f6258baafb6fd27029d6c5f3a95a4fd9702b27878509a
91fdd900>QMYVMT+ArialMT AddT42Char 
2 12712 81 <00010087000003e6043e001601c440130503061302a810b810e303e713f0
03f6130604b8fff040220b0d347910019810d018e018ff18042008140e14
16121c05070106160d0a0d0e0c0e4110fff8000d000d01400056000efff2
000b000b01400056000efff4000c000c0140401c560e2418401010025518
400b0b02550b28101002550b140e0e02550bb8ffec40110d0d02550b040c
0c02550b220b0b02550bb8fff4400b0b0b06550b14101006550bb8fff940
0b0d0d06550b0a0f0f06550bb8fff640120c0c06550b40333634ff0b01ff
0b010b4e18b8ffc0401a343634b018f018027018a018b018c01804180302
331516080d0db80140b456160e0b0bb80140b456160c0c0cb80140b45616
250100b8fff6b41111025500b8fffab41010025500b8fffa40170e0e0255
00040c0c0255000a0b0b025500040b0b065500b8fffa40110f0f06550002
0c0c065500040d0d065500b8ffc04012333634f0000100002000d000e000
04004e1710f65d712b2b2b2b2b2b2b2b2b2b3cfd2b2b2b3cf43c105d712b
f65d712b2b2b2b2b2b2b2b2b2b2b2b2bed2b2b2b3c103c003f3c3f3fed11
390112393130437940160611090a080a070a0306102611060e1b010f0a12
1b01002b012b2b2a81015d71002b5d713311331536333216161716151123
11342626232206151187a275dd60a150100ab42a6b4873a7042697af4570
4d327dfd7302866e6d4192ccfdbc>QMYVMT+ArialMT AddT42Char 
2 13236 82 <00020044ffe80427043e000d001901deb615180d0d065513b8ffe8b40d0d
06550fb8ffe840650d0d065519180d0d065512070a190c47064808560659
08670669080834103a123a16351845104b124b1645185c055c0952105d12
5d1652186d056d0964106d126d1664187701150906050d5b035405540a5b
0c6c036505650a6c0c0a171c0407111c0b0b144110fff2000b000b014000
560014fff4000c000c014000560014fff8000d000d014040105614241b40
0d0d02551b400b0b025507b8ffea40110f0f025507180d0d025507100b0b
025507b8fff0b40b0b065507b8fff0b40d0d065507b8fff0b40f0f065507
b8fff0b40c0c065507b8ffc0400e2425343007010007100720070307bbff
f4000d000d0140b6560731df1b011bb8ffc0400b1e2334301b011b0e080d
0db80140b4560e0c0c0cb80140b4560e0e0b0bb801404041560e24000c0e
0f025500120d0d0255000c0c0c0255001c0b0b0255000e0b0b0655000e0d
0d0655000c1010065500160c0c065500402425341f003f0002000c0d0db8
0140b456000c0c0cb80140b456000c0b0bb80140b65600311a3437182b10
f62b2b2b5d2b2b2b2b2b2b2b2b2bed2b2b2b10712b5df62b5d5d2b2b2b2b
2b2b2b2b2b2bed2b2b2b003fed3fed313001715d0071435c584009530553
096205620904015d59002b2b2b2b13103736333200151406062322001314
1633323635342623220644a489c5db01167beb8bdffeedb9b28786b2b385
87b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca00>QMYVMT+ArialMT AddT42Char 
2 13802 83 <00020087fe690421043e0012001e01aa40740c102d103d104b10043f20b0
20021f20290c231d3215321d421d70209020083a173a1b4a174a1b59085b
0c5c175c1b6a086b0c69106d176b1bc020d314dd18dd1ad31ee414e41ee0
20ff201623042b102b1535043a1046044a105a10e50beb1dfe100b110e03
161c1c06070106161c0e0b000e194110fff2000b000b014000560019fff4
000c000c014000560019fff8000d000d0140401c561924d00a01100a400a
600a800a0420400b0b025520400d0d02550ab8ffe6400b0f0f02550a180d
0d02550ab8fffab40c0c02550ab8ffeeb40b0b06550ab8fff4b40f0f0655
0ab8ffe8400f0c0c06550a74011333023312080d0db80140b456120e0b0b
b80140b456120c0c0cb8014040195612250000c001019001a001b001f001
041f013f014f010301b8fffc401d0e0e025501100d0d025501100c0c0255
01100b0b0255010c0b0b065501b8fff6b41010065501b8fffc40160f0f06
55010c0c0c065501120d0d065501191f473718012b4e10f42b2b2b2b2b2b
2b2b2b5d71723c4d10fd2b2b2bf4e410fd2b2b2b2b2b2b2b2b5d71ed2b2b
2b003f3fed3f3fed113912393130005d015d717200711311331536363332
161615140206232226271103141633323635342623220687a43a926888d0
6a75df7b5a8f2e11a67678aba77473b1fe6905bd8a51518cff98a3fefb8b
4c3afdfb03a4cdc4cbd5cbcad700>QMYVMT+ArialMT AddT42Char 
2 14326 85 <00010085000002c6043e001100e7403b2f13011004012304340443045304
66047404060911080908090d1311090d000308010b1c06070106000a0928
9008010822201301130222110e0b0bb80140b45611080d0db80140b45611
0c0c0cb80140b45611250100b8ffc04010333634f0000100002000d000e0
000400b8fff8b41010025500b8fff840110e0e025500040c0c025500060b
0b025500b8fffcb41010065500b8fff440160f0f065500060c0c06550008
0d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfd2b2b2be4
105df472e4003f3f3fed11393911393901111239390010c9870e7dc43130
005d72015d33113315363633321707262322060706151185a23e693f5b5e
3e42423b5e141e0426a171483aa727473f6072fdd400>QMYVMT+ArialMT AddT42Char 
2 14618 86 <0001003fffe803b1043e003003e6b3170e0b0bb80140b456180e0b0bb801
40b456190e0b0b4137014000560028fff4000c000c014000560027fff400
0c000c014000560026fff4000c000c014000560025fff4000c000c014000
560024fff4000c000c014000560023fff4000c000c014000560022fff400
0c000c014000560021fff4000c000c014000560020fff4000c000c014040
7c56042214223a094a094424562265227c098e098424a613ab2cc2030d09
171a1817304b2cd617051b025502021032010a185c085c095c0a5c0b5c0c
5c0d6a086a096a0a6a0b6a0c6a0db426b4270f27262427242936245a0a59
0b64266428742374248024930a9c0c9228972c9530a40aa90ca327a428b3
26c5261628b8fff4b40d0d065522b8fff4b40d0d065523b8fff4b40d0d06
5524b8fff4b40d0d065528b8fff4b40c0c065522b8fff4b40c0c065523b8
fff4b40c0c065524b8fff4b40c0c06551db8ffde40121e395a0827250c0a
041a202615040b2e1d1ab802aa4022192c0b0b02551f193f194f195f19af
19cf19060f191f196f19df19041f198f190219bd02550015000002aa0001
ffc040140b0b025510014001021001d00102000110010201b8ffc0b31416
3401b8ffc040100e113401012e5c1d6c1d021d1c150704b8fff4b40b0b02
5504b8ffe6b41010065504b8ffe640130f0f0655041c2e0b1f1a011a2419
4013183432b8ffc040320f0f025519180f0f025519180d0d025519160c0c
025519201010065519200f0f065519100c0c065519160d0d065519160c0c
4109014000560019025b0007fff2000b000b0140b35607242ab8ffc0b51c
39d02a012ab8ffe6b40c0c02552ab8ffe8b40f0f02552ab8ffe8b40c0c06
552ab8ffeab40d0d06552abbfff4000c000c0140b3562a1a32b8ffc04021
272a346032c032023f3280320232100101012400180d0d025500100d0d06
550020b8fff4b40d0d025520b8fff4b41010065520b8fff4b70f0f065520
0e0b0bb8014040165620240f100b0b02550f160c0c02550f200d0d02550f
b8fffa40140f0f02550f0e0c0c06550f0c0d0d06550f060c0cb801404011
560f22df00013f004f00020019313437182b4e10f45d714df42b2b2b2b2b
2b2bed2b2b2b2b102b2bed724e105d712bf62b2b2b2b2b712b4ded2bf42b
2b2b2b2b2b2b2b2b2bed72003fed2b2b2b3fed7112392f2b2b5d71722be4
10fd5d71722be41112391112390111121739313043794040272d1e230514
2c261110121013100306220d201b000928071b01052d071b011e14201b00
210e231b0022230d0c08290a1b012827090a062b041b001f101d1b01002b
2b103c103c2b103c103c2b012b2b2b2b2a2b818181002b2b2b2b2b2b2b2b
2b5d71015d72715d002b2b2b2b2b2b2b2b2b012b2b2b1337161633323635
342726272e02353436373636333216161707262623220615141716171617
1e02151406062322263fb20f897b7c78352593c6994f41382a91537dbd5a
11b00c73697c6a16162f1b84bf975669c67dcfd9013d1c6b7265443d2318
253249814e4779281f2b487b6718525c5237231c1d130a2433417c5c5a9f
57ac>QMYVMT+ArialMT AddT42Char 
2 15760 88 <00010083ffe803e0042600180196b9001affc0400915173402201316340f
b8fff040191214342b1301240813160c0113160b06000a111c030b003316
4110fff8000d000d014000560016fff2000b000b014000560016fff4000c
000c0140401c5616251817403336341a401010025517281010025517120e
0e025517b8ffec400b0d0d025517040c0c025517b8fff4400b0b0b065517
141010065517b8fff8400b0d0d0655170c0f0f065517b8fff6400d0c0c06
55ff1701c01701174e1ab8ffc04016343634b01af01a02701aa01ab01aff
1a041a0c080d0db80140b4560c0e0b0bb80140b4560c0c0c0cb80140b356
0c2509b8ffc04010333634f0090100092009d009e0090409b8fff8b41010
025509b8fff840110e0e025509040c0c0255090a0b0b065509b8fff64016
0f0f065509020c0c065509020d0d0655094e194750182b10f62b2b2b2b2b
2b2b5d712bed2b2b2b105d712bf65d712b2b2b2b2b2b2b2b2b2b2b3cfd2b
2b2be4003fed3f3f3c39390111123931304379401a04100e0d0f0d020607
0806080508030610040c1b000d08111b00002b012b2a2a81005d012b2b2b
21350623222626272635113311141716163332363635113311033f7cd55e
a34f100bb40b116e51518e3bb49cb4486d4f35730292fdb38d314751538f
880239fbda00>QMYVMT+ArialMT AddT42Char 
QMYVMT+ArialMT /CharStrings get begin
/space 3 def
/slash 18 def
/F 41 def
/N 49 def
/P 51 def
/a 68 def
/b 69 def
/c 70 def
/d 71 def
/e 72 def
/f 73 def
/g 74 def
/i 76 def
/k 78 def
/m 80 def
/n 81 def
/o 82 def
/p 83 def
/r 85 def
/s 86 def
/u 88 def
end
QMYVMT+ArialMT /Encoding get
dup 32 /space put
dup 47 /slash put
dup 70 /F put
dup 78 /N put
dup 80 /P put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QMYVMT+ArialMT*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period /slash /zero /one /two 
/three /four /.notdef /six /seven /eight /nine 12{/.notdef}rp 
/F 7{/.notdef}rp /N /.notdef /P 16{/.notdef}rp /a /b 
/c /d /e /f /g /.notdef /i /.notdef 
/k /.notdef /m /n /o /p /.notdef /r 
/s /.notdef /u 138{/.notdef}rp]
QMYVMT+ArialMT nf
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
87.7167 9.25 mo
(compression force )
[4.999 5.559 8.32893 5.55899 3.32893 5.559 4.999 4.99901 2.21899 5.55899 5.55899 2.78201 
2.77899 5.55899 3.32892 4.99901 5.55901 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+ArialMT Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin
18 dict begin
/CIDFontName /HIBBAA+ArialMT def
/PaintType 0 def
/FontType 42 def
/CIDFontType 2 def
/GDBytes 2 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontMatrix [1 0 0 1 0 0] def
/FontBBox [-5.316 -2.598 16.367 8.316] def
/CIDCount 3988 def
/CDevProc {pop pop pop pop pop 0 -1 7 index 2 div .88}bind def
/CharStrings 1 dict dup begin /.notdef 0 def end def
/Encoding 1 array dup 0 /.notdef put readonly def
/CIDMap [
<0000000100020003000400050006000700080009000a000b000c000d000e
000f0010001100120013001400150016001700180019001a001b001c001d
001e001f0020002100220023002400250026002700280029002a002b002c
002d002e002f0030003100320033003400350036003700380039003a003b
003c003d003e003f0040004100420043004400450046004700480049004a
004b004c004d004e004f0050005100520053005400550056005700580059
005a005b005c005d005e005f006000610062006300640065006600670068
0069006a006b006c006d006e006f00700071007200730074007500760077
00780079007a007b007c007d007e007f0080008100820083008400850086
008700880089008a008b008c008d008e008f009000910092009300940095
0096009700980099009a009b009c009d009e009f00a000a100a200a300a4
00a500a600a700a800a900aa00ab00ac00ad00ae00af00b000b100b200b3
00b400b500b600b700b800b900ba00bb00bc00bd00be00bf00c000c100c2
00c300c400c500c600c700c800c900ca00cb00cc00cd00ce00cf00d000d1
00d200d300d400d500d600d700d800d900da00db00dc00dd00de00df00e0
00e100e200e300e400e500e600e700e800e900ea00eb00ec00ed00ee00ef
00f000f100f200f300f400f500f600f700f800f900fa00fb00fc00fd00fe
00ff0100010101020103010401050106010701080109010a010b010c010d
010e010f0110011101120113011401150116011701180119011a011b011c
011d011e011f0120012101220123012401250126012701280129012a012b
012c012d012e012f0130013101320133013401350136013701380139013a
013b013c013d013e013f0140014101420143014401450146014701480149
014a014b014c014d014e014f015001510152015301540155015601570158
0159015a015b015c015d015e015f01600161016201630164016501660167
01680169016a016b016c016d016e016f0170017101720173017401750176
017701780179017a017b017c017d017e017f018001810182018301840185
0186018701880189018a018b018c018d018e018f01900191019201930194
01950196019701980199019a019b019c019d019e019f01a001a101a201a3
01a401a501a601a701a801a901aa01ab01ac01ad01ae01af01b001b101b2
01b301b401b501b601b701b801b901ba01bb01bc01bd01be01bf01c001c1
01c201c301c401c501c601c701c801c901ca01cb01cc01cd01ce01cf01d0
01d101d201d301d401d501d601d701d801d901da01db01dc01dd01de01df
01e001e101e201e301e401e501e601e701e801e901ea01eb01ec01ed01ee
01ef01f001f101f201f301f401f501f601f701f801f901fa01fb01fc01fd
01fe01ff0200020102020203020402050206020702080209020a020b020c
020d020e020f0210021102120213021402150216021702180219021a021b
021c021d021e021f0220022102220223022402250226022702280229022a
022b022c022d022e022f0230023102320233023402350236023702380239
023a023b023c023d023e023f024002410242024302440245024602470248
0249024a024b024c024d024e024f02500251025202530254025502560257
02580259025a025b025c025d025e025f0260026102620263026402650266
026702680269026a026b026c026d026e026f027002710272027302740275
0276027702780279027a027b027c027d027e027f02800281028202830284
02850286028702880289028a028b028c028d028e028f0290029102920293
029402950296029702980299029a029b029c029d029e029f02a002a102a2
02a302a402a502a602a702a802a902aa02ab02ac02ad02ae02af02b002b1
02b202b302b402b502b602b702b802b902ba02bb02bc02bd02be02bf02c0
02c102c202c302c402c502c602c702c802c902ca02cb02cc02cd02ce02cf
02d002d102d202d302d402d502d602d702d802d902da02db02dc02dd02de
02df02e002e102e202e302e402e502e602e702e802e902ea02eb02ec02ed
02ee02ef02f002f102f202f302f402f502f602f702f802f902fa02fb02fc
02fd02fe02ff0300030103020303030403050306030703080309030a030b
030c030d030e030f0310031103120313031403150316031703180319031a
031b031c031d031e031f0320032103220323032403250326032703280329
032a032b032c032d032e032f033003310332033303340335033603370338
0339033a033b033c033d033e033f03400341034203430344034503460347
03480349034a034b034c034d034e034f0350035103520353035403550356
035703580359035a035b035c035d035e035f036003610362036303640365
0366036703680369036a036b036c036d036e036f03700371037203730374
03750376037703780379037a037b037c037d037e037f0380038103820383
038403850386038703880389038a038b038c038d038e038f039003910392
0393039403950396039703980399039a039b039c039d039e039f03a003a1
03a203a303a403a503a603a703a803a903aa03ab03ac03ad03ae03af03b0
03b103b203b303b403b503b603b703b803b903ba03bb03bc03bd03be03bf
03c003c103c203c303c403c503c603c703c803c903ca03cb03cc03cd03ce
03cf03d003d103d203d303d403d503d603d703d803d903da03db03dc03dd
03de03df03e003e103e203e303e403e503e603e703e803e903ea03eb03ec
03ed03ee03ef03f003f103f203f303f403f503f603f703f803f903fa03fb
03fc03fd03fe03ff0400040104020403040404050406040704080409040a
040b040c040d040e040f0410041104120413041404150416041704180419
041a041b041c041d041e041f042004210422042304240425042604270428
0429042a042b042c042d042e042f04300431043204330434043504360437
04380439043a043b043c043d043e043f0440044104420443044404450446
044704480449044a044b044c044d044e044f045004510452045304540455
0456045704580459045a045b045c045d045e045f04600461046204630464
04650466046704680469046a046b046c046d046e046f0470047104720473
047404750476047704780479047a047b047c047d047e047f048004810482
0483048404850486048704880489048a048b048c048d048e048f04900491
04920493049404950496049704980499049a049b049c049d049e049f04a0
04a104a204a304a404a504a604a704a804a904aa04ab04ac04ad04ae04af
04b004b104b204b304b404b504b604b704b804b904ba04bb04bc04bd04be
04bf04c004c104c204c304c404c504c604c704c804c904ca04cb04cc04cd
04ce04cf04d004d104d204d304d404d504d604d704d804d904da04db04dc
04dd04de04df04e004e104e204e304e404e504e604e704e804e904ea04eb
04ec04ed04ee04ef04f004f104f204f304f404f504f604f704f804f904fa
04fb04fc04fd04fe04ff0500050105020503050405050506050705080509
050a050b050c050d050e050f051005110512051305140515051605170518
0519051a051b051c051d051e051f05200521052205230524052505260527
05280529052a052b052c052d052e052f0530053105320533053405350536
053705380539053a053b053c053d053e053f054005410542054305440545
0546054705480549054a054b054c054d054e054f05500551055205530554
05550556055705580559055a055b055c055d055e055f0560056105620563
056405650566056705680569056a056b056c056d056e056f057005710572
0573057405750576057705780579057a057b057c057d057e057f05800581
05820583058405850586058705880589058a058b058c058d058e058f0590
059105920593059405950596059705980599059a059b059c059d059e059f
05a005a105a205a305a405a505a605a705a805a905aa05ab05ac05ad05ae
05af05b005b105b205b305b405b505b605b705b805b905ba05bb05bc05bd
05be05bf05c005c105c205c305c405c505c605c705c805c905ca05cb05cc
05cd05ce05cf05d005d105d205d305d405d505d605d705d805d905da05db
05dc05dd05de05df05e005e105e205e305e405e505e605e705e805e905ea
05eb05ec05ed05ee05ef05f005f105f205f305f405f505f605f705f805f9
05fa05fb05fc05fd05fe05ff060006010602060306040605060606070608
0609060a060b060c060d060e060f06100611061206130614061506160617
06180619061a061b061c061d061e061f0620062106220623062406250626
062706280629062a062b062c062d062e062f063006310632063306340635
0636063706380639063a063b063c063d063e063f06400641064206430644
06450646064706480649064a064b064c064d064e064f0650065106520653
065406550656065706580659065a065b065c065d065e065f066006610662
0663066406650666066706680669066a066b066c066d066e066f06700671
06720673067406750676067706780679067a067b067c067d067e067f0680
068106820683068406850686068706880689068a068b068c068d068e068f
0690069106920693069406950696069706980699069a069b069c069d069e
069f06a006a106a206a306a406a506a606a706a806a906aa06ab06ac06ad
06ae06af06b006b106b206b306b406b506b606b706b806b906ba06bb06bc
06bd06be06bf06c006c106c206c306c406c506c606c706c806c906ca06cb
06cc06cd06ce06cf06d006d106d206d306d406d506d606d706d806d906da
06db06dc06dd06de06df06e006e106e206e306e406e506e606e706e806e9
06ea06eb06ec06ed06ee06ef06f006f106f206f306f406f506f606f706f8
06f906fa06fb06fc06fd06fe06ff07000701070207030704070507060707
07080709070a070b070c070d070e070f0710071107120713071407150716
071707180719071a071b071c071d071e071f072007210722072307240725
0726072707280729072a072b072c072d072e072f07300731073207330734
07350736073707380739073a073b073c073d073e073f0740074107420743
074407450746074707480749074a074b074c074d074e074f075007510752
0753075407550756075707580759075a075b075c075d075e075f07600761
07620763076407650766076707680769076a076b076c076d076e076f0770
077107720773077407750776077707780779077a077b077c077d077e077f
0780078107820783078407850786078707880789078a078b078c078d078e
078f0790079107920793079407950796079707980799079a079b079c079d
079e079f07a007a107a207a307a407a507a607a707a807a907aa07ab07ac
07ad07ae07af07b007b107b207b307b407b507b607b707b807b907ba07bb
07bc07bd07be07bf07c007c107c207c307c407c507c607c707c807c907ca
07cb07cc07cd07ce07cf07d007d107d207d307d407d507d607d707d807d9
07da07db07dc07dd07de07df07e007e107e207e307e407e507e607e707e8
07e907ea07eb07ec07ed07ee07ef07f007f107f207f307f407f507f607f7
07f807f907fa07fb07fc07fd07fe07ff0800080108020803080408050806
080708080809080a080b080c080d080e080f081008110812081308140815
0816081708180819081a081b081c081d081e081f08200821082208230824
08250826082708280829082a082b082c082d082e082f0830083108320833
083408350836083708380839083a083b083c083d083e083f084008410842
0843084408450846084708480849084a084b084c084d084e084f08500851
08520853085408550856085708580859085a085b085c085d085e085f0860
086108620863086408650866086708680869086a086b086c086d086e086f
0870087108720873087408750876087708780879087a087b087c087d087e
087f0880088108820883088408850886088708880889088a088b088c088d
088e088f0890089108920893089408950896089708980899089a089b089c
089d089e089f08a008a108a208a308a408a508a608a708a808a908aa08ab
08ac08ad08ae08af08b008b108b208b308b408b508b608b708b808b908ba
08bb08bc08bd08be08bf08c008c108c208c308c408c508c608c708c808c9
08ca08cb08cc08cd08ce08cf08d008d108d208d308d408d508d608d708d8
08d908da08db08dc08dd08de08df08e008e108e208e308e408e508e608e7
08e808e908ea08eb08ec08ed08ee08ef08f008f108f208f308f408f508f6
08f708f808f908fa08fb08fc08fd08fe08ff090009010902090309040905
0906090709080909090a090b090c090d090e090f09100911091209130914
09150916091709180919091a091b091c091d091e091f0920092109220923
092409250926092709280929092a092b092c092d092e092f093009310932
0933093409350936093709380939093a093b093c093d093e093f09400941
09420943094409450946094709480949094a094b094c094d094e094f0950
095109520953095409550956095709580959095a095b095c095d095e095f
0960096109620963096409650966096709680969096a096b096c096d096e
096f0970097109720973097409750976097709780979097a097b097c097d
097e097f0980098109820983098409850986098709880989098a098b098c
098d098e098f0990099109920993099409950996099709980999099a099b
099c099d099e099f09a009a109a209a309a409a509a609a709a809a909aa
09ab09ac09ad09ae09af09b009b109b209b309b409b509b609b709b809b9
09ba09bb09bc09bd09be09bf09c009c109c209c309c409c509c609c709c8
09c909ca09cb09cc09cd09ce09cf09d009d109d209d309d409d509d609d7
09d809d909da09db09dc09dd09de09df09e009e109e209e309e409e509e6
09e709e809e909ea09eb09ec09ed09ee09ef09f009f109f209f309f409f5
09f609f709f809f909fa09fb09fc09fd09fe09ff0a000a010a020a030a04
0a050a060a070a080a090a0a0a0b0a0c0a0d0a0e0a0f0a100a110a120a13
0a140a150a160a170a180a190a1a0a1b0a1c0a1d0a1e0a1f0a200a210a22
0a230a240a250a260a270a280a290a2a0a2b0a2c0a2d0a2e0a2f0a300a31
0a320a330a340a350a360a370a380a390a3a0a3b0a3c0a3d0a3e0a3f0a40
0a410a420a430a440a450a460a470a480a490a4a0a4b0a4c0a4d0a4e0a4f
0a500a510a520a530a540a550a560a570a580a590a5a0a5b0a5c0a5d0a5e
0a5f0a600a610a620a630a640a650a660a670a680a690a6a0a6b0a6c0a6d
0a6e0a6f0a700a710a720a730a740a750a760a770a780a790a7a0a7b0a7c
0a7d0a7e0a7f0a800a810a820a830a840a850a860a870a880a890a8a0a8b
0a8c0a8d0a8e0a8f0a900a910a920a930a940a950a960a970a980a990a9a
0a9b0a9c0a9d0a9e0a9f0aa00aa10aa20aa30aa40aa50aa60aa70aa80aa9
0aaa0aab0aac0aad0aae0aaf0ab00ab10ab20ab30ab40ab50ab60ab70ab8
0ab90aba0abb0abc0abd0abe0abf0ac00ac10ac20ac30ac40ac50ac60ac7
0ac80ac90aca0acb0acc0acd0ace0acf0ad00ad10ad20ad30ad40ad50ad6
0ad70ad80ad90ada0adb0adc0add0ade0adf0ae00ae10ae20ae30ae40ae5
0ae60ae70ae80ae90aea0aeb0aec0aed0aee0aef0af00af10af20af30af4
0af50af60af70af80af90afa0afb0afc0afd0afe0aff0b000b010b020b03
0b040b050b060b070b080b090b0a0b0b0b0c0b0d0b0e0b0f0b100b110b12
0b130b140b150b160b170b180b190b1a0b1b0b1c0b1d0b1e0b1f0b200b21
0b220b230b240b250b260b270b280b290b2a0b2b0b2c0b2d0b2e0b2f0b30
0b310b320b330b340b350b360b370b380b390b3a0b3b0b3c0b3d0b3e0b3f
0b400b410b420b430b440b450b460b470b480b490b4a0b4b0b4c0b4d0b4e
0b4f0b500b510b520b530b540b550b560b570b580b590b5a0b5b0b5c0b5d
0b5e0b5f0b600b610b620b630b640b650b660b670b680b690b6a0b6b0b6c
0b6d0b6e0b6f0b700b710b720b730b740b750b760b770b780b790b7a0b7b
0b7c0b7d0b7e0b7f0b800b810b820b830b840b850b860b870b880b890b8a
0b8b0b8c0b8d0b8e0b8f0b900b910b920b930b940b950b960b970b980b99
0b9a0b9b0b9c0b9d0b9e0b9f0ba00ba10ba20ba30ba40ba50ba60ba70ba8
0ba90baa0bab0bac0bad0bae0baf0bb00bb10bb20bb30bb40bb50bb60bb7
0bb80bb90bba0bbb0bbc0bbd0bbe0bbf0bc00bc10bc20bc30bc40bc50bc6
0bc70bc80bc90bca0bcb0bcc0bcd0bce0bcf0bd00bd10bd20bd30bd40bd5
0bd60bd70bd80bd90bda0bdb0bdc0bdd0bde0bdf0be00be10be20be30be4
0be50be60be70be80be90bea0beb0bec0bed0bee0bef0bf00bf10bf20bf3
0bf40bf50bf60bf70bf80bf90bfa0bfb0bfc0bfd0bfe0bff0c000c010c02
0c030c040c050c060c070c080c090c0a0c0b0c0c0c0d0c0e0c0f0c100c11
0c120c130c140c150c160c170c180c190c1a0c1b0c1c0c1d0c1e0c1f0c20
0c210c220c230c240c250c260c270c280c290c2a0c2b0c2c0c2d0c2e0c2f
0c300c310c320c330c340c350c360c370c380c390c3a0c3b0c3c0c3d0c3e
0c3f0c400c410c420c430c440c450c460c470c480c490c4a0c4b0c4c0c4d
0c4e0c4f0c500c510c520c530c540c550c560c570c580c590c5a0c5b0c5c
0c5d0c5e0c5f0c600c610c620c630c640c650c660c670c680c690c6a0c6b
0c6c0c6d0c6e0c6f0c700c710c720c730c740c750c760c770c780c790c7a
0c7b0c7c0c7d0c7e0c7f0c800c810c820c830c840c850c860c870c880c89
0c8a0c8b0c8c0c8d0c8e0c8f0c900c910c920c930c940c950c960c970c98
0c990c9a0c9b0c9c0c9d0c9e0c9f0ca00ca10ca20ca30ca40ca50ca60ca7
0ca80ca90caa0cab0cac0cad0cae0caf0cb00cb10cb20cb30cb40cb50cb6
0cb70cb80cb90cba0cbb0cbc0cbd0cbe0cbf0cc00cc10cc20cc30cc40cc5
0cc60cc70cc80cc90cca0ccb0ccc0ccd0cce0ccf0cd00cd10cd20cd30cd4
0cd50cd60cd70cd80cd90cda0cdb0cdc0cdd0cde0cdf0ce00ce10ce20ce3
0ce40ce50ce60ce70ce80ce90cea0ceb0cec0ced0cee0cef0cf00cf10cf2
0cf30cf40cf50cf60cf70cf80cf90cfa0cfb0cfc0cfd0cfe0cff0d000d01
0d020d030d040d050d060d070d080d090d0a0d0b0d0c0d0d0d0e0d0f0d10
0d110d120d130d140d150d160d170d180d190d1a0d1b0d1c0d1d0d1e0d1f
0d200d210d220d230d240d250d260d270d280d290d2a0d2b0d2c0d2d0d2e
0d2f0d300d310d320d330d340d350d360d370d380d390d3a0d3b0d3c0d3d
0d3e0d3f0d400d410d420d430d440d450d460d470d480d490d4a0d4b0d4c
0d4d0d4e0d4f0d500d510d520d530d540d550d560d570d580d590d5a0d5b
0d5c0d5d0d5e0d5f0d600d610d620d630d640d650d660d670d680d690d6a
0d6b0d6c0d6d0d6e0d6f0d700d710d720d730d740d750d760d770d780d79
0d7a0d7b0d7c0d7d0d7e0d7f0d800d810d820d830d840d850d860d870d88
0d890d8a0d8b0d8c0d8d0d8e0d8f0d900d910d920d930d940d950d960d97
0d980d990d9a0d9b0d9c0d9d0d9e0d9f0da00da10da20da30da40da50da6
0da70da80da90daa0dab0dac0dad0dae0daf0db00db10db20db30db40db5
0db60db70db80db90dba0dbb0dbc0dbd0dbe0dbf0dc00dc10dc20dc30dc4
0dc50dc60dc70dc80dc90dca0dcb0dcc0dcd0dce0dcf0dd00dd10dd20dd3
0dd40dd50dd60dd70dd80dd90dda0ddb0ddc0ddd0dde0ddf0de00de10de2
0de30de40de50de60de70de80de90dea0deb0dec0ded0dee0def0df00df1
0df20df30df40df50df60df70df80df90dfa0dfb0dfc0dfd0dfe0dff0e00
0e010e020e030e040e050e060e070e080e090e0a0e0b0e0c0e0d0e0e0e0f
0e100e110e120e130e140e150e160e170e180e190e1a0e1b0e1c0e1d0e1e
0e1f0e200e210e220e230e240e250e260e270e280e290e2a0e2b0e2c0e2d
0e2e0e2f0e300e310e320e330e340e350e360e370e380e390e3a0e3b0e3c
0e3d0e3e0e3f0e400e410e420e430e440e450e460e470e480e490e4a0e4b
0e4c0e4d0e4e0e4f0e500e510e520e530e540e550e560e570e580e590e5a
0e5b0e5c0e5d0e5e0e5f0e600e610e620e630e640e650e660e670e680e69
0e6a0e6b0e6c0e6d0e6e0e6f0e700e710e720e730e740e750e760e770e78
0e790e7a0e7b0e7c0e7d0e7e0e7f0e800e810e820e830e840e850e860e87
0e880e890e8a0e8b0e8c0e8d0e8e0e8f0e900e910e920e930e940e950e96
0e970e980e990e9a0e9b0e9c0e9d0e9e0e9f0ea00ea10ea20ea30ea40ea5
0ea60ea70ea80ea90eaa0eab0eac0ead0eae0eaf0eb00eb10eb20eb30eb4
0eb50eb60eb70eb80eb90eba0ebb0ebc0ebd0ebe0ebf0ec00ec10ec20ec3
0ec40ec50ec60ec70ec80ec90eca0ecb0ecc0ecd0ece0ecf0ed00ed10ed2
0ed30ed40ed50ed60ed70ed80ed90eda0edb0edc0edd0ede0edf0ee00ee1
0ee20ee30ee40ee50ee60ee70ee80ee90eea0eeb0eec0eed0eee0eef0ef0
0ef10ef20ef30ef40ef50ef60ef70ef80ef90efa0efb0efc0efd0efe0eff
0f000f010f020f030f040f050f060f070f080f090f0a0f0b0f0c0f0d0f0e
0f0f0f100f110f120f130f140f150f160f170f180f190f1a0f1b0f1c0f1d
0f1e0f1f0f200f210f220f230f240f250f260f270f280f290f2a0f2b0f2c
0f2d0f2e0f2f0f300f310f320f330f340f350f360f370f380f390f3a0f3b
0f3c0f3d0f3e0f3f0f400f410f420f430f440f450f460f470f480f490f4a
0f4b0f4c0f4d0f4e0f4f0f500f510f520f530f540f550f560f570f580f59
0f5a0f5b0f5c0f5d0f5e0f5f0f600f610f620f630f640f650f660f670f68
0f690f6a0f6b0f6c0f6d0f6e0f6f0f700f710f720f730f740f750f760f77
0f780f790f7a0f7b0f7c0f7d0f7e0f7f0f800f810f820f830f840f850f86
0f870f880f890f8a0f8b0f8c0f8d0f8e0f8f0f900f910f920f93>]def
/sfnts
[<00010000000a000a000a000a4f532f3210325d83000000ac000000606376
7420aa86dc6e0000010c0000065a6670676dc9bcda0500000768000007c1
68656164e1d9c23d00000f2c0000003668686561129117b500000f640000
0024686d7478c7e38a2800000f8800003e506d6178701502099e00004dd8
000000206e616d65f403f81600004df800000356707265708d21ed410000
515000000be7676469720000000000000000000000000003038801900005
0008059a05330000011b059a0533000003d1006602120805020b06040202
02020204e0002affc00078430000000900000000544d432000400020fffc
05d3fe510133073e01b2400001ffffff0000042605bb00000020001405ba
001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69ffe8
05ba0019fe69ffe802ea000000b8000000b80000000000a800ad016900ad
00bf00c201f0001800af00b900b400c800170044009c007c009400870006
005a00c80089005200520005004400940119ffb4002f00a1000300a100cd
00170057007e00ba00160118ffe9007f008503d300870085000d00220041
0050006f008d014cff75005c00df04830037004c006e00700180ff58ff8e
ff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc002d
005c0095009900df019209b500400057008000b9039d0072009a035d0401
ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e70118
017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba013501470221
055cff4dffcd0016002d00780080009900b200b600b600b800bd00da010c
05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f00000005
0018002900390049006f00be00c700d0012301c1026f050c05320540057a
ffd4001400310055005700a700b400e601f7027e027e027f03c60446ff42
000e0085009100bf00c200c500e1011a012f014f01560229026f029e0372
0008002c00310031006400690089009800c700de012b01b6020c02cf03a3
04ab04fb061dfee0ff0e00060026009b009d00c1010d0118012001730182
01d601e30243025f029b02e2039404a904d20761001c005e006d008d00ab
00f7011201380151015b0168017c01870191019901cd01d001e802410254
026b02ef0368037103bd044204420453047304830586058b06e8fe58fec4
fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d900d9
00df00e20105010b010e010e012001210155017b017b017e018d01a201a8
01a901b401d001d001e201e901f201f501fb020002000206021b02210222
02220223027202770294029c02cf02cf02d002ec02f903170322032b0335
033c0359036f037103870390039003b503e1041a04cf04ff053205320596
059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88fe96
feb2feb4ffe100150019001a001c001f003c005100610061006a00780096
00a500af00d3010c0118011a012a013e014c0151015f016a017101780182
0184019a01a501a801a901ae01bc01cd01d701ef0200020d021c02210222
022e02350242024f024f025e026502710290029202b402d602fa0307030b
030f0315032a0347035d036503740379039603b003cc03dd03e203f603fc
03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c05cb
05e5060a066d068606b806f10736073e07500751075d078f07b607d40860
00b600c300b500b700000000000000000000000001e00381034503b5008e
0233041902ce02ce002d005f0064034d023f000002a80188027d01b40224
0578063b023b014e00f00426029402c6029f02f6023b034d014b0153006a
0231000000000000061404aa0000003c04c300ed04bc026502ce03b50078
060c017e02ef060c00b201000239000001c50330042b03cb00da03df0107
04a100db040a011701ed02a70350010b01bd043e05580021039c00ae0371
017d00b5024500000afb088c012b014e01aa00870054013201f803ff0003
024e00b4003703e30083006b02d800ed00770088009701640467008e0033
017c00e700a6029e0329056e062a061501c90269048a021301b4000204a9
000002390124010305140084015d039a06ef02d9007500cf040a00de03ac
04bc02cf02ae034d04f005520168006d007d00860071ff810079055804d2
016700030156002504e00094007c033204210094007f0072005c002f00b6
001800ba00b80041034d00720018001f004c016a01550099009a009a0098
00b200040078006900140057006e00ce00b4065402b80067050e016500e7
000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b800a8
00e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d028a
02d90253029600b700000000000000000000000000000125011800ea00ea
00ae0000003e05bb008a04d70053003fff8cffd500150028002200990062
004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df0051
ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d200b6
007b00650252ff740365fe690094008f005c004000860075008900890471
048304f900004046585756555441403f3e3d3c3b3a393837353433323130
2f2e2d2c2b2a292827262524232221201f1e1d1c1b1a1918171615141312
11100f0e0d0c0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b090
51582320b00d44235921212d2c20204518684420b001602045b04676688a
4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b01723
70b101173e01b0172370b10217453ab10200080d2d2c45b01a234445b019
23442d2c2045b00325456164b050515845441b2121592d2cb00143632362
b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c20
69b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0036159
2d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb01243
588745b0112bb0172344b0177ae41b038a45186920b01723448a8a8720b0
a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2cb00225
46608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b003
2545b019234445b01a23444565234520b00325606a20b009234223688a6a
606120b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b
235961441cb114008a5279b31940201945208a54582321b03f1b23596144
2d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb1
0c0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b
525845441b2121592d2c0120b003252349b04060b0206320b000525823b0
02253823b002256538008a63381b212121212159012d2c4bb06451584569
b00943608a103a1b212121592d2c01b005251023208af500b0016023edec
2d2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d
2c20b001600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a
2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b8022323701020
b802234520b0005058b00161593a2f182d2c21210c6423648bb84000622d
2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c0
51580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb840
00626023212d2cb4000100000015b00826b00826b00826b008260f101613
45683ab001162d2cb4000100000015b00826b00826b00826b008260f1016
134568653ab001162d2c4b53234b515a5820458a60441b2121592d2c4b54
5820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b545838
1b2121592d2cb0134358031b02592d2cb0134358021b03592d2c4b54b012
435c5a58381b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b01060482046b0106048590a21211b21
21592d2cb012435c580cb00425b00425060c6423646164b807085158b004
25b00425012046b8fff060482046b8fff06048590a21211b2121592d2c4b
53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121592d
2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426024b
545a8a8a0ab012435c5a58381b2121592d2c4b5258b00425b0042549b004
25b00425496120b0005458212043b0005558b00325b00325b8ffc038b8ff
c038591bb04054582043b0005458b00225b8ffc038591b2043b0005458b0
0325b00325b8ffc038b8ffc0381bb00325b8ffc03859595959212121212d
2c462346608a8a462320468a608a61b8ff8062232010238ab902c202c28a
70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb102
0042b123018851b1400188535a58b910000020885458b202010243604259
b12401885158b920000040885458b2020202436042b12401885458b20220
02436042004b014b5258b2020802436042591bb940000080885458b20204
0243604259b94000008063b80100885458b202080243604259b940000100
63b80200885458b202100243604259b12601885158b94000020063b80400
885458b202400243604259b94000040063b80800885458b2028002436042
59b12801885158b94000080063b81000885458ba00020100000243604259
5959595959592d2cb0024354584b53234b515a58381b2121591b21212121
592d2cb0572b580c028a4b53b004264b515a580a381b0a2121591b212121
21592d2c20b0024354b00123b05f237821b1000243b056237921b0024323
b020205c58212121b100471c598a8a208a208a23b81000635658b8100063
5658212121b1012c1c591b2159b08062205c58212121b1001b1c5923b080
62205c58212121b1000c1c598ab00161b8ffb31c23212d2c20b0024354b0
0123b07b237821b1000243b072237921b10002438ab020205c58212121b0
631c598a8a208a208a23b81000635658b81000635658b00426b0015bb004
26b00426b004261b21212121b13600231c591b2159b0042623b08062205c
588a5c8a5a23212321b01d1c598ab08062205c5821212321b00e1c59b004
26b00161b8ff981c23212d000000000100000006cf5c52a575655f0f3cf5
081b080000000000a2e3272a00000000ccb58100faaffd67105e08510000
0009000100010000000000010000073efe4e00431000faaff9d2105e0001
00000000000000000000000000000f940600010000000000023900000239
0000023900b002d7005e0473001504730049071d0077055600580187005a
02aa007c02aa007c031d004004ac0072023900aa02aa0041023900ba0239
000004730055047300df0473003c047300560473001a047300550473004d
047300610473005304730055023900b9023900aa04ac007004ac007204ac
00700473005a081f006f0556fffd0556009605c7006605c7009e055600a2
04e300a80639006d05c700a4023900bf04000037055600960473009606aa
009805c7009c063900630556009e0639005805c700a10556005c04e30030
05c700a105560009078d0019055600090556000604e300290239008b0239
00000239002703c100360473ffe102aa00590473004a0473008604000050
047300460473004b02390013047300420473008701c7008801c7ffa20400
008801c7008306aa00870473008704730044047300870473004802aa0085
0400003f02390024047300830400001a05c700060400000f040000210400
002802ac0039021400bc02ac002f04ac00570556fffd0556fffd05c70068
055600a205c7009c0639006305c700a10473004a0473004a0473004a0473
004a0473004a0473004a040000500473004b0473004b0473004b0473004b
023900bd023900230239ffe5023900090473008704730044047300440473
004404730044047300440473008304730083047300830473008304730049
033300800473006b0473001b0473005102cd006d044c000104e3009905e5
000305e50003080000e102aa00de02aa003d0464004e0800000106390053
05b4009a0464004e0464004d0464004d0473fffd049c00a003f4003805b4
007a069600a1046400000231000002f6002f02ec002d0625007f071d0044
04e3008104e3009e02aa00e804ac0072046400540473002e0464003304e5
001a047300860473008c080000ef0556fffd0556fffd0639006308000081
078d00520473fffc0800000002aa005302aa004701c7008001c7006c0464
004e03f4002f04000021055600060156fe390473ffe402aa005c02aa005c
040000170400001704730049023900b901c7006c02aa0047080000250556
fffd055600a20556fffd055600a2055600a20239008d0239ffe002390004
0239001506390063063900630639006305c700a105c700a105c700a10239
00c602aa001902aa000602aa001d02aa002e02aa00e502aa00a202aa006b
02aa003a02aa004b02aa00280473000001c700030556005c0400003f04e3
002904000028021400bc05c7fffd0473004905560006040000210556009e
0473008704ac007204ac00a102aa006b02aa001902aa002106ac006b06ac
006b06ac0021047300000639006d04730042023900b10556005c0400003f
05c700660400005005c700660400005004730046046bffe102aa00ee0556
fffd0473004a0556fffd0473004a05c7009e04eb004705c7fffd055600a2
0473004b055600a20473004b0473009601c7004204730096025500880473
009602ac008305c7009c0473008705c7009c047300870639006304730044
05c700a102aa008505c700a102aa003c0556005c0400003f04e300300239
002404e300300300002305c700a10473008305c700a10473008304e30029
0400002804e3002904000028046800a4063900600662005504a000480474
00480391006204f000440329002e05300048046bffe1040000b002eb0052
08c000330800004f040000990800004f040000990800004f040000980400
009807d5016a05c0009e04ab007204d5009d04ac007104d5022204d50105
05abffe9050001c905ab027e05abffe905ab027e05abffe905ab027e05ab
ffe905abffe905abffe905abffe905abffe905ab01c005ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905ab02d6
05ab006605abffea05d5ffff04d500920800000007eb013007eb012007eb
013007eb012004d500b204d5008004d5002a082b0198086b01b807550010
060000f40600006f0440003a0540003704c0003f04150040040000250600
005505e100bf038d008904d5ffd90180008002d50086071500610296000f
04d5009202d6008302d6008304d500b202d600700556fffd0473004a05c7
00660400005005c7006604000050055600a20473004b055600a20473004b
055600a20473004b0639006d047300420639006d047300420639006d0473
004205c700a40473008705c7001f047300060239ffce0239ffce0239ffe4
0239ffe40239fff60239fff50239004b01c700190400003701c7ffa20556
009604000088040000860473009601c7fffa05c7009c0473008705c900a5
0473008b0639006304730044063900630473004405c700a102aa006b0556
005c0400003f04e300300239000c05c700a10473008305c700a104730083
05c700a10473008305c700a104730083078d001905c70006055600060400
002101c700890556fffd0473004a08000001071d00440639005304e30081
023900b9078d001905c70006078d001905c70006078d001905c700060556
00060400002101c7008a02aaffe10473001b04cd005a06ac006b06ac0022
06ac002206ac004a02aa00e202aa006b02aa00de02aaffea0557ffff0646
ffa706b4ffa80312ffa80632ffa706d8ffa70605ffa701c7ff780556fffd
055600960558fffe055600a204e3002905c700a4023900bf055600960558
000b06aa009805c7009c0533006d0639006305c700a40556009e04f20094
04e30030055600060556000906af007f05fb0061023900040556000604a0
0048039100620473008b01c7006b04600088049a008c0400001903870048
0473008b0473005c01c700890400008604000018049c00a00400001a0395
005c04730044048d008303db0056046000880433001105b4007a063f0057
01c7ffc9046000880473004804600088063f0057055700a206eb00320455
00a105c000640556005c023900bf02390004040000370875000d081500a4
06d5003104a900a10515000a05c000a00556fffd054000a7055600960455
00a1056b0000055600a20763000704d5004e05c000a105c000a104a900a1
0540001206aa009805c700a40639006305c000a00556009e05c7006604e3
00300515000a061500520556000905eb009f05550057075500a1078000a1
06550000071500a8054000a505c00055081500a405c7001a0473004a0495
005b0440008802eb008804ab00000473004b055afffb03ab003204780087
047800870380008604ab00180580008c046b008804730044045500880473
00870400005003aa0026040000210695004b0400000f0495008a042b0045
066b008d0695008d0500002805c0008b042b008404150030060000890455
001f0473004b0473000002eb00890415004b0400003f01c7008802390009
01c7ffa20740001306800083047300000380008604000021046b008803e9
00a1034a008808000041089500a00585002d000001010000001e00000031
00000031000001010000007e0000007e0000008c0000008c000001010000
001000000101000001210310007d0000008c023300d20000030b0000ff04
023900b90481006904560032033100190411002d04d1009601f9009b030f
005f04ca009b04b8008c01f9009b0413002803b0005003b4003c04ca009b
04cf005001f9009b02d2003c0498005a043c00190488006e045f007303b1
001903d4000a0466009604130028058e00640524002803f2009b03f2009b
03f2009b01e3005a0356005a0686009b01f9ffac041300280413002803b4
ff5703b4ff570448002d058e0064058e0064058e0064058e006404810069
048100690481006904560032033100190411002d04d10096024b0000034a
000004b8008c024b00000413002803b0005003b4003c04cf005002d2003c
0498005a0488006e045f007303d4000a0466009604130028058e00640524
002801f9009b0456003203b00050045f0073049b003c0000ffdc0000ff25
0000ffdc0000fe51028d00ab028d00a002da0043034d007901a8ffba0000
004600000046000000460000004600000048000000460000004600000046
0435017c0435012e043500b7043500810435012c043500be043500af0435
00810435009a043500db04350085028d00c1043500b30600010006000100
02420036060001000435009e04350098043500cb06000100060001000600
010006000100060001000000004606000100060001000600010006000100
06000100060001000600010006000100051bffba06000100060001000600
010005b5003a05b5003a01f4ffba01f4ffba060001000600010006000100
060001000481003604350036043dffba043dffba03e9004a03e9004a067f
0014077600140327ffba041effba067f0014077600140327ffba041effba
051b003204b500240300fff7060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100000000300000004600000046000000400000
004606000100060001000000ffdc0000fe510000ff160000ff160000ff16
0000ff160000ff160000ff160000ff160000ff160000ff160000ffdc0000
ff160000ffdc0000ff200000ffdc0473004a080000000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100060001000600010006000100028d007f028d005d0600010004ee0015
034d007901a8001301d6ffd701a8005601d60010037500320375003201a8
002d01d60013051b003204b5002401f4ffba01f4ffba01a8009301d60013
05b5003a05b5003a01f4ffba01f4ffba024200000300fff705b5003a05b5
003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3005f02b3005f02b3005f02b3005f
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba04a7
ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba045a002a039a0036
0435ffba0327ffba045a002a039a00360435ffba0327ffba064f0027064f
00270224ffba021affba04a7004604a700460224ffba021affba04cf002d
04cf002d0327ffba0327ffba040d0047040d004701a8ffba01a8ffba02b4
002302b400230327ffba0327ffba043500450435004501f4ffba01f4ffba
024200360300fff7039affba0327ffba0375003203750032051b003204b5
0024051b003204b5002401f4ffba01f4ffba045a003104ce0041045a0026
04ce0039045a005304ce004a045a005304ce004a06000100060001000000
004600000046060001000600010006000100000000460000004606000100
060001000000004800000046060001000600010006000100000000460000
004600000046000000460000004000000030060001000000004600000046
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100028d00ca028d00c7028d00c6060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100060001000100ffba0800
ffba1000ffba06dc0063053f004406d500a1055b00830000fddc0000fc2f
0000fca60000fe540000fcd70000fd730000fe290000fe0d0000fd110000
fc670000fd9d0000fbf50000fc720000fed50000fed50000ff02041b00a0
06ac006b06ac00190000feb60000fd730000fe080000fca60000fe530000
fd110000fbc80000faf40000faaf0000fc720000fbaa0000fb6a0000fcf1
0000fc7d0000fbdd0000fcc10000fb980000fdea0000fe840000fdc20000
fcf10000fd5f0000fe760000febc0000fceb0000fd6c0000fd580000fc90
0000fd150000fc2c0000fc130000fc120000fb960000fb9601c700880556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd
0473004a055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b055600a20473004b
055600a20473004b0239006301c7001f023900ba01c7007c063900630473
004406390063047300440639006304730044063900630473004406390063
047300440639006304730044063900630473004406dc0063053f004406dc
0063053f004406dc0063053f004406dc0063053f004406dc0063053f0044
05c700a10473008305c700a10473008306d500a1055b008306d500a1055b
008306d500a1055b008306d500a1055b008306d500a1055b008305560006
04000021055600060400002105560006040000210556fffd0473004a0239
ffe201c7ffb0063900630473004405c700a10473008305c700a104730083
05c700a10473008305c700a10473008305c700a1047300830000fefe0000
fefe0000fefe0000fefe0455fffd02eb000c07630007055afffb04a900a1
0380008604a900a10380008605c700a4046b00880473fffd040000140473
fffd04000014055600090400000f05550057042b0045055500a104730087
0605006304730055063900600473004405b5003a01f4ffba0224ffba021a
ffba04a7004601f4009e01f4001001f4001b01f4001001f4006b01f4fff9
0227ffce0000000f0000fff502aa00a402aa00a400000013000000560000
00560000ffcf01a8000f01d6ffbf01a8fff501d6ffcd01a8001d01d6fff5
01a8009301d6001303750032037500320375003203750032051b003204b5
002405b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba0481003604350036043dffba043dffba
02b3003202b3003202b3005f02b3005f02b3005f02b3005f02b3003202b3
003202b3005f02b3005f02b3005f02b3005f02b3005f02b3005f02b30038
02b3003802b3004902b3004903e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba0692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5
ffba06c5ffba04a7ffba04a7ffba045a002a039a00360435ffba0327ffba
064f0027064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba064f0027064f00270224ffba021affba04a7004604a7
004604a7004604a70046093e0032093e00320740ffba0740ffba067f0014
077600140327ffba041effba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba067f0014077600140327ffba041effba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba040d0047040d004701a8ffba01a8ffba043500450435
004501f4ffba01f4ffba0435004504350045043500450435004504350045
0435004501f4ffba01f4ffba04350045043500450481003604350036043d
ffba043dffba024200360300fff7031a001a031a001a031a001a03750032
037500320375003203750032037500320375003203750032037500320375
003203750032037500320375003203750032037500320375003203750032
051bffba04b5ffba051b003204b5002401f4ffba01f4ffba037500320375
0032051b003204b5002401f4ffba01f4ffba051b003204b50024067f0045
067f0045067f0045067f004501a800280000fe290000fea20000ff300000
ff1d0000ff120000ff920000fe7e08fc003208ad00320000ffb50000ffb6
0000feed0000ff640000fe7e0000ff9f018d000002f6fffd0000fe820000
ff1004cd00320000ff580000ff580000ff640692003e0692003e043fffba
043fffba08c9003e08c9003e06c5ffba06c5ffba045a002a039a00360435
ffba0327ffba034d007902b400230242003601f4ffba0290ffba01f4002f
01f4003b01f4001201f400b101f4006d067f00140776001401f9009b0000
fed902bc000003f2009b045afff504cefff5045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a045a005304ce004a045a
005304ce004a04350071043500ad045a000f04ce000f0473001406110014
054000a7047300860540000a0473000a05c7005105c700660400005005c7
fffd067a00140540004a04730046047400480556006e04d5005304e3ffc4
0639006d04fe000f070c008701c700830239001f055600960400008801c7
001504000018072000a405c7ffb80473008b0639006006f2006305570044
06090014047300860556009e0556006b0400004f04f20094030b00440239
002404e300140239002404e3003005fb006105c700a1062e001004000021
04e300290400002804e3002904e30031045c0044045c003f0473003c0473
005503ab003203e5002404730087021400bc034e00bc04ac0072023900b0
0aaa009e09c7009e08640046087f009606aa0096039c008309c7009c078e
009c062b0087047300550556fffd0473004a0000fefe0556fffd0473004a
08000001071d00440639006d0473001a0639006d04730042055600960400
00880639006304730044063900630473004404e30029045c004c01c7ffa2
0aaa009e09c7009e086400460639006d04730042084600a404f2009e05c7
009c047300870556fffd0473004a0556fffd0473004a055600a20473004b
055600a20473004b0239ff8a0239ff64023900040239fff6063900630473
0044063900630473004405c700a102aaffcc05c700a102aa006805c700a1
0473007605c700a1047300830556005c0400003f04e3003002390024045c
0051037e001305c700a40473008705a600a404d6005e0486005e04e30029
040000280556fffd0473004a055600a20473004b06390063047300440000
fefd06390063047300440639006304730044063900630473004405560006
040000210473005704730048047300860473008604000013040000500473
0046047300460473005505e9005503ab004903ab0032050d0032040f0044
0239ffb90473004204730042047800500402001904ef00190473008b0473
00870473008701c7001901c7005702d90044029e0000026e001401c70083
0493008306aa008406aa008406aa00870473ffa60473008b046c00870473
004406530044063f00570466004402aaffe402aaffe402aaffe402aa0085
02aa008502aa008502aaffe40455008a0455008a0400003f01c7ffa20214
ffb901c7ff7202cb00000239000f0239002404730019048c005404600088
0400001a05c7000604000018042800190400002804540028045c004c045c
0079040000240400005004000024040000500639006304400088040f0049
04780050046b0088032e000004000008033b008804730048040000240400
005007b7004607400046080b004605b30024036f002405c00024061c0013
054a0083050f008303e2001e0438006303110064031100640146ffce01eb
006401eb000001eb000002ea006403d90000029100000187005a02d7005e
01c7008001c7006c01c7008a02aa00fb02aa00fb02ca003202ca003204ac
007004ac007004ac006504ac006502aa012102aa00de02aa005902aa0121
02aa001d02aa005902aa00de023900b6023900b602aa00fb02aa00fb02aa
00a602aa00a602aa00a602aa001d02aaffe202aafffb0294000001420064
02b8003202a0000002ca0032031000960310009603100096031000960310
009602aa006202aa006202aa002802aa001d02aa00470457009604570096
045700960457009604570043045700430457004304570043045700430310
00430457002f0457002f0457002f0457002f0457002f0310002f04570025
045700250457002504570025045700250310002f0457001a0457001a0457
001a0457001a0457001a0310001a04570042045700420457004204570042
045700420310004204570096045700960457009604570096045700420457
0042045700420457004204570042031000420457002f0457002f0457002f
0457002f0457002f0310002f0457002f0457002f0457002f0457002f0457
002f0310002f045700260457002604570026045700260457002603100026
045700420457004204570042045700420457004203100042045700960457
009604570096045700960457004204570042045700420457004204570042
031000420457002604570026045700260457002604570026031000260457
002304570023045700230457002304570023031000230457002f0457002f
0457002f0457002f0457002f0310002f0457004b0457004b0457004b0457
004b0457004b0310004b0457009604570096045700960457009604570042
04570042045700420457004204570042031000420457001a0457001a0457
001a0457001a0457001a0310001a04570024045700240457002404570024
04570024031000240457002f0457002f0457002f0457002f0457002f0310
002f0457004e0457004e0457004e0457004e0457004e0310004e04570096
0457009604570096045700960000fec10000fec60000fdac0000fed80000
ff920000fee90000ff4c0000fea00000fec40000ffce0000ff660000fea0
0000fed80000fed80000ff970000ff980000ff990000fff40000ff420000
ff420000ff440000ff5f0000fe870000ffec0000ffa60000ff510000ff51
0000ff510000fec90000ff1c000000000000fee90000ff4c0000ff930000
ff2a0000ff560000ffce0000fe870000febb0000fec40000fec40000fed8
0000fed80000feb30000fec90000fdad0000fec80000feb30000fec90000
fdad0000fe160000fee60000ffa60000fe870000ff440000feba0000ff23
0000ff9a0000fdac0000fe88000000000000feb00000ff980000fe930000
ffa60000fe870000fe1c0000ff660000ff440000feb00000feb00000feb0
0000ff030000ff520000fd1f0000ff530000ff530000ff530000feb50000
feb50000ffc30000feae0000fedc0000fec70000fec80000fedc0000fe1e
0000ff420000ff510000feb70000feb002aa00de02aa005902aa00fa049a
007004600000062e001407aa0000062e0014047b004c063f005704cf0044
063900630473004405c700700400005004e300a8033b008804ff0000043c
0032060d000a049d0042072000a406aa0084056500630473008b056400a4
0400000a0556006b0556006b04e0000504c5001905e5005f046e004403b6
00140347002804cf00440495005b0400005001c7ffa2063900600389004d
03890050055600a205c000a10473004b047800870ab4006d04fe00100639
001404e70014079900bf05b500880558000104000006072e00bf05900088
06a10078057b007a086d00bf06f0008804d5006603ab001f065f00390582
00480639006004730044066d0009050c001a066d0009050c001a08980063
072c004406aa002004e6001c0987006d06d000500000fe370ab4006d04fe
001005c7006604000050040700140000fea60000febc0000ff980000ff98
0000fc2b0000fc4c05c000a10478008705400004042b00140556009e0473
0087055d00a40464008804d5004e03ab003204a900040380000005ef0029
04490028070900a4052f0088091800a006f600880606003e042b002305c7
00660400005004e3003003aa0026076700310587002605550057042b0045
06e4000a0554000a06e4000a0554000a023900bf07630007055afffb0557
00a1046800860540001204ab001805c700a4046b008805c700a4046b0088
05550057042b004506aa00980580008c02aa002e0556fffd0473004a0556
fffd0473004a08000001071d0044055600a20473004b0605006304730055
07630007055afffb04d5004e03ab003204d5004e045c004c05c000a10478
008705c000a1047800870639006304730044063900600473004405c0004a
0415002b0515000a040000210515000a040000210515000a040000210555
0057042b0045071500a805c0008b0540004a0473004607bf004a07030046
07a6006606860053054d00660413005307c3001207470018084600a40707
00880639006d0478005005f90030055300260000ff430000fec90000ff77
0000ffb00000ff470000ff560000ff740000fed70000feac000000000000
ff520000ff56000000000000feac0000fd9a000000000000ff6a0000ff7c
0000ff690000ff560000feac0000ff7f0000ff560000fdef0000ff430000
ff690000ff7c000000000000fdae0000ff8c000001020000fefe0000fefe
0000fedf0000fedf0000ff580000ff200000fefe0556fffd0473004a0556
0096047300860556009604730086055600960473008605c7006604000050
05c7009e0473004605c7009e0473004605c7009e0473004605c7009e0473
004605c7009e04730046055600a20473004b055600a20473004b055600a2
0473004b055600a20473004b055600a20473004b04e300a8023900130639
006d0473004205c700a40473008705c700a40473008705c700a404730087
05c700930473006805c700a4047300870239ffdf01c7ff92023900200239
000605560096040000880556009604000088055600960400008804730096
01c7007e0473009601c7ffb90473009601c7ffa50473009601c7ffa306aa
009806aa008706aa009806aa008706aa009806aa008705c7009c04730087
05c7009c0473008705c7009c0473008705c7009c04730087063900630473
00440639006304730044063900630473004406390063047300440556009e
047300870556009e0473008705c700a102aa008505c700a102aa008505c7
00a102aa005e05c700a102aa00260556005c0400003f0556005c0400003f
0556005c0400003f0556005c0400003f0556005c0400003f04e300300239
002404e300300239002404e300300239ffff04e300300239000e05c700a1
0473008305c700a10473008305c700a10473008305c700a10473008305c7
00a104730083055600090400001a055600090400001a078d001905c70006
078d001905c70006055600090400000f055600090400000f055600060400
002104e300290400002804e300290400002804e300290400002804730087
0239000305c70006040000210473004a01c7008904a0004804a0004804a0
004804a0004804a0004804a0004804a0004804a000480556fffd0556fffd
068200130682001306820013068200130682005606820056039100620391
006203910062039100620391006203910062061e0000061e0000076c0000
076c0000076c0000076c00000473008b0473008b0473008b0473008b0473
008b0473008b0473008b0473008b068f0000068f0000081f0000081f0000
081f0000081f0000081ffff3081ffff301c7008101c7008101c7ff9b01c7
ff9b01c7ffeb01c7ffeb01c7ffa201c7ffa2030100000301000004910000
0491000004910000049100000491fff30491fff304730044047300440473
0044047300440473004404730044069d0000069d0000082d0000082d0000
07c9000007c9000004600088046000880460008804600088046000880460
008804600088046000880682000007ae00000812000007ae0006063f0057
063f0057063f0057063f0057063f0057063f0057063f0057063f0057065f
0000065f000007ef000007ef0000078b0000078b0000078bffff078bffff
04a0004804a0004803910062039100620473008b0473008b01c7ffe601c7
006804730044047300440460008804600088063f0057063f005704a00048
04a0004804a0004804a0004804a0004804a0004804a0004804a000480556
fffd0556fffd068200130682001306820013068200130682005606820056
0473008b0473008b0473008b0473008b0473008b0473008b0473008b0473
008b068f0000068f0000081f0000081f0000081f0000081f0000081ffff3
081ffff3063f0057063f0057063f0057063f0057063f0057063f0057063f
0057063f0057065f0000065f000007ef000007ef0000078b0000078b0000
078bffff078bffff04a0004804a0004804a0004804a0004804a0004804a0
004804a000480556fffd0556fffd0556fffd0556fffd0556fffd02aa00e5
02aa00fd02aa00e502aa000602aa00060473008b0473008b0473008b0473
008b0473008b068200000682000006f3000006f3000005c700a402aa0013
02aa001302aa000601c7ffbb01c7ffab01c7ffca01c7ffca01c7ff9301c7
ff930239001a0239fff5036500000365000002aa001302aa001302aa0006
04600088046000880460008804600088048d0083048d0083046000880460
0088055600060556000606e6000007180000061e000002aaffea02aaffea
02aa0059063f0057063f0057063f0057063f0057063f005707650000069d
000007270000065f000005fb006102aa00de02aa00e50473000d05c70066
05c7006606aa008705c70024095000a1078d00190556001f04e300300800
00290400003004c100660000ff530000ff530000ff530000ff5301c70019
01c7ffa2042b0005055600110574004602cbffa3057a008702f0ffc8057f
000a057f000a02aa008402aa008402aa00c902aa00c902aa00a002aa0059
02aaffaf02aa003a02aa0006023900b902aa00a902aa00a902aa00a902aa
00a9032e001e032e001e02aa003a0000ff730000ffa50000fed80000ff23
0000ff720000ff720000fee70000ffa50000ff530000ff530000ff530556
009e0473008703f8001905fb0019071d0044044000190400005004690087
0469001903eb008703ab003201c700880361004104000088033600100580
008c04780087047300440400001304de004404de004404de000d078d0050
03a800440473004404730044042b00840455001f0455001f03aa00260460
008804c6004405de004404c600440400001a05c700060400002803ab0032
036b003f04db001f02eb00880400001a04550088042b008405b4007a04ab
001803a00000054f0000035100320351ffd1039800320348003203480032
03f80032036e0032015600690284002d0366003202d00032041500320371
0032036f003204180032030f003203590032039c003203760031036f0032
04fb000002fa003202fa00320304003204cc0032030500640305003202f9
003202f90032028c0032028c0032030400320142006402b6006404950064
030f00640305003202d5003203050032030500320306006401c20032030f
006403420032049500640292000003200000031500640292000003060032
0385003202bf00000142006401eb0064030f006402920000031500640292
0000030900320385003202bf0000077d00460a660046038300460a2f0046
0541ffba01e9003c045a00110000ff0d0000ff350000fece0000feb70000
fec90000ffcf0000ff4f0000ff9e0000feca02b3005f02b3005f03e9004a
03e9004a039affba0327ffba039affba0327ffba05ad0069053d002d05fd
009604dc005004e0003c05f6009b053f00280650002804ac00720000fe3b
0000fe660000fe660473fffc02aa005302d5ffce01a8ffba01a8ffba01a8
ffba01a8ffba0658001509c5004704000000080000000400000008000000
02ab000002000000015500000473000002390000019a000000ab00000000
000005e5000305c7006606aa00980580008c074400830718004607180048
0556fffd05c70066040000140473000a04e300300400004f0400002804a5
001d000001020000ff420000febf0000ff3a0000ff53048d000a05c70051
05c7006605c70051045500a102eb00880000ff430000ff040000ffac02d2
00960000ff37021affba0250001e0000ff3a0000ff5b0000ff5f0000ff7e
0000ff940000ff4a0000fe9c05b5003a05b5003a01f4ff9601f4ff9605b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba0481003604350036043dffba043dffba0481003604350036043d
ffba043dffba02b3003202b3003202b3005f02b3005f03e9004a03e9004a
0692003e0692003e043fffba043fffba045a002a039a00360435ffba0327
ffba045a002a039a00360435ffba0327ffba045a002a039a00360435ffba
0327ffba064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba067f0014077600140327ffba041effba02b4002302b4
00230327ffba0327ffba02b4002302b400230327ffba0327ffba04350045
0435004501f4ffba01f4ffba043500450435004501f4ffba01f4ffba0435
00450435004501f4ffba01f4ffba040d0047040d004701a8ffba01a8ffba
03e9004a03e9004a03e9004a03e9004a0692003e0692003e043fffba043f
ffba0473ff93047300460239ffbf06aaffd50473ffb70473ff9102aaffa4
02aaffa40400ffff0239ffb90400002804730089030b0064047400480649
002401c7001901c700190473001e0460001e048c000a0473008604730046
0239001305b400420400008801c7fffc06aa00870473008b0473008702aa
fffb0400003f0318ffa20400001a0400000f040000280473004a04730048
047300460473004b03ab004903ab00320534005501c700880400001301c7
ffa204730083045c004c0304006402d5003202c9003302fc0032028c0032
01d5003201d5000003040032031100640142001901420064014200640142
0019022a00000142006401420009023300640493006404930064030fffc9
030f0064030e0064030500320300003202b800320142ffca01c20032030f
001d031a00320306006402d400640292000002de003202de003202de0032
02f4003202ea00320000febc0000febc0000ff730000fea9023900b902fa
003202f900320305003202a0000002f900320639006d0556fffd0473000f
05c7006602aa004104a0004804a0004804a0004804a0004804a0004804a0
004804a0004804a0004801c7ff9b01c7ffab01c7ff9b01c7ffab01c7ff9b
01c7ffbb01c7ff9b01c7ffbb046000880460008804600088046000880460
008804600088046000880460008801c7ffab01c7ffab01c7ffbb01c7ffbb
04600088046000880460008804600088045a005304ce004a03a000130556
001105c700290558000b055600a20473004b0400003301c7ffa205e60063
0473004805c7000002aa000f055600060400002104000013040000500400
001301c700830455fffd02eb0001055600090400000f055600090400000f
04d5005303ab00490540001204ab00180000fec60000fed40000fec60000
fed40000fe5f0000fe5f0000ff720000ff730000fee7078b000a03eb004c
040000130473000a01c700150473fff40556001105c700a1047300190239
ff8b05c700a404730087055600960400008804e30029040000280400003b
049e00a403670088053000480000ff530000ffbc0000fefe0000fefe0000
fea40000fea401c7008805c900a505c7009c05c900a50000fecd0000ff48
0000fec90000fece0000fec50000fed00000fed10000feee0000fed60000
fedc0000fdd90639005804730048078d001905c70006059f00a40000feb9
05dc006304c60009084c001906ba0006023900b9038000720187005a0187
005a0400009904000099023900b0023900b0023900b002aa001900000046
0000003b000000310000005600000044000000560000004a0000004904e3
0030047300500473005c0312003f045000480446003d047300310450003d
047d00620427003f0473005604790054047300550319003b0473003c0473
00560473003204730055047e0062042f004b04730053047b005505c5006a
05d3006305f800a6094a00a605f8009c0302003b054100a4063900600472
004601c7008903f80087020a00890473004e0250000e047800850473005c
0473005c0302003b020a008901c70088047100000489009804c3005c04e7
0098046f009804080098052f005c04f0009801ea00980373002904890098
03bc009805c7009804ec00980531005c046d00980531005c04db0098046d
004a0410002904dd0091046800080659001e046f0008046c0008040e001f
0691000006aa005c03bc003805310031046f009804e7001404c300900471
0000047100000471000004710000047100000471000004c3005c046f0098
046f0098046f0098046f009801eafff401ea008e01eaffb601eaffda04ec
00980531005c0531005c0531005c0531005c0531005c04dd009104dd0091
04dd009104dd0091046c000804710000047100000471000004c3005c04c3
005c04c3005c04c3005c04e7009804e70014046f0098046f0098046f0098
046f0098046f0098052f005c052f005c052f005c052f005c04f0009804f2
002e01eaff9601eaffbd01eaffd401ea003e01ea00870543009803730029
0489009803bc009803bc009803bc009803bc009804ec009804ec009804ec
009804f500980531005c0531005c0531005c04db009804db009804db0098
046d004a046d004a046d004a046d004a046d004a04100029041000290410
0029040e002904dd009104dd009104dd009104dd009104dd009104dd0091
0659001e0659001e0659001e0659001e046c0008046c0008046c0008040e
001f040e001f040e001f0471000006910000053100310471000004890098
03ae009804710000046f0098040e001f04f000980531005c01ea00980489
0098045a000205c7009804ec0098042f004c0531005c04e60098046d0098
0425006a04100029046c00080546004c046f00080543004c053100520471
0000046f009804f0009801ea008e0531005c046c00080531005201eaffda
046c0008046f009805af002903ae009804c7005c046d004a01ea009801ea
ffda0373002906f4000f06b6009805da0029041600980463002304e60098
04710000048600980489009803ae00980469000f046f009806540023041f
004604e5009804e50098041600980469000f05c7009804f000980531005c
04e60098046d009804c3005c0410002904630023050d004c046f000804dc
0098047d004c06280098061e0098057c003c05e700980455009804c60046
06af009804db00120323009802aa002202aa006b02aa001902aa002102aa
001702aa002202aa002e02aa004902aa002a02aa003302aa002e02aa0033
02aa002205c5006a05c5006a05c5006a05c5006a05c5006a05c5006a05c5
006a05c5006a05c5006a05c5006a05c5006a05d3006305d3006305d30063
05d3006305d3006305d3006305d3006305d3006305d3006305d3006305d3
006305f800a605f800a605f800a605f800a605f8009c05f8009c05f8009c
05f8009c05f8009c05f8009c05f8009c05f8009c05f8009c0302003b0302
003b0302003b0302003b030200320302003b0302003b0302003b0302003b
0416ffac0302003b0302003b0302003b020a0089020a004e0269008902a5
0089020a00070302003b0302003b0302003b0302003b030200320302003b
0302003b0302003b054100a4047200460472004604720046047200460472
00460472004604720046047200460472004601c7ffa703f80087020a0089
020a004e0269008902a50089020a00070250000e0250000e0300000e0250
000e0478008504780085047800850478008504a0005702aa001702aa0022
02aa004902aa002a04ee001504ed009d04ed009d060b001a04d5008505e3
008502260099022600890226002c0226001e02260063022600300226001b
0226001d0226001d022600290226001e022600260226001d022600080226
00280c9600460e0c00460000ffba0ed200460000ff5b0000ff910000ffb7
0000ff9b0481003604350036043dffba043dffba0481003604350036043d
ffba043dffba0692003e0692003e043fffba043fffba03e9004a03e9004a
0481003604350036043dffba043dffba01a8ffc301d6ff5f01a8ffe901d6
ff85051b003204b5002401f4ffba01f4ffba051b003204b5002401f4ffba
01f4ffba051b003204b5002401f4ffba01f4ffba03750032037500320375
003203750032067f0045067f0045067f0045067f00450481003604350036
043dffba043dffba0692003e0692003e043fffba043fffba0692003e0692
003e043fffba043fffba04cf002d04cf002d0327ffba0327ffba04b4ffe0
0500ffe00496ffe804e4ffe8075c003205da0032070e0032051300390bb7
00000000fe2c0000fffc0000006b000000730000006b051b003204b50024
01f4ffba01f4ffba067f0014077600140327ffba041effba067f00140776
00140327ffba041effba051b003204b5002401f4ffba01f4ffba051b0032
04b5002401f4ffba01f4ffba051b003204b5002401f4ffba01f4ffba0000
fff5049e00a403cd000a04e3003003aa002605c000a104ac008705560096
0473005a0a6600440473007e0556001d07ae001206150018064e009e05be
008707a9000906da001f0556009604000086088c000d07130018090e00a4
06ce008805c700a40455008805a300a2046f008702390013023900130474
0048062200bf032f000e04ba005c0474004905590014049b000a06aa0098
0556fffd05dc00a50590004b02aaffe50473004403eb004c0146ffce0292
00000556005c04e3002902390069063c00aa0b56ffc2084aff120b0c0032
0ed2004401a8ffba01a8ffba01a8ffba01d6000201a8003201a8004601a8
ffba01a8001a0251003a01a8002901a8004601a8ffba01a8004801a8ffba
01a8002901a8ffba01a8004601a8ffba01a8006e01a8ffba01f4009e01f4
001001f4001b01f4001001f4fff9022e008d01f4006b0199004602bf0032
02bf00320473000f000100000f9402b5003c00ca000700020010002f0059
000004bc05ec000500020000000e00ae0000000300000000006a00000000
0003000000070064006a0001000000000000003500ce0001000000000003
000e01030001000000000004000e01110001000000000006000e011f0001
0000000000070031012d0003000004090001001c015e0003000004090002
000e017a0003000004090003001c01880003000004090004001c01a40003
000004090006001c01c00003000104090000006a01dc0003000104090007
0062024600a90020003200300031003200200054006800650020004d006f
006e006f007400790070006500200043006f00720070006f007200610074
0069006f006e002e00200041006c006c0020005200690067006800740073
002000520065007300650072007600650064002e0041007200690061006c
002000200069007300200061002000740072006100640065006d00610072
006b0020006f006600200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e002e
a9203230313220546865204d6f6e6f7479706520436f72706f726174696f
6e2e20416c6c205269676874732052657365727665642e4f45504a42482b
417269616c4d544f45504a42482b417269616c4d544f45504a42482b4172
69616c4d54417269616c20697320612074726164656d61726b206f662054
6865204d6f6e6f7479706520436f72706f726174696f6e2e004f00450050
004a00420048002b0041007200690061006c004d00540052006500670075
006c00610072004f00450050004a00420048002b0041007200690061006c
004d0054004f00450050004a00420048002b0041007200690061006c004d
0054004f00450050004a00420048002b0041007200690061006c004d0054
00a90020003200300031003200200054006800650020004d006f006e006f
007400790070006500200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e0041007200690061006c00200069
007300200061002000740072006100640065006d00610072006b0020006f
006600200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e002e0000410c0054
032c032c032c0222001d001f032b032a003c001f032ab2061d1fb80328b3
26181fd0bc032900e0032900020329b22b1d1fb90327031db23b1f40b803
23b31215320f412d03200001002f0320000100200320006f032000af0320
00bf03200004005f031e00010010031e007f031e0080031e00af031e00bf
031e00d0031e00060000031e0010031e0020031e006f031e009f031e00e0
031e0006031d031cb2201f1041270319007f03190002000f031700ef0317
00ff03170003001f0317002f0317004f0317005f0317008f0317009f0317
0006000f0317005f0317006f0317007f031700bf031700f0031700060040
0317b2923340b80317b28b3340b80317b36a6c3240b80317b2613340b803
17b35c5d3240b80317b357593240b80317b34d513240b80317b344493240
b80317b23a3340b80317b331343240b80317b32e423240b80317b3272c32
40b80317b312253280b80317b30a0d32c04116031600d003160002007003
16000102c4000f0101001f00a0031500b0031500020306000f0101001f00
400312b32426329fbf03040001030203010064001fffc00301b20d113241
0a02ff02ef0012001f02ee02ed0064001fffc002edb30e11329f414a02e2
00af02e200bf02e2000302e202e202e102e1007f02e00001001002e0003f
02e0009f02e000bf02e000cf02e000ef02e0000602e002e002df02df02de
02de000f02dd002f02dd003f02dd005f02dd009f02dd00bf02dd00ef02dd
000702dd02dd001002dc0001000002dc0001001002dc003f02dc000202dc
02dc001002db000102db02db000f02da000102da02daffc002d3b2373932
b9ffc002d3b22b2f32b9ffc002d3b21f2532b9ffc002d3b2171b32b9ffc0
02d3b2121632b802d2b2f9291fb90326031cb23b1f40bb0322003e003303
22b225311fb80318b23c691fb802e3b3202b1fa0413002d400b002d40002
000002d4001002d4002002d4005002d4006002d4007002d40006006002d6
007002d6008002d6009002d600a002d600b002d60006000002d6001002d6
002002ca002002cc002002d6003002d6004002d6005002d6000802d0b220
2b1fb802cfb226421f411602ce02c70017001f02cd02c80017001f02cc02
c60017001f02cb02c50017001f02c902c5001e001f02ca02c6b21e1f0041
0b02c6000002c7001002c6001002c7002f02c5000502c1b324121fff4111
02bf0001001f02bf002f02bf003f02bf004f02bf005f02bf008f02bf0006
02bf0222b2641f12410b02bb00ca0800001f02b200e90800001f02a600a2
0800406a1f4026434932402043493240263a3d3240203a3d329f209f2602
4026969932402096993240268e923240208e92324026848c324020848c32
40267a813240207a813240266c763240206c76324026646a324020646a32
40265a5f3240205a5f3240264f543240204f5432b8029eb724271f374f6b
0120410f0277003002770040027700500277000402770277027700f90400
001f029bb22a2a1fb8029a402b292a1f80ba0180bc0180520180a2018065
01807e01808101803c01805e01802b01801c01801e0180400180bb013800
0100800140b40180400180bb013800010080013940180180ca0180ad0180
73018026018025018024018020013740b80221b2493340b80221b2453340
b80221b341423240b80221b33d3e320f410f0221003f0221007f02210003
00bf022100cf022100ff0221000300400221b320223240b80221b3191e32
40b80222b32a3f3240b80221b32e3a326f414a02c3007f02c3008f02c300
df02c30004002f02c3006002c300cf02c30003000f02c3003f02c3005f02
c300c002c300ef02c300ff02c3000600df02220001008f02220001000f02
22002f0222003f0222005f0222007f022200ef0222000600bf022100ef02
210002006f0221007f022100af02210003000f0221002f0221003f022100
4f0221000402c302c30222022202210221401d101c102b1048038f1c010f
1e014f1eff1e023700161600000012110811b8010db6f70df8f70d000941
09028e028f001d001f0290028f001d001f028fb2f91d1fb80198b226bb1f
41150197001e0401001f013900260125001f013800730401001f0135001c
0801001f0134001c02ab001f0132b21c561fb8010fb2262c1fba010e001e
0401b61ff91ce41fe91cb80201b61fe81cbb1fd720b80401b21fd51cb802
abb61fd41c891fc92fb80801b21fbc26b80101b21fba20b80201b61fb91c
381fadcab80401b21f8126b8019ab21f7e26b8019ab61f7d1c471f6b1cb8
0401b21f6526b8019ab21f5e73b80401400f1f52265a1f481c891f441c62
1f4073b80801b61f3f1c5e1f3c26b8019ab21f351cb80401b61f301cbb1f
2b1cb80401b61f2a1c561f291cb80101b21f231eb80401b21f5537b80168
402c07960758074f07360732072c0721071f071d071b071408120810080e
080c080a080808060804080208000814b8ffe0402b000001001406100000
010006040000010004100000010010020000010002000000010000020108
02004a00b013034b024b5342014bb0c063004b6220b0f65323b8010a515a
b005234201b0124b004b5442b0382b4bb807ff52b0372b4bb007505b58b1
01018e59b0382bb00288b801005458b801ffb101018e851bb0124358b900
010111858d1bb900010128858d5959001816763f183f123e113946443e11
3946443e113946443e113946443e11394660443e11394660442b2b2b2b2b
2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d59
b0324b5358b0ff1d594bb09353205c58b901f201f04544b901f101f04544
5958b9033e01f2455258b901f2033e4459594bb8015653205c58b9002001
f14544b9002601f145445958b9081e0020455258b90020081e4459594bb8
019a53205c58b9002501f24544b9002401f245445958b909090025455258
b9002509094459594bb8040153205c58b173244544b1242445445958b917
200073455258b9007317204459594bb8040153205c58b1ca254544b12525
45445958b9168000ca455258b900ca16804459594bb03e53205c58b11c1c
4544b11e1c45445958b9011a001c455258b9001c011a4459594bb0565320
5c58b11c1c4544b12f1c45445958b90189001c455258b9001c0189445959
4bb8030153205c58b11c1c4544b11c1c45445958b90de0001c455258b900
1c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b01b33b59635c456523
456023456560234560b08b766818b080622020b163594565234520b00326
6062636820b003266165b059236544b063234420b13b5c4565234520b003
266062636820b003266165b05c236544b03b2344b1005c455458b15c4065
44b23b403b4523614459b347503437456523456023456560234560b08976
6818b080622020b134504565234520b003266062636820b003266165b050
236544b034234420b147374565234520b003266062636820b003266165b0
37236544b0472344b10037455458b137406544b24740474523614459004b
5342014b5058b108004259435c58b108004259b3020b0a124358601b2159
421610703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d
2342b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b0
124358b9187e3b211bba01a80400000b2b59b0102342b0112342002b7475
737500184569444569444569447373737374757374752b2b2b2b74752b2b
2b2b2b737373737373737373737373737373737373737373737373732b2b
2b45b0406144737400004bb02a534bb03f515a58b1070745b04060445900
4bb03a534bb03f515a58b10b0b45b8ffc0604459004bb02e534bb03a515a
58b1030345b040604459004bb02e534bb03c515a58b1090945b8ffc06044
592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b752b2b2b2b2b2b2b435c58
b9008002bbb301401e017400735903b01e4b5402b0124b545ab012435c5a
58ba009f02220001007359002b7473012b01732b2b2b2b2b2b2b2b737373
732b2b2b2b2b002b2b2b2b2b2b0045694473456944734569447374754569
44734569444569444569447374456944456944732b2b2b2b2b732b002b73
2b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b737475732b7374757374752b2b
2b742b002b2b2b00184569442b0000>]def 
/GlyphDirectory 16 dict def
CIDFontName currentdict end /CIDFont defineresource pop
ct_GlyphDirProcs begin
/HIBBAA+ArialMT 1 GetGlyphDirectory
237 <00010072027f043a03270003001a400c022500001a05011904575a182b4e
10e410f6002f4ded313001213521043afc3803c8027fa800> |
0 <00020100000005000500000300070042b40201e40607b802994013000504
e403000a0704e4010019080605e40203bc023100090199012e00182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000> |
!
end
/HIBBAA+ArialMT-Identity-H /Identity-H 0 [/HIBBAA+ArialMT] ct_ComposeFont pop
end end
%ADOEndSubsetFont
/QMYVMU+ArialMT /HIBBAA+ArialMT-Identity-H findfont ct_VMDictPut
QMYVMU+ArialMT [10 0 0 -10 0 0 ]msf
172.187 9.25 mo
(\000\355\000\355)
[5.84 0 ]xsh
QMYVMT+ArialMT*1 [10 0 0 -10 0 0 ]msf
183.867 9.25 mo
( backside gas pressure)
[2.782 5.55901 5.55899 4.99901 4.99899 4.99899 2.21901 5.55901 5.55899 2.782 5.55899 5.55901 
4.99899 2.782 5.55899 3.32893 5.55899 4.99899 4.99899 5.55902 3.32892 0 ]xsh
174.384 222.667 mo
(p/kPa)
[5.56 2.78 5 6.67007 0 ]xsh
QMYVMT+ArialMT*1 [0 -10 -10 0 0 0 ]msf
12.4667 120.25 mo
(F/mN)
[-6.11092 -2.781 -8.33092 0 ]ysh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/QMYVMT+ArialMT*1 uf
/QMYVMT+ArialMT uf
/TRVCAA+ArialMT uf
/QMYVMU+ArialMT-Identity-H uf
/QMYVMU+ArialMT /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
