%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: A9R842F.tmp.pdf
%%Creator: Adobe Acrobat 11.0.7
%%For: Yin
%%CreationDate: 2014/06/16, 23:32:53
%%BoundingBox: 0 0 421 564
%%HiResBoundingBox: 0 0 420.3006 563.8425
%%CropBox: 0 0 420.3006 563.8425
%%LanguageLevel: 3
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1194 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2014-06-16T23:32:42+08:00"
   xmp:CreateDate="2014-06-16T23:32:42+08:00"
   xmp:MetadataDate="2014-06-16T23:32:42+08:00"
   xmp:CreatorTool="Altium Designer Release 10"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:bf34f346-e145-4b81-8738-8acd77150e8c"
   xmpMM:InstanceID="uuid:82e382f3-cc01-45c5-bd75-c2d5d837639e"
   pdf:Producer="llPDFLib 3.x">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">No Title</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">None</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Windows 9x/NT/2000/XP User</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -563.842 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 563.842 li
420.301 563.842 li
420.301 0 li
cp
clp
gsave
-.782074 564.125 mo
421.218 564.125 li
421.218 -.875488 li
-.782074 -.875488 li
cp
clp
gsave
-195.782 563.842 mo
420.301 563.842 li
420.301 -2.89709 li
-195.782 -2.89709 li
cp
clp
1.99522 lw
1 lc
0 lj
10 ml
[] 0 dsh
true sadj
2.40738 474.847 mo
2.40738 2.40741 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.609674 1 .135897 .0332647 cmyk
@
418.073 474.847 mo
418.073 2.40741 li
@
2.40738 474.847 mo
418.073 474.847 li
@
2.40738 2.40741 mo
418.073 2.40741 li
@
1.33015 lw
72.2392 292.502 mo
85.5405 292.502 li
.873014 .24213 1 .129183 cmyk
@
78.8899 299.133 mo
78.8899 285.871 li
@
100.505 174.806 mo
113.806 174.806 li
@
100.505 128.391 mo
113.806 128.391 li
@
150.384 221.222 mo
150.384 207.96 li
@
150.384 194.699 mo
150.384 181.437 li
@
203.59 217.906 mo
216.891 217.906 li
@
210.24 224.537 mo
210.24 211.276 li
@
263.446 231.168 mo
276.747 231.168 li
@
263.446 204.645 mo
276.747 204.645 li
@
311.663 247.745 mo
324.964 247.745 li
@
318.313 254.375 mo
318.313 241.114 li
@
306.675 141.653 mo
306.675 128.391 li
@
359.88 254.375 mo
359.88 241.114 li
@
107.155 181.437 mo
107.155 168.176 li
@
107.155 135.022 mo
107.155 121.761 li
@
94.1864 151.267 mo
94.1864 105.515 li
@
127.44 226.858 mo
127.44 202.324 li
@
127.44 200.335 mo
127.44 175.801 li
@
120.124 151.267 mo
120.124 105.515 li
@
173.329 226.858 mo
173.329 202.324 li
@
173.329 200.335 mo
173.329 175.801 li
@
247.151 216.912 mo
247.151 192.378 li
@
247.151 243.435 mo
247.151 218.901 li
@
270.096 211.276 mo
270.096 198.014 li
@
270.096 237.798 mo
270.096 224.537 li
@
293.041 216.912 mo
293.041 192.378 li
@
293.041 243.435 mo
293.041 218.901 li
@
297.364 268.631 mo
297.364 226.858 li
@
293.706 157.898 mo
293.706 112.146 li
@
319.644 157.898 mo
319.644 112.146 li
@
339.263 268.631 mo
339.263 226.858 li
@
94.1864 197.682 mo
94.1864 151.93 li
@
120.124 197.682 mo
120.124 151.93 li
@
346.911 270.621 mo
346.911 224.869 li
@
372.849 270.621 mo
372.849 224.869 li
@
48.9619 345.548 mo
48.9619 239.456 li
@
108.818 345.548 mo
108.818 239.456 li
@
127.772 323.003 mo
127.772 112.809 li
@
292.708 323.003 mo
292.708 112.809 li
@
48.9619 345.548 mo
108.818 345.548 li
@
48.9619 239.456 mo
108.818 239.456 li
@
94.1864 197.682 mo
120.124 197.682 li
@
94.1864 151.93 mo
120.124 151.93 li
@
94.1864 151.267 mo
120.124 151.267 li
@
94.1864 105.515 mo
120.124 105.515 li
@
143.734 214.591 mo
157.035 214.591 li
@
143.734 188.068 mo
157.035 188.068 li
@
297.364 268.631 mo
339.263 268.631 li
@
247.151 243.435 mo
293.041 243.435 li
@
247.151 216.912 mo
293.041 216.912 li
@
247.151 218.901 mo
293.041 218.901 li
@
297.364 226.858 mo
339.263 226.858 li
@
247.151 192.378 mo
293.041 192.378 li
@
293.706 157.898 mo
319.644 157.898 li
@
300.024 135.022 mo
313.325 135.022 li
@
293.706 112.146 mo
319.644 112.146 li
@
346.911 270.621 mo
372.849 270.621 li
@
353.229 247.745 mo
366.531 247.745 li
@
346.911 224.869 mo
372.849 224.869 li
@
127.772 323.003 mo
292.708 323.003 li
@
127.44 226.858 mo
173.329 226.858 li
@
127.44 202.324 mo
173.329 202.324 li
@
127.44 200.335 mo
173.329 200.335 li
@
127.44 175.801 mo
173.329 175.801 li
@
127.772 112.809 mo
292.708 112.809 li
@
97.5117 189.063 mo
116.799 189.063 li
.609674 1 .135897 .0332647 cmyk
@
97.5117 160.55 mo
116.799 160.55 li
@
97.5117 142.647 mo
116.799 142.647 li
@
97.5117 114.135 mo
116.799 114.135 li
@
136.418 223.874 mo
136.418 205.308 li
@
136.418 197.351 mo
136.418 178.785 li
@
164.351 223.874 mo
164.351 205.308 li
@
164.351 197.351 mo
164.351 178.785 li
@
97.5117 142.647 mo
97.5117 114.135 li
@
116.799 142.647 mo
116.799 114.135 li
@
256.13 213.928 mo
256.13 195.362 li
@
256.13 240.451 mo
256.13 221.885 li
@
284.063 213.928 mo
284.063 195.362 li
@
284.063 240.451 mo
284.063 221.885 li
@
297.031 149.278 mo
297.031 120.766 li
@
316.318 149.278 mo
316.318 120.766 li
@
350.236 262.001 mo
350.236 233.488 li
@
369.523 262.001 mo
369.523 233.488 li
@
116.799 189.063 mo
116.799 160.55 li
@
97.5117 189.063 mo
97.5117 160.55 li
@
160.36 319.688 mo
160.36 116.124 li
@
260.12 319.688 mo
260.12 116.124 li
@
50.9572 339.912 mo
50.9572 245.092 li
@
106.823 339.912 mo
106.823 245.092 li
@
50.9572 339.912 mo
106.823 339.912 li
@
50.9572 245.092 mo
106.823 245.092 li
@
136.418 223.874 mo
164.351 223.874 li
@
136.418 205.308 mo
164.351 205.308 li
@
136.418 197.351 mo
164.351 197.351 li
@
136.418 178.785 mo
164.351 178.785 li
@
304.68 261.338 mo
331.947 261.338 li
@
256.13 240.451 mo
284.063 240.451 li
@
304.68 234.152 mo
331.947 234.152 li
@
256.13 213.928 mo
284.063 213.928 li
@
256.13 221.885 mo
284.063 221.885 li
@
256.13 195.362 mo
284.063 195.362 li
@
297.031 120.766 mo
316.318 120.766 li
@
350.236 262.001 mo
369.523 262.001 li
@
350.236 233.488 mo
369.523 233.488 li
@
304.68 261.338 mo
304.68 234.152 li
@
331.947 261.338 mo
331.947 234.152 li
@
297.031 149.278 mo
316.318 149.278 li
@
160.36 319.688 mo
260.12 319.688 li
@
160.36 116.124 mo
260.12 116.124 li
@
179.647 128.391 mo
179.647 124.729 176.67 121.761 172.997 121.761 cv
169.324 121.761 166.346 124.729 166.346 128.391 cv
166.346 132.053 169.324 135.022 172.997 135.022 cv
176.67 135.022 179.647 132.053 179.647 128.391 cv
@
415.08 471.863 mo
5.40019 471.863 li
5.40019 5.39124 li
415.08 5.39124 li
cp
278.742 23.9572 mo
278.742 33.5718 li
288.385 33.5718 li
288.385 32.5771 li
287.055 29.5934 li
285.06 27.2726 li
282.732 25.2834 li
279.74 23.9572 li
cp
274.752 23.9572 mo
273.754 23.9572 li
270.761 25.2834 li
268.434 27.2726 li
266.438 29.5934 li
265.108 32.5771 li
265.108 33.5718 li
274.752 33.5718 li
cp
288.385 37.5502 mo
278.742 37.5502 li
278.742 47.1648 li
279.74 47.1648 li
282.732 45.8386 li
285.06 43.8494 li
287.055 41.5287 li
288.385 38.5449 li
cp
274.752 37.5502 mo
265.108 37.5502 li
265.108 38.5449 li
266.438 41.5287 li
268.434 43.8494 li
270.761 45.8386 li
273.754 47.1648 li
274.752 47.1648 li
cp
243.494 23.6257 mo
240.501 23.9572 li
237.508 25.2834 li
235.18 27.2726 li
233.185 29.5934 li
231.855 32.5771 li
231.522 35.561 li
231.855 38.5449 li
233.185 41.5287 li
235.18 43.8494 li
237.508 45.8386 li
240.501 47.1648 li
243.494 47.4964 li
246.486 47.1648 li
249.479 45.8386 li
251.807 43.8494 li
253.802 41.5287 li
255.132 38.5449 li
255.465 35.561 li
255.132 32.5771 li
253.802 29.5934 li
251.807 27.2726 li
249.479 25.2834 li
246.486 23.9572 li
cp
210.24 23.6257 mo
207.248 23.9572 li
204.255 25.2834 li
201.927 27.2726 li
199.932 29.5934 li
198.602 32.5771 li
198.269 35.561 li
198.602 38.5449 li
199.932 41.5287 li
201.927 43.8494 li
204.255 45.8386 li
207.248 47.1648 li
210.24 47.4964 li
213.233 47.1648 li
216.226 45.8386 li
218.554 43.8494 li
220.549 41.5287 li
221.879 38.5449 li
222.212 35.561 li
221.879 32.5771 li
220.549 29.5934 li
218.554 27.2726 li
216.226 25.2834 li
213.233 23.9572 li
cp
176.987 23.6257 mo
173.994 23.9572 li
171.001 25.2834 li
168.674 27.2726 li
166.679 29.5934 li
165.348 32.5771 li
165.016 35.561 li
165.348 38.5449 li
166.679 41.5287 li
168.674 43.8494 li
171.001 45.8386 li
173.994 47.1648 li
176.987 47.4964 li
179.98 47.1648 li
182.973 45.8386 li
185.3 43.8494 li
187.296 41.5287 li
188.626 38.5449 li
188.958 35.561 li
188.626 32.5771 li
187.296 29.5934 li
185.3 27.2726 li
182.973 25.2834 li
179.98 23.9572 li
cp
143.734 23.6257 mo
140.741 23.9572 li
137.748 25.2834 li
135.421 27.2726 li
133.425 29.5934 li
132.095 32.5771 li
131.763 35.561 li
132.095 38.5449 li
133.425 41.5287 li
135.421 43.8494 li
137.748 45.8386 li
140.741 47.1648 li
143.734 47.4964 li
146.727 47.1648 li
149.719 45.8386 li
152.047 43.8494 li
154.042 41.5287 li
155.372 38.5449 li
155.705 35.561 li
155.372 32.5771 li
154.042 29.5934 li
152.047 27.2726 li
149.719 25.2834 li
146.727 23.9572 li
cp
155.705 56.7794 mo
131.763 56.7794 li
131.763 80.65 li
155.705 80.65 li
cp
276.747 56.7794 mo
273.754 57.1109 li
270.761 58.437 li
268.434 60.4263 li
266.438 62.747 li
265.108 65.7309 li
264.776 68.7147 li
265.108 71.6985 li
266.438 74.6824 li
268.434 77.0031 li
270.761 78.9923 li
273.754 80.3185 li
276.747 80.65 li
279.74 80.3185 li
282.732 78.9923 li
285.06 77.0031 li
287.055 74.6824 li
288.385 71.6985 li
288.718 68.7147 li
288.385 65.7309 li
287.055 62.747 li
285.06 60.4263 li
282.732 58.437 li
279.74 57.1109 li
cp
243.494 56.7794 mo
240.501 57.1109 li
237.508 58.437 li
235.18 60.4263 li
233.185 62.747 li
231.855 65.7309 li
231.522 68.7147 li
231.855 71.6985 li
233.185 74.6824 li
235.18 77.0031 li
237.508 78.9923 li
240.501 80.3185 li
243.494 80.65 li
246.486 80.3185 li
249.479 78.9923 li
251.807 77.0031 li
253.802 74.6824 li
255.132 71.6985 li
255.465 68.7147 li
255.132 65.7309 li
253.802 62.747 li
251.807 60.4263 li
249.479 58.437 li
246.486 57.1109 li
cp
210.24 56.7794 mo
207.248 57.1109 li
204.255 58.437 li
201.927 60.4263 li
199.932 62.747 li
198.602 65.7309 li
198.269 68.7147 li
198.602 71.6985 li
199.932 74.6824 li
201.927 77.0031 li
204.255 78.9923 li
207.248 80.3185 li
210.24 80.65 li
213.233 80.3185 li
216.226 78.9923 li
218.554 77.0031 li
220.549 74.6824 li
221.879 71.6985 li
222.212 68.7147 li
221.879 65.7309 li
220.549 62.747 li
218.554 60.4263 li
216.226 58.437 li
213.233 57.1109 li
cp
176.987 56.7794 mo
173.994 57.1109 li
171.001 58.437 li
168.674 60.4263 li
166.679 62.747 li
165.348 65.7309 li
165.016 68.7147 li
165.348 71.6985 li
166.679 74.6824 li
168.674 77.0031 li
171.001 78.9923 li
173.994 80.3185 li
176.987 80.65 li
179.98 80.3185 li
182.973 78.9923 li
185.3 77.0031 li
187.296 74.6824 li
188.626 71.6985 li
188.958 68.7147 li
188.626 65.7309 li
187.296 62.747 li
185.3 60.4263 li
182.973 58.437 li
179.98 57.1109 li
cp
119.126 106.841 mo
95.184 106.841 li
95.184 113.804 li
93.8539 114.467 li
92.5237 112.809 li
90.5286 111.151 li
88.2009 110.157 li
85.5406 109.825 li
82.8803 110.157 li
80.5526 111.151 li
78.5574 112.809 li
76.8947 114.798 li
75.8971 117.119 li
75.5646 119.771 li
75.8971 122.424 li
76.8947 124.744 li
78.5574 126.734 li
80.5526 128.391 li
82.8803 129.386 li
85.5406 129.717 li
88.2009 129.386 li
90.5286 128.391 li
92.5237 126.734 li
93.8539 125.076 li
95.184 125.739 li
95.184 127.728 li
95.184 129.054 li
95.184 137.343 li
119.126 137.343 li
119.126 129.054 li
119.126 127.728 li
cp
119.126 141.321 mo
109.15 141.321 li
109.15 149.941 li
119.126 149.941 li
cp
105.16 141.321 mo
95.184 141.321 li
95.184 149.941 li
105.16 149.941 li
cp
119.126 153.257 mo
109.15 153.257 li
109.15 161.877 li
119.126 161.877 li
cp
105.16 153.257 mo
95.184 153.257 li
95.184 161.877 li
105.16 161.877 li
cp
119.126 165.855 mo
95.184 165.855 li
95.184 174.143 li
95.184 175.47 li
95.184 177.459 li
93.8539 178.122 li
92.5237 176.464 li
90.5286 174.806 li
88.2009 173.812 li
85.5406 173.48 li
82.8803 173.812 li
80.5526 174.806 li
78.5574 176.464 li
76.8947 178.453 li
75.8971 180.774 li
75.5646 183.426 li
75.8971 186.079 li
76.8947 188.399 li
78.5574 190.389 li
80.5526 192.046 li
82.8803 193.041 li
85.5406 193.373 li
88.2009 193.041 li
90.5286 192.046 li
92.5237 190.389 li
93.8539 188.731 li
95.184 189.394 li
95.184 196.356 li
119.126 196.356 li
119.126 194.699 li
120.789 194.699 li
120.789 195.693 li
122.452 197.682 li
124.447 199.34 li
127.107 199.672 li
129.767 199.34 li
148.389 199.34 li
148.389 176.796 li
128.77 176.796 li
128.77 185.416 li
127.44 186.41 li
127.107 186.41 li
124.447 186.742 li
122.452 188.399 li
120.789 190.389 li
120.789 191.383 li
119.126 191.383 li
119.126 175.47 li
119.126 174.143 li
cp
268.101 193.373 mo
260.453 193.373 li
260.453 202.656 li
268.101 202.656 li
cp
256.462 193.373 mo
248.482 193.373 li
248.482 202.656 li
256.462 202.656 li
cp
304.68 151.93 mo
302.019 152.262 li
299.692 153.92 li
298.362 156.24 li
297.696 158.561 li
298.362 161.213 li
299.692 163.534 li
300.689 164.197 li
300.689 205.971 li
299.359 206.302 li
298.029 204.976 li
296.034 203.319 li
293.374 202.987 li
293.041 202.987 li
291.711 201.992 li
291.711 193.373 li
272.091 193.373 li
272.091 212.27 li
271.759 214.259 li
268.101 214.259 li
268.101 206.634 li
248.482 206.634 li
248.482 214.259 li
171.999 214.259 li
171.999 203.319 li
166.013 203.319 li
166.013 199.34 li
171.999 199.34 li
171.999 176.796 li
152.38 176.796 li
152.38 199.34 li
158.365 199.34 li
158.365 203.319 li
152.38 203.319 li
152.38 225.863 li
171.999 225.863 li
171.999 221.553 li
248.482 221.553 li
248.482 242.44 li
268.101 242.44 li
268.101 226.526 li
270.429 224.205 li
272.091 224.869 li
272.091 242.44 li
291.711 242.44 li
291.711 233.82 li
293.041 232.825 li
293.374 232.825 li
296.034 232.494 li
298.029 230.836 li
299.359 229.51 li
300.689 229.842 li
300.689 261.006 li
299.692 261.669 li
298.362 263.99 li
297.696 266.311 li
298.362 268.963 li
299.692 271.284 li
302.019 272.61 li
304.68 273.273 li
307.007 272.61 li
309.335 271.284 li
310.998 268.963 li
311.33 266.311 li
310.998 263.99 li
309.335 261.669 li
308.337 261.006 li
308.337 217.906 li
308.337 164.197 li
309.335 163.534 li
310.998 161.213 li
311.33 158.561 li
310.998 156.24 li
309.335 153.92 li
307.007 152.262 li
cp
127.107 202.987 mo
124.447 203.319 li
122.452 204.976 li
120.789 206.966 li
120.457 209.618 li
120.789 212.27 li
122.452 214.259 li
124.447 215.917 li
127.107 216.249 li
127.44 216.249 li
128.77 217.243 li
128.77 225.863 li
148.389 225.863 li
148.389 203.319 li
129.767 203.319 li
cp
316.318 280.898 mo
315.321 280.898 li
312.328 282.224 li
310 284.214 li
308.005 286.534 li
306.675 289.518 li
306.675 290.513 li
316.318 290.513 li
cp
316.318 294.491 mo
306.675 294.491 li
306.675 295.486 li
308.005 298.47 li
310 300.79 li
312.328 302.78 li
315.321 304.106 li
316.318 304.106 li
cp
343.253 234.483 mo
340.593 234.815 li
338.598 236.472 li
336.935 238.462 li
336.603 241.114 li
336.935 243.766 li
338.598 245.755 li
339.928 246.75 li
339.928 248.739 li
338.598 249.734 li
336.935 251.723 li
336.603 254.375 li
336.935 257.028 li
338.598 259.017 li
339.928 260.011 li
339.928 262.001 li
338.598 262.995 li
336.935 264.984 li
336.603 267.637 li
336.603 268.963 li
332.28 273.273 li
331.615 274.599 li
331.282 275.925 li
331.282 288.524 li
329.62 288.855 li
328.622 286.534 li
326.627 284.214 li
324.299 282.224 li
321.306 280.898 li
320.309 280.898 li
320.309 292.502 li
320.309 304.106 li
321.306 304.106 li
324.299 302.78 li
326.627 300.79 li
328.622 298.47 li
329.62 296.149 li
331.282 296.48 li
331.282 307.421 li
323.634 315.047 li
321.306 314.052 li
318.313 313.72 li
315.321 314.052 li
312.328 315.378 li
310 317.367 li
308.005 319.688 li
307.007 322.009 li
230.857 322.009 li
229.86 321.014 li
227.865 319.357 li
225.204 319.025 li
222.544 319.357 li
220.549 321.014 li
218.886 323.003 li
218.554 325.656 li
218.886 328.308 li
220.549 330.297 li
222.544 331.955 li
225.204 332.286 li
227.865 331.955 li
229.86 330.297 li
230.857 329.303 li
307.007 329.303 li
308.005 331.623 li
310 333.944 li
312.328 335.933 li
315.321 337.259 li
318.313 337.591 li
321.306 337.259 li
324.299 335.933 li
326.627 333.944 li
328.622 331.623 li
329.952 328.64 li
330.285 325.656 li
329.952 322.672 li
328.954 320.351 li
337.6 311.731 li
338.265 310.405 li
338.598 309.079 li
338.598 296.48 li
340.261 296.149 li
341.258 298.47 li
343.253 300.79 li
345.581 302.78 li
348.574 304.106 li
351.567 304.437 li
354.56 304.106 li
357.552 302.78 li
359.88 300.79 li
361.21 299.464 li
362.873 299.796 li
362.873 307.421 li
363.205 308.747 li
363.87 310.073 li
372.849 319.025 li
372.849 337.591 li
396.791 337.591 li
396.791 313.72 li
378.169 313.72 li
370.189 305.763 li
370.189 277.583 li
369.856 276.257 li
369.191 274.931 li
349.904 255.701 li
349.904 255.038 li
351.567 254.707 li
376.174 279.241 li
375.509 280.567 li
372.849 280.567 li
372.849 304.437 li
396.791 304.437 li
396.791 280.567 li
388.145 280.567 li
387.48 279.904 li
349.904 242.44 li
349.904 241.114 li
349.572 238.462 li
347.909 236.472 li
345.914 234.815 li
cp
351.567 313.72 mo
348.574 314.052 li
345.581 315.378 li
343.253 317.367 li
341.258 319.688 li
339.928 322.672 li
339.596 325.656 li
339.928 328.64 li
341.258 331.623 li
343.253 333.944 li
345.581 335.933 li
348.574 337.259 li
351.567 337.591 li
354.56 337.259 li
357.552 335.933 li
359.88 333.944 li
361.875 331.623 li
363.205 328.64 li
363.538 325.656 li
363.205 322.672 li
361.875 319.688 li
359.88 317.367 li
357.552 315.378 li
354.56 314.052 li
cp
328.289 390.305 mo
291.711 390.305 li
291.711 426.774 li
328.289 426.774 li
cp
261.783 390.305 mo
225.204 390.305 li
225.204 426.774 li
261.783 426.774 li
cp
195.276 390.305 mo
158.698 390.305 li
158.698 426.774 li
195.276 426.774 li
cp
128.77 390.305 mo
92.1912 390.305 li
92.1912 426.774 li
128.77 426.774 li
cp
.883665 .769161 0 0 cmyk
f
3.3253 lw
127.107 209.618 mo
133.758 209.618 li
@
127.107 193.041 mo
133.758 193.041 li
@
162.023 214.591 mo
165.348 217.906 li
@
258.457 217.906 mo
271.759 217.906 li
@
271.759 217.906 mo
271.759 217.906 li
@
258.457 217.906 mo
258.457 217.906 li
@
286.723 226.195 mo
293.373 226.195 li
@
286.723 209.618 mo
293.373 209.618 li
@
334.94 275.925 mo
343.253 267.637 li
@
107.155 151.599 mo
107.155 139.332 li
@
162.023 214.591 mo
162.023 188.068 li
@
258.457 231.168 mo
271.759 217.906 li
@
334.94 309.079 mo
334.94 275.925 li
@
366.531 307.421 mo
366.531 277.583 li
@
107.155 163.866 mo
107.155 151.599 li
@
85.5405 183.426 mo
104.827 183.426 li
@
85.5405 119.771 mo
104.827 119.771 li
@
271.759 217.906 mo
304.68 217.906 li
@
384.82 292.502 mo
384.82 289.187 li
@
318.313 325.656 mo
334.94 309.079 li
@
304.68 266.311 mo
304.68 217.906 li
@
384.82 289.187 mo
384.82 282.556 li
@
366.531 307.421 mo
384.82 325.656 li
@
304.68 217.906 mo
304.68 158.561 li
@
225.204 325.656 mo
318.313 325.656 li
@
165.348 217.906 mo
258.457 217.906 li
@
343.253 241.114 mo
384.82 282.556 li
@
343.253 254.375 mo
366.531 277.583 li
@
329.952 52.3036 mo
329.952 54.2262 328.389 55.7848 326.461 55.7848 cv
324.532 55.7848 322.969 54.2262 322.969 52.3036 cv
322.969 50.381 324.532 48.8225 326.461 48.8225 cv
328.389 48.8225 329.952 50.381 329.952 52.3036 cv
.516442 .431464 .431464 .0754406 cmyk
f
329.952 168.341 mo
329.952 170.264 328.389 171.823 326.461 171.823 cv
324.532 171.823 322.969 170.264 322.969 168.341 cv
322.969 166.419 324.532 164.86 326.461 164.86 cv
328.389 164.86 329.952 166.419 329.952 168.341 cv
f
329.952 102.034 mo
329.952 103.957 328.389 105.515 326.461 105.515 cv
324.532 105.515 322.969 103.957 322.969 102.034 cv
322.969 100.112 324.532 98.553 326.461 98.553 cv
328.389 98.553 329.952 100.112 329.952 102.034 cv
f
388.145 226.36 mo
388.145 228.283 386.582 229.842 384.654 229.842 cv
382.725 229.842 381.162 228.283 381.162 226.36 cv
381.162 224.438 382.725 222.879 384.654 222.879 cv
386.582 222.879 388.145 224.438 388.145 226.36 cv
f
322.636 247.91 mo
322.636 250.382 320.626 252.386 318.147 252.386 cv
315.668 252.386 313.658 250.382 313.658 247.91 cv
313.658 245.438 315.668 243.435 318.147 243.435 cv
320.626 243.435 322.636 245.438 322.636 247.91 cv
f
213.566 176.63 mo
213.566 178.552 212.002 180.111 210.074 180.111 cv
208.146 180.111 206.582 178.552 206.582 176.63 cv
206.582 174.707 208.146 173.149 210.074 173.149 cv
212.002 173.149 213.566 174.707 213.566 176.63 cv
f
213.566 276.091 mo
213.566 278.014 212.002 279.572 210.074 279.572 cv
208.146 279.572 206.582 278.014 206.582 276.091 cv
206.582 274.168 208.146 272.61 210.074 272.61 cv
212.002 272.61 213.566 274.168 213.566 276.091 cv
f
238.506 276.091 mo
238.506 278.014 236.942 279.572 235.014 279.572 cv
233.086 279.572 231.522 278.014 231.522 276.091 cv
231.522 274.168 233.086 272.61 235.014 272.61 cv
236.942 272.61 238.506 274.168 238.506 276.091 cv
f
255.132 251.226 mo
255.132 253.148 253.569 254.707 251.641 254.707 cv
249.712 254.707 248.149 253.148 248.149 251.226 cv
248.149 249.303 249.712 247.745 251.641 247.745 cv
253.569 247.745 255.132 249.303 255.132 251.226 cv
f
171.999 251.226 mo
171.999 253.148 170.436 254.707 168.508 254.707 cv
166.579 254.707 165.016 253.148 165.016 251.226 cv
165.016 249.303 166.579 247.745 168.508 247.745 cv
170.436 247.745 171.999 249.303 171.999 251.226 cv
f
171.999 234.649 mo
171.999 236.571 170.436 238.13 168.508 238.13 cv
166.579 238.13 165.016 236.571 165.016 234.649 cv
165.016 232.726 166.579 231.168 168.508 231.168 cv
170.436 231.168 171.999 232.726 171.999 234.649 cv
f
196.939 312.56 mo
196.939 314.483 195.376 316.041 193.447 316.041 cv
191.519 316.041 189.956 314.483 189.956 312.56 cv
189.956 310.637 191.519 309.079 193.447 309.079 cv
195.376 309.079 196.939 310.637 196.939 312.56 cv
f
171.999 284.379 mo
171.999 286.302 170.436 287.861 168.508 287.861 cv
166.579 287.861 165.016 286.302 165.016 284.379 cv
165.016 282.457 166.579 280.898 168.508 280.898 cv
170.436 280.898 171.999 282.457 171.999 284.379 cv
f
233.518 312.56 mo
233.518 314.483 231.954 316.041 230.026 316.041 cv
228.098 316.041 226.534 314.483 226.534 312.56 cv
226.534 310.637 228.098 309.079 230.026 309.079 cv
231.954 309.079 233.518 310.637 233.518 312.56 cv
f
190.288 151.765 mo
190.288 153.687 188.725 155.246 186.797 155.246 cv
184.868 155.246 183.305 153.687 183.305 151.765 cv
183.305 149.842 184.868 148.284 186.797 148.284 cv
188.725 148.284 190.288 149.842 190.288 151.765 cv
f
160.36 102.034 mo
160.36 103.957 158.797 105.515 156.869 105.515 cv
154.941 105.515 153.377 103.957 153.377 102.034 cv
153.377 100.112 154.941 98.553 156.869 98.553 cv
158.797 98.553 160.36 100.112 160.36 102.034 cv
f
288.385 102.034 mo
288.385 103.957 286.822 105.515 284.894 105.515 cv
282.966 105.515 281.402 103.957 281.402 102.034 cv
281.402 100.112 282.966 98.553 284.894 98.553 cv
286.822 98.553 288.385 100.112 288.385 102.034 cv
f
221.879 135.188 mo
221.879 137.11 220.316 138.669 218.387 138.669 cv
216.459 138.669 214.896 137.11 214.896 135.188 cv
214.896 133.265 216.459 131.707 218.387 131.707 cv
220.316 131.707 221.879 133.265 221.879 135.188 cv
f
221.879 102.034 mo
221.879 103.957 220.316 105.515 218.387 105.515 cv
216.459 105.515 214.896 103.957 214.896 102.034 cv
214.896 100.112 216.459 98.553 218.387 98.553 cv
220.316 98.553 221.879 100.112 221.879 102.034 cv
f
388.145 267.803 mo
388.145 269.725 386.582 271.284 384.654 271.284 cv
382.725 271.284 381.162 269.725 381.162 267.803 cv
381.162 265.88 382.725 264.321 384.654 264.321 cv
386.582 264.321 388.145 265.88 388.145 267.803 cv
f
388.145 367.264 mo
388.145 369.186 386.582 370.745 384.654 370.745 cv
382.725 370.745 381.162 369.186 381.162 367.264 cv
381.162 365.341 382.725 363.782 384.654 363.782 cv
386.582 363.782 388.145 365.341 388.145 367.264 cv
f
47.2993 375.552 mo
47.2993 377.475 45.7361 379.033 43.8077 379.033 cv
41.8793 379.033 40.3161 377.475 40.3161 375.552 cv
40.3161 373.629 41.8793 372.071 43.8077 372.071 cv
45.7361 372.071 47.2993 373.629 47.2993 375.552 cv
f
80.5526 408.706 mo
80.5526 410.628 78.9894 412.187 77.061 412.187 cv
75.1326 412.187 73.5694 410.628 73.5694 408.706 cv
73.5694 406.783 75.1326 405.225 77.061 405.225 cv
78.9894 405.225 80.5526 406.783 80.5526 408.706 cv
f
371.519 325.821 mo
371.519 327.744 369.955 329.303 368.027 329.303 cv
366.099 329.303 364.535 327.744 364.535 325.821 cv
364.535 323.899 366.099 322.34 368.027 322.34 cv
369.955 322.34 371.519 323.899 371.519 325.821 cv
f
338.265 325.821 mo
338.265 327.744 336.702 329.303 334.774 329.303 cv
332.845 329.303 331.282 327.744 331.282 325.821 cv
331.282 323.899 332.845 322.34 334.774 322.34 cv
336.702 322.34 338.265 323.899 338.265 325.821 cv
f
288.385 52.3036 mo
288.385 54.2262 286.822 55.7848 284.894 55.7848 cv
282.966 55.7848 281.402 54.2262 281.402 52.3036 cv
281.402 50.381 282.966 48.8225 284.894 48.8225 cv
286.822 48.8225 288.385 50.381 288.385 52.3036 cv
f
122.119 52.3036 mo
122.119 54.2262 120.556 55.7848 118.628 55.7848 cv
116.699 55.7848 115.136 54.2262 115.136 52.3036 cv
115.136 50.381 116.699 48.8225 118.628 48.8225 cv
120.556 48.8225 122.119 50.381 122.119 52.3036 cv
f
63.9259 44.0152 mo
63.9259 45.9377 62.3627 47.4964 60.4344 47.4964 cv
58.506 47.4964 56.9428 45.9377 56.9428 44.0152 cv
56.9428 42.0926 58.506 40.5341 60.4344 40.5341 cv
62.3627 40.5341 63.9259 42.0926 63.9259 44.0152 cv
f
47.2993 118.611 mo
47.2993 120.534 45.7361 122.092 43.8077 122.092 cv
41.8793 122.092 40.3161 120.534 40.3161 118.611 cv
40.3161 116.688 41.8793 115.13 43.8077 115.13 cv
45.7361 115.13 47.2993 116.688 47.2993 118.611 cv
f
47.2993 184.918 mo
47.2993 186.841 45.7361 188.399 43.8077 188.399 cv
41.8793 188.399 40.3161 186.841 40.3161 184.918 cv
40.3161 182.996 41.8793 181.437 43.8077 181.437 cv
45.7361 181.437 47.2993 182.996 47.2993 184.918 cv
f
47.2993 259.514 mo
47.2993 261.437 45.7361 262.995 43.8077 262.995 cv
41.8793 262.995 40.3161 261.437 40.3161 259.514 cv
40.3161 257.592 41.8793 256.033 43.8077 256.033 cv
45.7361 256.033 47.2993 257.592 47.2993 259.514 cv
f
88.8659 218.072 mo
88.8659 219.995 87.3027 221.553 85.3743 221.553 cv
83.446 221.553 81.8827 219.995 81.8827 218.072 cv
81.8827 216.149 83.446 214.591 85.3743 214.591 cv
87.3027 214.591 88.8659 216.149 88.8659 218.072 cv
f
88.8659 85.4573 mo
88.8659 87.3799 87.3027 88.9384 85.3743 88.9384 cv
83.446 88.9384 81.8827 87.3799 81.8827 85.4573 cv
81.8827 83.5347 83.446 81.9762 85.3743 81.9762 cv
87.3027 81.9762 88.8659 83.5347 88.8659 85.4573 cv
f
388.145 309.245 mo
388.145 311.167 386.582 312.726 384.654 312.726 cv
382.725 312.726 381.162 311.167 381.162 309.245 cv
381.162 307.322 382.725 305.763 384.654 305.763 cv
386.582 305.763 388.145 307.322 388.145 309.245 cv
f
413.085 292.668 mo
413.085 294.59 411.522 296.149 409.594 296.149 cv
407.665 296.149 406.102 294.59 406.102 292.668 cv
406.102 290.745 407.665 289.187 409.594 289.187 cv
411.522 289.187 413.085 290.745 413.085 292.668 cv
f
413.085 325.821 mo
413.085 327.744 411.522 329.303 409.594 329.303 cv
407.665 329.303 406.102 327.744 406.102 325.821 cv
406.102 323.899 407.665 322.34 409.594 322.34 cv
411.522 322.34 413.085 323.899 413.085 325.821 cv
f
346.579 408.706 mo
346.579 410.628 345.015 412.187 343.087 412.187 cv
341.159 412.187 339.596 410.628 339.596 408.706 cv
339.596 406.783 341.159 405.225 343.087 405.225 cv
345.015 405.225 346.579 406.783 346.579 408.706 cv
f
155.372 52.3036 mo
155.372 54.2262 153.809 55.7848 151.881 55.7848 cv
149.953 55.7848 148.389 54.2262 148.389 52.3036 cv
148.389 50.381 149.953 48.8225 151.881 48.8225 cv
153.809 48.8225 155.372 50.381 155.372 52.3036 cv
f
255.132 52.3036 mo
255.132 54.2262 253.569 55.7848 251.641 55.7848 cv
249.712 55.7848 248.149 54.2262 248.149 52.3036 cv
248.149 50.381 249.712 48.8225 251.641 48.8225 cv
253.569 48.8225 255.132 50.381 255.132 52.3036 cv
f
221.879 52.3036 mo
221.879 54.2262 220.316 55.7848 218.387 55.7848 cv
216.459 55.7848 214.896 54.2262 214.896 52.3036 cv
214.896 50.381 216.459 48.8225 218.387 48.8225 cv
220.316 48.8225 221.879 50.381 221.879 52.3036 cv
f
188.626 52.3036 mo
188.626 54.2262 187.062 55.7848 185.134 55.7848 cv
183.206 55.7848 181.643 54.2262 181.643 52.3036 cv
181.643 50.381 183.206 48.8225 185.134 48.8225 cv
187.062 48.8225 188.626 50.381 188.626 52.3036 cv
f
125.445 247.91 mo
125.445 249.833 123.881 251.391 121.953 251.391 cv
120.025 251.391 118.461 249.833 118.461 247.91 cv
118.461 245.988 120.025 244.429 121.953 244.429 cv
123.881 244.429 125.445 245.988 125.445 247.91 cv
f
63.9259 151.765 mo
63.9259 153.687 62.3627 155.246 60.4344 155.246 cv
58.506 155.246 56.9428 153.687 56.9428 151.765 cv
56.9428 149.842 58.506 148.284 60.4344 148.284 cv
62.3627 148.284 63.9259 149.842 63.9259 151.765 cv
f
298.362 184.918 mo
298.362 186.841 296.798 188.399 294.87 188.399 cv
292.942 188.399 291.378 186.841 291.378 184.918 cv
291.378 182.996 292.942 181.437 294.87 181.437 cv
296.798 181.437 298.362 182.996 298.362 184.918 cv
f
298.362 168.341 mo
298.362 170.264 296.798 171.823 294.87 171.823 cv
292.942 171.823 291.378 170.264 291.378 168.341 cv
291.378 166.419 292.942 164.86 294.87 164.86 cv
296.798 164.86 298.362 166.419 298.362 168.341 cv
f
110.481 151.765 mo
110.481 153.687 108.917 155.246 106.989 155.246 cv
105.061 155.246 103.497 153.687 103.497 151.765 cv
103.497 149.842 105.061 148.284 106.989 148.284 cv
108.917 148.284 110.481 149.842 110.481 151.765 cv
f
276.747 342.398 mo
276.747 344.321 275.184 345.879 273.255 345.879 cv
271.327 345.879 269.764 344.321 269.764 342.398 cv
269.764 340.476 271.327 338.917 273.255 338.917 cv
275.184 338.917 276.747 340.476 276.747 342.398 cv
f
147.059 342.398 mo
147.059 344.321 145.496 345.879 143.568 345.879 cv
141.639 345.879 140.076 344.321 140.076 342.398 cv
140.076 340.476 141.639 338.917 143.568 338.917 cv
145.496 338.917 147.059 340.476 147.059 342.398 cv
f
47.2993 334.11 mo
47.2993 336.032 45.7361 337.591 43.8077 337.591 cv
41.8793 337.591 40.3161 336.032 40.3161 334.11 cv
40.3161 332.187 41.8793 330.629 43.8077 330.629 cv
45.7361 330.629 47.2993 332.187 47.2993 334.11 cv
f
147.059 408.706 mo
147.059 410.628 145.496 412.187 143.568 412.187 cv
141.639 412.187 140.076 410.628 140.076 408.706 cv
140.076 406.783 141.639 405.225 143.568 405.225 cv
145.496 405.225 147.059 406.783 147.059 408.706 cv
f
213.566 408.706 mo
213.566 410.628 212.002 412.187 210.074 412.187 cv
208.146 412.187 206.582 410.628 206.582 408.706 cv
206.582 406.783 208.146 405.225 210.074 405.225 cv
212.002 405.225 213.566 406.783 213.566 408.706 cv
f
280.072 408.706 mo
280.072 410.628 278.509 412.187 276.581 412.187 cv
274.652 412.187 273.089 410.628 273.089 408.706 cv
273.089 406.783 274.652 405.225 276.581 405.225 cv
278.509 405.225 280.072 406.783 280.072 408.706 cv
f
354.892 309.245 mo
354.892 311.167 353.329 312.726 351.4 312.726 cv
349.472 312.726 347.909 311.167 347.909 309.245 cv
347.909 307.322 349.472 305.763 351.4 305.763 cv
353.329 305.763 354.892 307.322 354.892 309.245 cv
f
229.86 325.821 mo
229.86 328.476 227.701 330.629 225.038 330.629 cv
222.375 330.629 220.216 328.476 220.216 325.821 cv
220.216 323.167 222.375 321.014 225.038 321.014 cv
227.701 321.014 229.86 323.167 229.86 325.821 cv
f
347.909 267.803 mo
347.909 270.458 345.75 272.61 343.087 272.61 cv
340.424 272.61 338.265 270.458 338.265 267.803 cv
338.265 265.147 340.424 262.995 343.087 262.995 cv
345.75 262.995 347.909 265.147 347.909 267.803 cv
f
309.335 266.476 mo
309.335 269.131 307.176 271.284 304.513 271.284 cv
301.85 271.284 299.692 269.131 299.692 266.476 cv
299.692 263.821 301.85 261.669 304.513 261.669 cv
307.176 261.669 309.335 263.821 309.335 266.476 cv
f
347.909 254.541 mo
347.909 257.196 345.75 259.348 343.087 259.348 cv
340.424 259.348 338.265 257.196 338.265 254.541 cv
338.265 251.886 340.424 249.734 343.087 249.734 cv
345.75 249.734 347.909 251.886 347.909 254.541 cv
f
131.763 193.207 mo
131.763 195.862 129.604 198.014 126.941 198.014 cv
124.278 198.014 122.119 195.862 122.119 193.207 cv
122.119 190.552 124.278 188.399 126.941 188.399 cv
129.604 188.399 131.763 190.552 131.763 193.207 cv
f
131.763 209.784 mo
131.763 212.439 129.604 214.591 126.941 214.591 cv
124.278 214.591 122.119 212.439 122.119 209.784 cv
122.119 207.129 124.278 204.976 126.941 204.976 cv
129.604 204.976 131.763 207.129 131.763 209.784 cv
f
347.909 241.28 mo
347.909 243.935 345.75 246.087 343.087 246.087 cv
340.424 246.087 338.265 243.935 338.265 241.28 cv
338.265 238.625 340.424 236.472 343.087 236.472 cv
345.75 236.472 347.909 238.625 347.909 241.28 cv
f
298.029 209.784 mo
298.029 212.439 295.87 214.591 293.207 214.591 cv
290.544 214.591 288.385 212.439 288.385 209.784 cv
288.385 207.129 290.544 204.976 293.207 204.976 cv
295.87 204.976 298.029 207.129 298.029 209.784 cv
f
298.029 226.36 mo
298.029 229.015 295.87 231.168 293.207 231.168 cv
290.544 231.168 288.385 229.015 288.385 226.36 cv
288.385 223.705 290.544 221.553 293.207 221.553 cv
295.87 221.553 298.029 223.705 298.029 226.36 cv
f
309.335 158.727 mo
309.335 161.382 307.176 163.534 304.513 163.534 cv
301.85 163.534 299.692 161.382 299.692 158.727 cv
299.692 156.072 301.85 153.92 304.513 153.92 cv
307.176 153.92 309.335 156.072 309.335 158.727 cv
f
213.566 251.226 mo
213.566 253.148 212.002 254.707 210.074 254.707 cv
208.146 254.707 206.582 253.148 206.582 251.226 cv
206.582 249.303 208.146 247.745 210.074 247.745 cv
212.002 247.745 213.566 249.303 213.566 251.226 cv
f
213.566 234.649 mo
213.566 236.571 212.002 238.13 210.074 238.13 cv
208.146 238.13 206.582 236.571 206.582 234.649 cv
206.582 232.726 208.146 231.168 210.074 231.168 cv
212.002 231.168 213.566 232.726 213.566 234.649 cv
f
213.566 201.495 mo
213.566 203.418 212.002 204.976 210.074 204.976 cv
208.146 204.976 206.582 203.418 206.582 201.495 cv
206.582 199.573 208.146 198.014 210.074 198.014 cv
212.002 198.014 213.566 199.573 213.566 201.495 cv
f
188.626 201.495 mo
188.626 203.418 187.062 204.976 185.134 204.976 cv
183.206 204.976 181.643 203.418 181.643 201.495 cv
181.643 199.573 183.206 198.014 185.134 198.014 cv
187.062 198.014 188.626 199.573 188.626 201.495 cv
f
188.626 234.649 mo
188.626 236.571 187.062 238.13 185.134 238.13 cv
183.206 238.13 181.643 236.571 181.643 234.649 cv
181.643 232.726 183.206 231.168 185.134 231.168 cv
187.062 231.168 188.626 232.726 188.626 234.649 cv
f
188.626 251.226 mo
188.626 253.148 187.062 254.707 185.134 254.707 cv
183.206 254.707 181.643 253.148 181.643 251.226 cv
181.643 249.303 183.206 247.745 185.134 247.745 cv
187.062 247.745 188.626 249.303 188.626 251.226 cv
f
238.506 251.226 mo
238.506 253.148 236.942 254.707 235.014 254.707 cv
233.086 254.707 231.522 253.148 231.522 251.226 cv
231.522 249.303 233.086 247.745 235.014 247.745 cv
236.942 247.745 238.506 249.303 238.506 251.226 cv
f
238.506 201.495 mo
238.506 203.418 236.942 204.976 235.014 204.976 cv
233.086 204.976 231.522 203.418 231.522 201.495 cv
231.522 199.573 233.086 198.014 235.014 198.014 cv
236.942 198.014 238.506 199.573 238.506 201.495 cv
f
188.626 176.63 mo
188.626 178.552 187.062 180.111 185.134 180.111 cv
183.206 180.111 181.643 178.552 181.643 176.63 cv
181.643 174.707 183.206 173.149 185.134 173.149 cv
187.062 173.149 188.626 174.707 188.626 176.63 cv
f
238.506 234.649 mo
238.506 236.571 236.942 238.13 235.014 238.13 cv
233.086 238.13 231.522 236.571 231.522 234.649 cv
231.522 232.726 233.086 231.168 235.014 231.168 cv
236.942 231.168 238.506 232.726 238.506 234.649 cv
f
213.566 342.398 mo
213.566 344.321 212.002 345.879 210.074 345.879 cv
208.146 345.879 206.582 344.321 206.582 342.398 cv
206.582 340.476 208.146 338.917 210.074 338.917 cv
212.002 338.917 213.566 340.476 213.566 342.398 cv
f
125.445 271.118 mo
125.445 273.04 123.881 274.599 121.953 274.599 cv
120.025 274.599 118.461 273.04 118.461 271.118 cv
118.461 269.195 120.025 267.637 121.953 267.637 cv
123.881 267.637 125.445 269.195 125.445 271.118 cv
f
82.2153 292.668 mo
82.2153 294.59 80.652 296.149 78.7237 296.149 cv
76.7953 296.149 75.2321 294.59 75.2321 292.668 cv
75.2321 290.745 76.7953 289.187 78.7237 289.187 cv
80.652 289.187 82.2153 290.745 82.2153 292.668 cv
f
19.6194 lw
318.313 325.656 mo
318.313 325.656 li
@
318.313 292.502 mo
318.313 292.502 li
@
210.24 68.7148 mo
210.24 68.7148 li
@
210.24 35.561 mo
210.24 35.561 li
@
394.796 335.602 mo
394.796 315.71 li
374.844 315.71 li
374.844 335.602 li
cp
ef
394.796 302.448 mo
394.796 282.556 li
374.844 282.556 li
374.844 302.448 li
cp
ef
126.775 424.785 mo
126.775 392.295 li
94.1865 392.295 li
94.1865 424.785 li
cp
ef
15.629 lw
85.5405 183.426 mo
85.5405 183.426 li
@
85.5405 119.771 mo
85.5405 119.771 li
@
193.281 424.785 mo
193.281 392.295 li
160.693 392.295 li
160.693 424.785 li
cp
ef
133.758 58.7686 mo
133.758 78.6608 li
153.71 78.6608 li
153.71 58.7686 li
cp
ef
19.6194 lw
176.987 68.7148 mo
176.987 68.7148 li
@
143.734 35.561 mo
143.734 35.561 li
@
176.987 35.561 mo
176.987 35.561 li
@
326.294 424.785 mo
326.294 392.295 li
293.706 392.295 li
293.706 424.785 li
cp
ef
276.747 68.7148 mo
276.747 68.7148 li
@
276.747 35.561 mo
276.747 35.561 li
@
351.567 325.656 mo
351.567 325.656 li
@
351.567 292.502 mo
351.567 292.502 li
@
259.788 424.785 mo
259.788 392.295 li
227.2 392.295 li
227.2 424.785 li
cp
ef
243.493 68.7148 mo
243.493 68.7148 li
@
243.493 35.561 mo
243.493 35.561 li
@
117.131 194.036 mo
117.131 177.127 li
97.1792 177.127 li
97.1792 194.036 li
cp
.883665 .769161 0 0 cmyk
ef
117.131 172.486 mo
117.131 155.577 li
97.1792 155.577 li
97.1792 172.486 li
cp
ef
97.1792 131.044 mo
97.1792 147.952 li
117.131 147.952 li
117.131 131.044 li
cp
ef
170.004 205.639 mo
154.042 205.639 li
154.042 223.874 li
170.004 223.874 li
cp
ef
170.004 179.116 mo
154.042 179.116 li
154.042 197.351 li
170.004 197.351 li
cp
ef
97.1792 108.831 mo
97.1792 125.739 li
117.131 125.739 li
117.131 108.831 li
cp
ef
266.438 195.362 mo
250.477 195.362 li
250.477 213.596 li
266.438 213.596 li
cp
ef
289.716 195.693 mo
273.754 195.693 li
273.754 213.928 li
289.716 213.928 li
cp
ef
273.754 240.119 mo
289.716 240.119 li
289.716 221.885 li
273.754 221.885 li
cp
ef
250.477 240.451 mo
266.438 240.451 li
266.438 222.216 li
250.477 222.216 li
cp
ef
146.727 205.308 mo
130.765 205.308 li
130.765 223.542 li
146.727 223.542 li
cp
ef
146.727 178.785 mo
130.765 178.785 li
130.765 197.019 li
146.727 197.019 li
cp
ef
415.08 471.863 mo
5.40019 471.863 li
5.40019 5.39124 li
415.08 5.39124 li
cp
143.734 23.6257 mo
140.741 23.9572 li
137.748 25.2834 li
135.421 27.2726 li
133.425 29.5934 li
132.428 31.9141 li
85.5406 31.9141 li
84.2104 32.2457 li
82.8803 32.9088 li
49.627 66.0624 li
48.962 67.3886 li
48.6295 68.7147 li
48.6295 238.462 li
48.2969 238.462 li
48.2969 263.327 li
109.483 263.327 li
109.483 262.995 li
130.432 262.995 li
130.765 263.658 li
132.76 264.984 li
135.088 265.316 li
158.033 265.316 li
159.363 264.984 li
218.554 324.33 li
218.554 325.656 li
218.886 328.308 li
220.549 330.297 li
222.544 331.955 li
225.204 332.286 li
227.865 331.955 li
229.86 330.297 li
231.522 328.308 li
231.855 325.656 li
231.522 323.003 li
229.86 321.014 li
227.865 319.357 li
225.204 319.025 li
223.874 319.025 li
164.018 259.348 li
163.353 257.028 li
162.023 255.038 li
160.028 253.712 li
158.033 253.381 li
135.088 253.381 li
132.76 253.712 li
130.765 255.038 li
130.432 255.701 li
109.483 255.701 li
109.483 238.462 li
56.2777 238.462 li
55.9452 237.798 li
55.9452 70.3723 li
87.2032 39.2079 li
132.428 39.2079 li
133.425 41.5287 li
135.421 43.8494 li
137.748 45.8386 li
140.741 47.1648 li
143.734 47.4964 li
146.727 47.1648 li
149.719 45.8386 li
152.047 43.8494 li
154.042 41.5287 li
155.372 38.5449 li
155.705 35.561 li
155.372 32.5771 li
154.042 29.5934 li
152.047 27.2726 li
149.719 25.2834 li
146.727 23.9572 li
cp
278.742 23.9572 mo
278.742 33.5718 li
288.385 33.5718 li
288.385 32.5771 li
287.055 29.5934 li
285.06 27.2726 li
282.732 25.2834 li
279.74 23.9572 li
cp
274.752 23.9572 mo
273.754 23.9572 li
270.761 25.2834 li
268.434 27.2726 li
266.438 29.5934 li
265.108 32.5771 li
265.108 33.5718 li
274.752 33.5718 li
cp
288.385 37.5502 mo
278.742 37.5502 li
278.742 47.1648 li
279.74 47.1648 li
282.732 45.8386 li
285.06 43.8494 li
287.055 41.5287 li
288.385 38.5449 li
cp
274.752 37.5502 mo
265.108 37.5502 li
265.108 38.5449 li
266.438 41.5287 li
268.434 43.8494 li
270.761 45.8386 li
273.754 47.1648 li
274.752 47.1648 li
cp
243.494 23.6257 mo
240.501 23.9572 li
237.508 25.2834 li
235.18 27.2726 li
233.185 29.5934 li
231.855 32.5771 li
231.522 35.561 li
231.855 38.5449 li
232.853 40.8656 li
225.869 47.8279 li
225.204 49.154 li
224.872 50.4802 li
224.872 143.31 li
225.204 144.637 li
225.869 145.963 li
256.462 176.464 li
257.127 178.785 li
258.458 180.774 li
260.453 182.1 li
262.448 182.432 li
285.393 182.432 li
287.72 182.1 li
289.716 180.774 li
291.046 178.785 li
291.711 176.464 li
291.046 174.143 li
289.716 172.154 li
287.72 170.828 li
285.393 170.496 li
262.448 170.496 li
261.118 170.828 li
232.187 141.653 li
232.187 76.0085 li
233.85 75.677 li
235.18 77.0031 li
237.508 78.9923 li
239.836 79.987 li
239.836 141.653 li
240.168 142.979 li
240.833 144.305 li
256.462 159.887 li
257.127 162.208 li
258.458 164.197 li
260.453 165.523 li
262.448 165.855 li
285.393 165.855 li
287.72 165.523 li
289.716 164.197 li
291.046 162.208 li
291.711 159.887 li
291.046 157.567 li
289.716 155.577 li
287.72 154.251 li
285.393 153.92 li
262.448 153.92 li
261.118 154.251 li
247.151 139.995 li
247.151 79.987 li
249.479 78.9923 li
251.807 77.0031 li
253.802 74.6824 li
255.132 71.6985 li
255.465 68.7147 li
255.132 65.7309 li
253.802 62.747 li
251.807 60.4263 li
249.479 58.437 li
246.486 57.1109 li
243.494 56.7794 li
240.501 57.1109 li
237.508 58.437 li
235.18 60.4263 li
233.85 61.7524 li
232.187 61.4209 li
232.187 52.1379 li
238.173 46.1702 li
240.501 47.1648 li
243.494 47.4964 li
246.486 47.1648 li
249.479 45.8386 li
251.807 43.8494 li
253.802 41.5287 li
255.132 38.5449 li
255.465 35.561 li
255.132 32.5771 li
253.802 29.5934 li
251.807 27.2726 li
249.479 25.2834 li
246.486 23.9572 li
cp
210.24 23.6257 mo
207.248 23.9572 li
204.255 25.2834 li
201.927 27.2726 li
199.932 29.5934 li
198.602 32.5771 li
198.269 35.561 li
198.602 38.5449 li
199.599 40.8656 li
192.616 47.8279 li
191.951 49.154 li
191.618 50.4802 li
191.618 143.31 li
191.951 144.637 li
192.616 145.963 li
256.462 209.618 li
257.127 211.939 li
258.458 213.928 li
260.453 215.254 li
262.448 215.585 li
285.393 215.585 li
287.72 215.254 li
288.718 214.591 li
290.713 215.917 li
293.374 216.249 li
296.034 215.917 li
298.029 214.259 li
299.692 212.27 li
300.024 209.618 li
299.692 206.966 li
298.029 204.976 li
296.034 203.319 li
293.374 202.987 li
290.713 203.319 li
288.718 204.645 li
287.72 203.982 li
285.393 203.65 li
262.448 203.65 li
261.118 203.982 li
198.934 141.653 li
198.934 76.0085 li
200.597 75.677 li
201.927 77.0031 li
204.255 78.9923 li
206.582 79.987 li
206.582 141.653 li
206.915 142.979 li
207.58 144.305 li
256.462 193.041 li
257.127 195.362 li
258.458 197.351 li
260.453 198.677 li
262.448 199.009 li
285.393 199.009 li
287.72 198.677 li
289.716 197.351 li
291.046 195.362 li
291.711 193.041 li
291.046 190.72 li
289.716 188.731 li
287.72 187.405 li
285.393 187.073 li
262.448 187.073 li
261.118 187.405 li
213.898 139.995 li
213.898 79.987 li
216.226 78.9923 li
218.554 77.0031 li
220.549 74.6824 li
221.879 71.6985 li
222.212 68.7147 li
221.879 65.7309 li
220.549 62.747 li
218.554 60.4263 li
216.226 58.437 li
213.233 57.1109 li
210.24 56.7794 li
207.248 57.1109 li
204.255 58.437 li
201.927 60.4263 li
200.597 61.7524 li
198.934 61.4209 li
198.934 52.1379 li
204.92 46.1702 li
207.248 47.1648 li
210.24 47.4964 li
213.233 47.1648 li
216.226 45.8386 li
218.554 43.8494 li
220.549 41.5287 li
221.879 38.5449 li
222.212 35.561 li
221.879 32.5771 li
220.549 29.5934 li
218.554 27.2726 li
216.226 25.2834 li
213.233 23.9572 li
cp
176.987 23.6257 mo
173.994 23.9572 li
171.001 25.2834 li
168.674 27.2726 li
166.679 29.5934 li
165.348 32.5771 li
165.016 35.561 li
165.348 38.5449 li
166.346 40.8656 li
160.693 46.8333 li
159.695 47.8279 li
159.363 49.4856 li
159.363 77.9978 li
159.695 79.6554 li
160.693 80.65 li
165.016 85.2916 li
165.016 123.75 li
163.353 124.413 li
162.023 122.424 li
160.028 121.098 li
158.033 120.766 li
147.392 120.766 li
147.392 80.65 li
155.705 80.65 li
155.705 56.7794 li
131.763 56.7794 li
131.763 80.65 li
140.076 80.65 li
140.076 120.766 li
135.088 120.766 li
132.76 121.098 li
130.765 122.424 li
129.435 124.413 li
128.77 126.734 li
129.435 129.054 li
130.765 131.044 li
132.76 132.37 li
135.088 132.701 li
158.033 132.701 li
160.028 132.37 li
162.023 131.044 li
163.353 129.054 li
165.016 129.717 li
165.016 140.327 li
163.353 140.99 li
162.023 139 li
160.028 137.674 li
158.033 137.343 li
135.088 137.343 li
132.76 137.674 li
130.765 139 li
130.432 139.664 li
110.813 139.664 li
94.519 123.418 li
95.184 122.424 li
95.5165 119.771 li
95.184 117.119 li
94.1865 114.798 li
92.5237 112.809 li
90.5286 111.151 li
88.2009 110.157 li
85.5406 109.825 li
82.8803 110.157 li
80.5526 111.151 li
78.5574 112.809 li
76.8947 114.798 li
75.8971 117.119 li
75.5646 119.771 li
75.8971 122.424 li
76.8947 124.744 li
78.5574 126.734 li
80.5526 128.391 li
82.8803 129.386 li
85.5406 129.717 li
88.2009 129.386 li
89.1984 128.723 li
106.49 145.963 li
107.82 146.626 li
109.15 146.957 li
130.432 146.957 li
130.765 147.62 li
132.76 148.947 li
135.088 149.278 li
158.033 149.278 li
160.028 148.947 li
162.023 147.62 li
163.353 145.631 li
165.016 146.294 li
165.016 156.904 li
163.353 157.567 li
162.023 155.577 li
160.028 154.251 li
158.033 153.92 li
135.088 153.92 li
132.76 154.251 li
130.765 155.577 li
130.432 156.24 li
109.15 156.24 li
107.82 156.572 li
106.49 157.235 li
89.1984 174.475 li
88.2009 173.812 li
85.5406 173.48 li
82.8803 173.812 li
80.5526 174.806 li
78.5574 176.464 li
76.8947 178.453 li
75.8971 180.774 li
75.5646 183.426 li
75.8971 186.079 li
76.8947 188.399 li
78.5574 190.389 li
80.5526 192.046 li
82.8803 193.041 li
85.5406 193.373 li
88.2009 193.041 li
90.5286 192.046 li
92.5237 190.389 li
94.1865 188.399 li
95.184 186.079 li
95.5165 183.426 li
95.184 180.774 li
94.519 179.78 li
110.813 163.534 li
130.432 163.534 li
130.765 164.197 li
132.76 165.523 li
135.088 165.855 li
158.033 165.855 li
160.028 165.523 li
162.023 164.197 li
163.353 162.208 li
165.016 162.871 li
165.016 173.48 li
163.353 174.143 li
162.023 172.154 li
160.028 170.828 li
158.033 170.496 li
148.389 170.496 li
148.389 176.464 li
148.389 182.432 li
158.033 182.432 li
160.028 182.1 li
162.023 180.774 li
163.353 178.785 li
165.016 179.448 li
165.016 181.437 li
159.363 187.405 li
158.033 187.073 li
135.088 187.073 li
132.76 187.405 li
131.763 188.068 li
129.767 186.742 li
127.107 186.41 li
124.447 186.742 li
122.452 188.399 li
120.789 190.389 li
120.457 193.041 li
120.789 195.693 li
122.452 197.682 li
124.447 199.34 li
127.107 199.672 li
129.767 199.34 li
131.763 198.014 li
132.76 198.677 li
135.088 199.009 li
158.033 199.009 li
160.028 198.677 li
162.023 197.351 li
163.353 195.362 li
164.018 193.041 li
171.334 185.747 li
171.667 185.084 li
173.329 185.747 li
173.329 189.726 li
159.363 203.982 li
158.033 203.65 li
135.088 203.65 li
132.76 203.982 li
131.763 204.645 li
129.767 203.319 li
127.107 202.987 li
124.447 203.319 li
122.452 204.976 li
120.789 206.966 li
120.457 209.618 li
120.789 212.27 li
122.452 214.259 li
124.447 215.917 li
127.107 216.249 li
129.767 215.917 li
131.763 214.591 li
132.76 215.254 li
135.088 215.585 li
158.033 215.585 li
160.028 215.254 li
162.023 213.928 li
163.353 211.939 li
164.018 209.618 li
179.647 194.036 li
180.312 192.709 li
180.645 191.383 li
180.645 79.987 li
182.973 78.9923 li
185.3 77.0031 li
187.296 74.6824 li
188.626 71.6985 li
188.958 68.7147 li
188.626 65.7309 li
187.296 62.747 li
185.3 60.4263 li
182.973 58.437 li
179.98 57.1109 li
176.987 56.7794 li
173.994 57.1109 li
171.001 58.437 li
168.674 60.4263 li
168.341 60.4263 li
167.011 59.7632 li
167.011 50.8118 li
171.667 46.1702 li
173.994 47.1648 li
176.987 47.4964 li
179.98 47.1648 li
182.973 45.8386 li
185.3 43.8494 li
187.296 41.5287 li
188.626 38.5449 li
188.958 35.561 li
188.626 32.5771 li
187.296 29.5934 li
185.3 27.2726 li
182.973 25.2834 li
179.98 23.9572 li
cp
276.747 56.7794 mo
273.754 57.1109 li
270.761 58.437 li
268.434 60.4263 li
266.438 62.747 li
265.108 65.7309 li
264.776 68.7147 li
265.108 71.6985 li
266.106 74.0193 li
250.809 89.27 li
250.144 90.5961 li
249.812 91.9222 li
249.812 135.022 li
250.144 136.348 li
250.809 137.674 li
256.462 143.31 li
257.127 145.631 li
258.458 147.62 li
260.453 148.947 li
262.448 149.278 li
285.393 149.278 li
287.72 148.947 li
289.716 147.62 li
290.048 146.957 li
294.704 146.957 li
294.704 156.572 li
297.031 156.572 li
298.029 157.898 li
297.696 158.561 li
298.362 161.213 li
299.692 163.534 li
302.019 164.86 li
304.68 165.523 li
307.007 164.86 li
309.335 163.534 li
310.998 161.213 li
311.33 158.561 li
311.33 157.898 li
312.328 156.572 li
318.646 156.572 li
318.646 135.685 li
318.646 134.359 li
318.646 126.071 li
294.704 126.071 li
294.704 134.359 li
294.704 135.685 li
294.704 139.664 li
290.048 139.664 li
289.716 139 li
287.72 137.674 li
285.393 137.343 li
262.448 137.343 li
261.118 137.674 li
257.127 133.364 li
257.127 132.038 li
258.79 131.375 li
260.453 132.37 li
262.448 132.701 li
272.091 132.701 li
272.091 126.734 li
272.091 120.766 li
262.448 120.766 li
260.453 121.098 li
258.79 122.092 li
257.127 121.429 li
257.127 93.58 li
271.426 79.3239 li
273.754 80.3185 li
276.747 80.65 li
279.74 80.3185 li
282.732 78.9923 li
285.06 77.0031 li
287.055 74.6824 li
288.385 71.6985 li
288.718 68.7147 li
288.385 65.7309 li
287.055 62.747 li
285.06 60.4263 li
282.732 58.437 li
279.74 57.1109 li
cp
318.646 113.472 mo
308.67 113.472 li
308.67 122.092 li
318.646 122.092 li
cp
304.68 113.472 mo
294.704 113.472 li
294.704 122.092 li
304.68 122.092 li
cp
285.393 120.766 mo
276.082 120.766 li
276.082 124.744 li
291.046 124.744 li
291.046 124.413 li
289.716 122.424 li
287.72 121.098 li
cp
291.046 128.723 mo
276.082 128.723 li
276.082 132.701 li
285.393 132.701 li
287.72 132.37 li
289.716 131.044 li
291.046 129.054 li
cp
144.399 170.496 mo
135.088 170.496 li
132.76 170.828 li
130.765 172.154 li
129.435 174.143 li
129.435 174.475 li
144.399 174.475 li
cp
144.399 178.453 mo
129.435 178.453 li
129.435 178.785 li
130.765 180.774 li
132.76 182.1 li
135.088 182.432 li
144.399 182.432 li
cp
293.374 219.564 mo
290.713 219.895 li
288.718 221.222 li
287.72 220.559 li
285.393 220.227 li
262.448 220.227 li
260.453 220.559 li
258.458 221.885 li
257.127 223.874 li
256.462 226.195 li
257.127 228.515 li
258.458 230.505 li
260.453 231.831 li
262.448 232.162 li
285.393 232.162 li
287.72 231.831 li
288.718 231.168 li
290.713 232.494 li
291.378 232.494 li
291.378 234.152 li
290.048 234.152 li
288.385 234.483 li
287.388 235.478 li
285.725 236.804 li
285.393 236.804 li
262.448 236.804 li
260.453 237.135 li
258.458 238.462 li
257.127 240.451 li
256.462 242.772 li
257.127 245.092 li
258.458 247.081 li
260.453 248.408 li
262.448 248.739 li
285.393 248.739 li
287.72 248.408 li
289.716 247.081 li
291.046 245.092 li
291.711 242.772 li
291.378 241.777 li
295.701 241.777 li
296.366 243.103 li
286.058 253.381 li
285.393 253.381 li
262.448 253.381 li
260.453 253.712 li
258.458 255.038 li
257.127 257.028 li
256.462 259.348 li
257.127 261.669 li
258.458 263.658 li
260.453 264.984 li
262.448 265.316 li
285.393 265.316 li
287.72 264.984 li
289.716 263.658 li
291.046 261.669 li
291.711 259.348 li
291.378 258.685 li
297.031 253.049 li
298.694 253.712 li
298.694 254.707 li
298.694 261.006 li
298.694 263.327 li
298.362 263.99 li
297.696 266.311 li
298.362 268.963 li
299.359 270.621 li
298.694 272.278 li
290.048 272.278 li
289.716 271.615 li
287.72 270.289 li
285.393 269.958 li
262.448 269.958 li
260.453 270.289 li
258.458 271.615 li
257.127 273.604 li
256.462 275.925 li
240.833 291.507 li
240.168 292.834 li
239.836 294.16 li
239.836 390.305 li
225.204 390.305 li
225.204 426.774 li
261.783 426.774 li
261.783 390.305 li
247.151 390.305 li
247.151 295.817 li
261.118 281.561 li
262.448 281.893 li
285.393 281.893 li
287.72 281.561 li
289.716 280.235 li
290.048 279.572 li
314.323 279.572 li
314.656 281.23 li
312.328 282.224 li
310 284.214 li
308.005 286.534 li
306.675 289.518 li
306.675 290.513 li
329.952 290.513 li
329.952 289.518 li
328.622 286.534 li
326.627 284.214 li
324.299 282.224 li
321.971 281.23 li
322.304 279.572 li
333.277 279.572 li
340.926 287.197 li
339.928 289.518 li
339.596 292.502 li
339.928 295.486 li
341.258 298.47 li
343.253 300.79 li
345.581 302.78 li
348.574 304.106 li
351.567 304.437 li
354.56 304.106 li
357.552 302.78 li
359.88 300.79 li
361.875 298.47 li
363.205 295.486 li
363.538 292.502 li
363.205 289.518 li
361.875 286.534 li
359.88 284.214 li
357.552 282.224 li
354.56 280.898 li
351.567 280.567 li
348.574 280.898 li
346.246 281.893 li
339.263 274.931 li
340.261 273.604 li
340.593 273.936 li
343.253 274.268 li
345.914 273.936 li
347.909 272.278 li
348.906 271.284 li
349.904 271.284 li
351.234 270.952 li
352.564 270.289 li
353.562 269.294 li
371.851 269.294 li
371.851 248.408 li
371.851 247.081 li
371.851 238.793 li
359.88 238.793 li
359.88 236.804 li
357.885 236.804 li
357.885 226.195 li
347.909 226.195 li
347.909 234.483 li
346.579 235.478 li
345.914 234.815 li
343.253 234.483 li
340.593 234.815 li
339.596 235.809 li
337.933 234.815 li
337.933 234.483 li
333.942 234.483 li
333.942 237.798 li
329.952 237.798 li
329.952 234.483 li
327.957 234.483 li
320.309 234.483 li
320.309 247.745 li
320.309 261.006 li
331.615 261.006 li
336.603 266.311 li
336.603 267.637 li
336.935 270.289 li
337.933 271.615 li
336.603 272.61 li
336.27 272.61 li
334.94 272.278 li
310.333 272.278 li
309.668 270.621 li
310.998 268.963 li
311.33 266.311 li
310.998 263.99 li
309.335 261.669 li
309.668 261.006 li
316.318 261.006 li
316.318 247.745 li
316.318 234.483 li
308.67 234.483 li
305.012 234.483 li
304.68 234.152 li
295.369 234.152 li
295.369 232.494 li
296.034 232.494 li
298.029 230.836 li
299.692 228.847 li
300.024 226.195 li
299.692 223.542 li
298.029 221.553 li
296.034 219.895 li
cp
158.033 220.227 mo
135.088 220.227 li
132.76 220.559 li
130.765 221.885 li
129.435 223.874 li
128.77 226.195 li
129.435 228.515 li
130.765 230.505 li
132.76 231.831 li
135.088 232.162 li
158.033 232.162 li
160.028 231.831 li
162.023 230.505 li
163.353 228.515 li
164.018 226.195 li
163.353 223.874 li
162.023 221.885 li
160.028 220.559 li
cp
371.851 226.195 mo
361.875 226.195 li
361.875 234.815 li
371.851 234.815 li
cp
158.033 236.804 mo
148.389 236.804 li
148.389 240.782 li
163.353 240.782 li
163.353 240.451 li
162.023 238.462 li
160.028 237.135 li
cp
144.399 236.804 mo
135.088 236.804 li
132.76 237.135 li
130.765 238.462 li
129.435 240.451 li
129.435 240.782 li
144.399 240.782 li
cp
163.353 244.761 mo
148.389 244.761 li
148.389 248.739 li
158.033 248.739 li
160.028 248.408 li
162.023 247.081 li
163.353 245.092 li
cp
144.399 244.761 mo
129.435 244.761 li
129.435 245.092 li
130.765 247.081 li
132.76 248.408 li
135.088 248.739 li
144.399 248.739 li
cp
158.033 269.958 mo
135.088 269.958 li
132.76 270.289 li
130.765 271.615 li
129.435 273.604 li
129.102 275.262 li
117.796 286.534 li
117.131 287.861 li
116.799 289.187 li
116.799 390.305 li
92.1912 390.305 li
92.1912 426.774 li
128.77 426.774 li
128.77 390.305 li
124.114 390.305 li
124.114 290.844 li
133.425 281.561 li
135.088 281.893 li
158.033 281.893 li
160.028 281.561 li
162.023 280.235 li
163.353 278.246 li
164.018 275.925 li
163.353 273.604 li
162.023 271.615 li
160.028 270.289 li
cp
158.033 286.534 mo
135.088 286.534 li
132.76 286.866 li
130.765 288.192 li
129.435 290.181 li
128.77 292.502 li
129.435 294.823 li
130.765 296.812 li
132.76 298.138 li
135.088 298.47 li
157.7 298.47 li
162.023 302.78 li
161.025 304.106 li
160.028 303.443 li
158.033 303.111 li
135.088 303.111 li
132.76 303.443 li
130.765 304.769 li
129.435 306.758 li
128.77 309.079 li
129.435 311.4 li
130.765 313.389 li
132.76 314.715 li
135.088 315.047 li
158.033 315.047 li
160.028 314.715 li
162.023 313.389 li
163.353 311.4 li
164.018 309.079 li
163.353 306.758 li
163.021 305.763 li
164.018 304.769 li
173.329 314.052 li
173.329 390.305 li
158.698 390.305 li
158.698 426.774 li
195.276 426.774 li
195.276 390.305 li
180.645 390.305 li
180.645 312.394 li
180.312 311.068 li
179.647 309.742 li
163.686 293.828 li
164.018 292.502 li
163.353 290.181 li
162.023 288.192 li
160.028 286.866 li
cp
396.791 280.567 mo
372.849 280.567 li
372.849 304.437 li
396.791 304.437 li
cp
285.393 303.111 mo
262.448 303.111 li
260.453 303.443 li
258.458 304.769 li
257.127 306.758 li
256.462 309.079 li
257.127 311.4 li
258.458 313.389 li
260.453 314.715 li
262.448 315.047 li
285.393 315.047 li
287.72 314.715 li
289.716 313.389 li
291.046 311.4 li
291.711 309.079 li
291.046 306.758 li
289.716 304.769 li
287.72 303.443 li
cp
109.483 321.677 mo
80.8851 321.677 li
80.8851 332.286 li
109.483 332.286 li
cp
76.8947 321.677 mo
48.2969 321.677 li
48.2969 332.286 li
76.8947 332.286 li
cp
396.791 313.72 mo
372.849 313.72 li
372.849 337.591 li
396.791 337.591 li
cp
285.393 286.534 mo
262.448 286.534 li
260.453 286.866 li
258.458 288.192 li
257.127 290.181 li
256.462 292.502 li
257.127 294.823 li
258.458 296.812 li
260.453 298.138 li
262.448 298.47 li
285.393 298.47 li
287.055 298.138 li
298.029 309.079 li
298.029 390.305 li
291.711 390.305 li
291.711 426.774 li
328.289 426.774 li
328.289 390.305 li
305.345 390.305 li
305.345 329.634 li
307.007 329.303 li
308.005 331.623 li
310 333.944 li
312.328 335.933 li
315.321 337.259 li
318.313 337.591 li
321.306 337.259 li
324.299 335.933 li
326.627 333.944 li
328.622 331.623 li
329.952 328.64 li
330.285 325.656 li
329.952 322.672 li
328.622 319.688 li
326.627 317.367 li
324.299 315.378 li
321.306 314.052 li
318.313 313.72 li
315.321 314.052 li
312.328 315.378 li
310 317.367 li
308.005 319.688 li
307.007 322.009 li
305.345 321.677 li
305.345 311.068 li
331.615 311.068 li
340.926 320.351 li
339.928 322.672 li
339.596 325.656 li
339.928 328.64 li
341.258 331.623 li
343.253 333.944 li
345.581 335.933 li
348.574 337.259 li
351.567 337.591 li
354.56 337.259 li
357.552 335.933 li
359.88 333.944 li
361.875 331.623 li
363.205 328.64 li
363.538 325.656 li
363.205 322.672 li
361.875 319.688 li
359.88 317.367 li
357.552 315.378 li
354.56 314.052 li
351.567 313.72 li
348.574 314.052 li
346.246 315.047 li
335.938 304.769 li
334.608 304.106 li
333.277 303.774 li
325.629 303.774 li
325.297 302.117 li
326.627 300.79 li
328.622 298.47 li
329.952 295.486 li
329.952 294.491 li
306.675 294.491 li
306.675 295.486 li
308.005 298.47 li
310 300.79 li
311.33 302.117 li
310.998 303.774 li
303.349 303.774 li
291.378 291.839 li
291.046 290.181 li
289.716 288.192 li
287.72 286.866 li
cp
109.483 336.265 mo
80.8851 336.265 li
80.8851 346.543 li
109.483 346.543 li
cp
76.8947 336.265 mo
48.2969 336.265 li
48.2969 346.543 li
76.8947 346.543 li
cp
0 .993988 1 0 cmyk
f
3.3253 lw
63.5934 250.728 mo
52.2873 239.456 li
@
158.698 193.041 mo
168.674 183.095 li
@
168.674 83.6339 mo
163.021 77.9978 li
@
261.783 275.925 mo
274.087 275.925 li
@
261.783 209.618 mo
274.087 209.618 li
@
261.783 193.041 mo
274.087 193.041 li
@
261.783 159.887 mo
274.087 159.887 li
@
253.47 135.022 mo
261.783 143.31 li
@
261.783 143.31 mo
274.087 143.31 li
@
286.723 292.502 mo
301.687 307.421 li
@
285.06 259.348 mo
285.393 259.348 li
@
285.06 242.772 mo
290.048 237.798 li
@
343.253 267.637 mo
349.904 267.637 li
@
339.928 244.429 mo
343.253 241.114 li
@
339.928 251.06 mo
343.253 254.375 li
@
337.6 232.494 mo
355.557 232.494 li
@
120.456 289.187 mo
133.758 275.925 li
@
210.24 141.653 mo
210.24 68.7148 li
@
243.493 141.653 mo
243.493 68.7148 li
@
228.53 50.4802 mo
243.493 35.561 li
@
261.783 176.464 mo
274.087 176.464 li
@
253.47 135.022 mo
253.47 91.9222 li
@
285.393 259.348 mo
300.357 244.429 li
@
334.94 275.925 mo
351.567 292.502 li
@
333.277 307.421 mo
351.567 325.656 li
@
52.2873 239.456 mo
52.2873 68.7148 li
@
168.674 183.095 mo
168.674 83.6339 li
@
163.021 77.9978 mo
163.021 49.4856 li
@
195.276 143.31 mo
195.276 50.4802 li
@
176.987 191.383 mo
176.987 68.7148 li
@
228.53 143.31 mo
228.53 50.4802 li
@
120.456 398.594 mo
120.456 289.187 li
@
176.987 408.54 mo
176.987 312.394 li
@
243.493 408.54 mo
243.493 294.16 li
@
301.687 400.251 mo
301.687 307.421 li
@
110.481 408.54 mo
120.456 398.594 li
@
63.5934 250.728 mo
78.8899 250.728 li
@
146.394 292.502 mo
157.035 292.502 li
@
133.758 275.925 mo
146.394 275.925 li
@
146.394 259.348 mo
158.698 259.348 li
@
146.394 209.618 mo
158.698 209.618 li
@
146.394 193.041 mo
158.698 193.041 li
@
301.687 400.251 mo
310 408.54 li
@
274.087 292.502 mo
286.723 292.502 li
@
301.687 307.421 mo
333.277 307.421 li
@
274.087 275.925 mo
334.94 275.925 li
@
274.087 259.348 mo
285.06 259.348 li
@
331.947 244.429 mo
339.928 244.429 li
@
331.947 251.06 mo
339.928 251.06 li
@
274.087 242.772 mo
285.06 242.772 li
@
290.048 237.798 mo
304.68 237.798 li
@
300.357 244.429 mo
304.68 244.429 li
@
331.947 237.798 mo
337.6 232.494 li
@
274.087 226.195 mo
293.373 226.195 li
@
274.087 209.618 mo
293.373 209.618 li
@
304.68 158.561 mo
306.675 156.572 li
@
304.68 148.284 mo
306.675 145.963 li
@
274.087 143.31 mo
304.014 143.31 li
@
304.014 143.31 mo
306.675 145.963 li
@
274.087 126.734 mo
304.014 126.734 li
@
355.89 262.664 mo
359.88 258.685 li
@
349.904 267.637 mo
358.882 258.685 li
@
358.882 258.685 mo
359.88 258.685 li
@
355.557 232.494 mo
359.88 236.804 li
@
94.1864 259.348 mo
85.5405 250.728 li
@
109.15 143.31 mo
85.5405 119.771 li
@
157.035 292.502 mo
176.987 312.394 li
@
158.698 209.618 mo
176.987 191.383 li
@
143.734 124.081 mo
143.734 68.7148 li
@
146.394 126.734 mo
143.734 124.081 li
@
195.276 50.4802 mo
210.24 35.561 li
@
163.021 49.4856 mo
176.987 35.561 li
@
243.493 294.16 mo
261.783 275.925 li
@
304.68 257.691 mo
304.68 251.06 li
@
304.68 266.311 mo
304.68 257.691 li
@
331.947 257.691 mo
333.277 257.691 li
@
304.68 158.561 mo
304.68 148.284 li
@
243.493 141.653 mo
261.783 159.887 li
@
253.47 91.9222 mo
276.747 68.7148 li
@
304.014 126.734 mo
306.675 124.081 li
@
85.5405 183.426 mo
109.15 159.887 li
@
52.2873 68.7148 mo
85.5405 35.561 li
@
158.698 259.348 mo
225.204 325.656 li
@
94.1864 259.348 mo
146.394 259.348 li
@
127.107 209.618 mo
146.394 209.618 li
@
127.107 193.041 mo
146.394 193.041 li
@
109.15 159.887 mo
146.394 159.887 li
@
109.15 143.31 mo
146.394 143.31 li
@
85.5405 35.561 mo
143.734 35.561 li
@
333.277 257.691 mo
343.253 267.637 li
@
228.53 143.31 mo
261.783 176.464 li
@
210.24 141.653 mo
261.783 193.041 li
@
195.276 143.31 mo
261.783 209.618 li
@
329.952 52.3036 mo
329.952 54.2262 328.389 55.7848 326.461 55.7848 cv
324.532 55.7848 322.969 54.2262 322.969 52.3036 cv
322.969 50.381 324.532 48.8225 326.461 48.8225 cv
328.389 48.8225 329.952 50.381 329.952 52.3036 cv
.516442 .431464 .431464 .0754406 cmyk
f
329.952 168.341 mo
329.952 170.264 328.389 171.823 326.461 171.823 cv
324.532 171.823 322.969 170.264 322.969 168.341 cv
322.969 166.419 324.532 164.86 326.461 164.86 cv
328.389 164.86 329.952 166.419 329.952 168.341 cv
f
329.952 102.034 mo
329.952 103.957 328.389 105.515 326.461 105.515 cv
324.532 105.515 322.969 103.957 322.969 102.034 cv
322.969 100.112 324.532 98.553 326.461 98.553 cv
328.389 98.553 329.952 100.112 329.952 102.034 cv
f
388.145 226.36 mo
388.145 228.283 386.582 229.842 384.654 229.842 cv
382.725 229.842 381.162 228.283 381.162 226.36 cv
381.162 224.438 382.725 222.879 384.654 222.879 cv
386.582 222.879 388.145 224.438 388.145 226.36 cv
f
322.636 247.91 mo
322.636 250.382 320.626 252.386 318.147 252.386 cv
315.668 252.386 313.658 250.382 313.658 247.91 cv
313.658 245.438 315.668 243.435 318.147 243.435 cv
320.626 243.435 322.636 245.438 322.636 247.91 cv
f
213.566 176.63 mo
213.566 178.552 212.002 180.111 210.074 180.111 cv
208.146 180.111 206.582 178.552 206.582 176.63 cv
206.582 174.707 208.146 173.149 210.074 173.149 cv
212.002 173.149 213.566 174.707 213.566 176.63 cv
f
213.566 276.091 mo
213.566 278.014 212.002 279.572 210.074 279.572 cv
208.146 279.572 206.582 278.014 206.582 276.091 cv
206.582 274.168 208.146 272.61 210.074 272.61 cv
212.002 272.61 213.566 274.168 213.566 276.091 cv
f
238.506 276.091 mo
238.506 278.014 236.942 279.572 235.014 279.572 cv
233.086 279.572 231.522 278.014 231.522 276.091 cv
231.522 274.168 233.086 272.61 235.014 272.61 cv
236.942 272.61 238.506 274.168 238.506 276.091 cv
f
255.132 251.226 mo
255.132 253.148 253.569 254.707 251.641 254.707 cv
249.712 254.707 248.149 253.148 248.149 251.226 cv
248.149 249.303 249.712 247.745 251.641 247.745 cv
253.569 247.745 255.132 249.303 255.132 251.226 cv
f
171.999 251.226 mo
171.999 253.148 170.436 254.707 168.508 254.707 cv
166.579 254.707 165.016 253.148 165.016 251.226 cv
165.016 249.303 166.579 247.745 168.508 247.745 cv
170.436 247.745 171.999 249.303 171.999 251.226 cv
f
171.999 234.649 mo
171.999 236.571 170.436 238.13 168.508 238.13 cv
166.579 238.13 165.016 236.571 165.016 234.649 cv
165.016 232.726 166.579 231.168 168.508 231.168 cv
170.436 231.168 171.999 232.726 171.999 234.649 cv
f
196.939 312.56 mo
196.939 314.483 195.376 316.041 193.447 316.041 cv
191.519 316.041 189.956 314.483 189.956 312.56 cv
189.956 310.637 191.519 309.079 193.447 309.079 cv
195.376 309.079 196.939 310.637 196.939 312.56 cv
f
171.999 284.379 mo
171.999 286.302 170.436 287.861 168.508 287.861 cv
166.579 287.861 165.016 286.302 165.016 284.379 cv
165.016 282.457 166.579 280.898 168.508 280.898 cv
170.436 280.898 171.999 282.457 171.999 284.379 cv
f
233.518 312.56 mo
233.518 314.483 231.954 316.041 230.026 316.041 cv
228.098 316.041 226.534 314.483 226.534 312.56 cv
226.534 310.637 228.098 309.079 230.026 309.079 cv
231.954 309.079 233.518 310.637 233.518 312.56 cv
f
190.288 151.765 mo
190.288 153.687 188.725 155.246 186.797 155.246 cv
184.868 155.246 183.305 153.687 183.305 151.765 cv
183.305 149.842 184.868 148.284 186.797 148.284 cv
188.725 148.284 190.288 149.842 190.288 151.765 cv
f
160.36 102.034 mo
160.36 103.957 158.797 105.515 156.869 105.515 cv
154.941 105.515 153.377 103.957 153.377 102.034 cv
153.377 100.112 154.941 98.553 156.869 98.553 cv
158.797 98.553 160.36 100.112 160.36 102.034 cv
f
288.385 102.034 mo
288.385 103.957 286.822 105.515 284.894 105.515 cv
282.966 105.515 281.402 103.957 281.402 102.034 cv
281.402 100.112 282.966 98.553 284.894 98.553 cv
286.822 98.553 288.385 100.112 288.385 102.034 cv
f
221.879 135.188 mo
221.879 137.11 220.316 138.669 218.387 138.669 cv
216.459 138.669 214.896 137.11 214.896 135.188 cv
214.896 133.265 216.459 131.707 218.387 131.707 cv
220.316 131.707 221.879 133.265 221.879 135.188 cv
f
221.879 102.034 mo
221.879 103.957 220.316 105.515 218.387 105.515 cv
216.459 105.515 214.896 103.957 214.896 102.034 cv
214.896 100.112 216.459 98.553 218.387 98.553 cv
220.316 98.553 221.879 100.112 221.879 102.034 cv
f
388.145 267.803 mo
388.145 269.725 386.582 271.284 384.654 271.284 cv
382.725 271.284 381.162 269.725 381.162 267.803 cv
381.162 265.88 382.725 264.321 384.654 264.321 cv
386.582 264.321 388.145 265.88 388.145 267.803 cv
f
388.145 367.264 mo
388.145 369.186 386.582 370.745 384.654 370.745 cv
382.725 370.745 381.162 369.186 381.162 367.264 cv
381.162 365.341 382.725 363.782 384.654 363.782 cv
386.582 363.782 388.145 365.341 388.145 367.264 cv
f
47.2993 375.552 mo
47.2993 377.475 45.7361 379.033 43.8077 379.033 cv
41.8793 379.033 40.3161 377.475 40.3161 375.552 cv
40.3161 373.629 41.8793 372.071 43.8077 372.071 cv
45.7361 372.071 47.2993 373.629 47.2993 375.552 cv
f
80.5526 408.706 mo
80.5526 410.628 78.9894 412.187 77.061 412.187 cv
75.1326 412.187 73.5694 410.628 73.5694 408.706 cv
73.5694 406.783 75.1326 405.225 77.061 405.225 cv
78.9894 405.225 80.5526 406.783 80.5526 408.706 cv
f
371.519 325.821 mo
371.519 327.744 369.955 329.303 368.027 329.303 cv
366.099 329.303 364.535 327.744 364.535 325.821 cv
364.535 323.899 366.099 322.34 368.027 322.34 cv
369.955 322.34 371.519 323.899 371.519 325.821 cv
f
338.265 325.821 mo
338.265 327.744 336.702 329.303 334.774 329.303 cv
332.845 329.303 331.282 327.744 331.282 325.821 cv
331.282 323.899 332.845 322.34 334.774 322.34 cv
336.702 322.34 338.265 323.899 338.265 325.821 cv
f
288.385 52.3036 mo
288.385 54.2262 286.822 55.7848 284.894 55.7848 cv
282.966 55.7848 281.402 54.2262 281.402 52.3036 cv
281.402 50.381 282.966 48.8225 284.894 48.8225 cv
286.822 48.8225 288.385 50.381 288.385 52.3036 cv
f
122.119 52.3036 mo
122.119 54.2262 120.556 55.7848 118.628 55.7848 cv
116.699 55.7848 115.136 54.2262 115.136 52.3036 cv
115.136 50.381 116.699 48.8225 118.628 48.8225 cv
120.556 48.8225 122.119 50.381 122.119 52.3036 cv
f
63.9259 44.0152 mo
63.9259 45.9377 62.3627 47.4964 60.4344 47.4964 cv
58.506 47.4964 56.9428 45.9377 56.9428 44.0152 cv
56.9428 42.0926 58.506 40.5341 60.4344 40.5341 cv
62.3627 40.5341 63.9259 42.0926 63.9259 44.0152 cv
f
47.2993 118.611 mo
47.2993 120.534 45.7361 122.092 43.8077 122.092 cv
41.8793 122.092 40.3161 120.534 40.3161 118.611 cv
40.3161 116.688 41.8793 115.13 43.8077 115.13 cv
45.7361 115.13 47.2993 116.688 47.2993 118.611 cv
f
47.2993 184.918 mo
47.2993 186.841 45.7361 188.399 43.8077 188.399 cv
41.8793 188.399 40.3161 186.841 40.3161 184.918 cv
40.3161 182.996 41.8793 181.437 43.8077 181.437 cv
45.7361 181.437 47.2993 182.996 47.2993 184.918 cv
f
47.2993 259.514 mo
47.2993 261.437 45.7361 262.995 43.8077 262.995 cv
41.8793 262.995 40.3161 261.437 40.3161 259.514 cv
40.3161 257.592 41.8793 256.033 43.8077 256.033 cv
45.7361 256.033 47.2993 257.592 47.2993 259.514 cv
f
88.8659 218.072 mo
88.8659 219.995 87.3027 221.553 85.3743 221.553 cv
83.446 221.553 81.8827 219.995 81.8827 218.072 cv
81.8827 216.149 83.446 214.591 85.3743 214.591 cv
87.3027 214.591 88.8659 216.149 88.8659 218.072 cv
f
88.8659 85.4573 mo
88.8659 87.3799 87.3027 88.9384 85.3743 88.9384 cv
83.446 88.9384 81.8827 87.3799 81.8827 85.4573 cv
81.8827 83.5347 83.446 81.9762 85.3743 81.9762 cv
87.3027 81.9762 88.8659 83.5347 88.8659 85.4573 cv
f
388.145 309.245 mo
388.145 311.167 386.582 312.726 384.654 312.726 cv
382.725 312.726 381.162 311.167 381.162 309.245 cv
381.162 307.322 382.725 305.763 384.654 305.763 cv
386.582 305.763 388.145 307.322 388.145 309.245 cv
f
413.085 292.668 mo
413.085 294.59 411.522 296.149 409.594 296.149 cv
407.665 296.149 406.102 294.59 406.102 292.668 cv
406.102 290.745 407.665 289.187 409.594 289.187 cv
411.522 289.187 413.085 290.745 413.085 292.668 cv
f
413.085 325.821 mo
413.085 327.744 411.522 329.303 409.594 329.303 cv
407.665 329.303 406.102 327.744 406.102 325.821 cv
406.102 323.899 407.665 322.34 409.594 322.34 cv
411.522 322.34 413.085 323.899 413.085 325.821 cv
f
346.579 408.706 mo
346.579 410.628 345.015 412.187 343.087 412.187 cv
341.159 412.187 339.596 410.628 339.596 408.706 cv
339.596 406.783 341.159 405.225 343.087 405.225 cv
345.015 405.225 346.579 406.783 346.579 408.706 cv
f
155.372 52.3036 mo
155.372 54.2262 153.809 55.7848 151.881 55.7848 cv
149.953 55.7848 148.389 54.2262 148.389 52.3036 cv
148.389 50.381 149.953 48.8225 151.881 48.8225 cv
153.809 48.8225 155.372 50.381 155.372 52.3036 cv
f
255.132 52.3036 mo
255.132 54.2262 253.569 55.7848 251.641 55.7848 cv
249.712 55.7848 248.149 54.2262 248.149 52.3036 cv
248.149 50.381 249.712 48.8225 251.641 48.8225 cv
253.569 48.8225 255.132 50.381 255.132 52.3036 cv
f
221.879 52.3036 mo
221.879 54.2262 220.316 55.7848 218.387 55.7848 cv
216.459 55.7848 214.896 54.2262 214.896 52.3036 cv
214.896 50.381 216.459 48.8225 218.387 48.8225 cv
220.316 48.8225 221.879 50.381 221.879 52.3036 cv
f
188.626 52.3036 mo
188.626 54.2262 187.062 55.7848 185.134 55.7848 cv
183.206 55.7848 181.643 54.2262 181.643 52.3036 cv
181.643 50.381 183.206 48.8225 185.134 48.8225 cv
187.062 48.8225 188.626 50.381 188.626 52.3036 cv
f
125.445 247.91 mo
125.445 249.833 123.881 251.391 121.953 251.391 cv
120.025 251.391 118.461 249.833 118.461 247.91 cv
118.461 245.988 120.025 244.429 121.953 244.429 cv
123.881 244.429 125.445 245.988 125.445 247.91 cv
f
63.9259 151.765 mo
63.9259 153.687 62.3627 155.246 60.4344 155.246 cv
58.506 155.246 56.9428 153.687 56.9428 151.765 cv
56.9428 149.842 58.506 148.284 60.4344 148.284 cv
62.3627 148.284 63.9259 149.842 63.9259 151.765 cv
f
298.362 184.918 mo
298.362 186.841 296.798 188.399 294.87 188.399 cv
292.942 188.399 291.378 186.841 291.378 184.918 cv
291.378 182.996 292.942 181.437 294.87 181.437 cv
296.798 181.437 298.362 182.996 298.362 184.918 cv
f
298.362 168.341 mo
298.362 170.264 296.798 171.823 294.87 171.823 cv
292.942 171.823 291.378 170.264 291.378 168.341 cv
291.378 166.419 292.942 164.86 294.87 164.86 cv
296.798 164.86 298.362 166.419 298.362 168.341 cv
f
110.481 151.765 mo
110.481 153.687 108.917 155.246 106.989 155.246 cv
105.061 155.246 103.497 153.687 103.497 151.765 cv
103.497 149.842 105.061 148.284 106.989 148.284 cv
108.917 148.284 110.481 149.842 110.481 151.765 cv
f
276.747 342.398 mo
276.747 344.321 275.184 345.879 273.255 345.879 cv
271.327 345.879 269.764 344.321 269.764 342.398 cv
269.764 340.476 271.327 338.917 273.255 338.917 cv
275.184 338.917 276.747 340.476 276.747 342.398 cv
f
147.059 342.398 mo
147.059 344.321 145.496 345.879 143.568 345.879 cv
141.639 345.879 140.076 344.321 140.076 342.398 cv
140.076 340.476 141.639 338.917 143.568 338.917 cv
145.496 338.917 147.059 340.476 147.059 342.398 cv
f
47.2993 334.11 mo
47.2993 336.032 45.7361 337.591 43.8077 337.591 cv
41.8793 337.591 40.3161 336.032 40.3161 334.11 cv
40.3161 332.187 41.8793 330.629 43.8077 330.629 cv
45.7361 330.629 47.2993 332.187 47.2993 334.11 cv
f
147.059 408.706 mo
147.059 410.628 145.496 412.187 143.568 412.187 cv
141.639 412.187 140.076 410.628 140.076 408.706 cv
140.076 406.783 141.639 405.225 143.568 405.225 cv
145.496 405.225 147.059 406.783 147.059 408.706 cv
f
213.566 408.706 mo
213.566 410.628 212.002 412.187 210.074 412.187 cv
208.146 412.187 206.582 410.628 206.582 408.706 cv
206.582 406.783 208.146 405.225 210.074 405.225 cv
212.002 405.225 213.566 406.783 213.566 408.706 cv
f
280.072 408.706 mo
280.072 410.628 278.509 412.187 276.581 412.187 cv
274.652 412.187 273.089 410.628 273.089 408.706 cv
273.089 406.783 274.652 405.225 276.581 405.225 cv
278.509 405.225 280.072 406.783 280.072 408.706 cv
f
354.892 309.245 mo
354.892 311.167 353.329 312.726 351.4 312.726 cv
349.472 312.726 347.909 311.167 347.909 309.245 cv
347.909 307.322 349.472 305.763 351.4 305.763 cv
353.329 305.763 354.892 307.322 354.892 309.245 cv
f
229.86 325.821 mo
229.86 328.476 227.701 330.629 225.038 330.629 cv
222.375 330.629 220.216 328.476 220.216 325.821 cv
220.216 323.167 222.375 321.014 225.038 321.014 cv
227.701 321.014 229.86 323.167 229.86 325.821 cv
f
347.909 267.803 mo
347.909 270.458 345.75 272.61 343.087 272.61 cv
340.424 272.61 338.265 270.458 338.265 267.803 cv
338.265 265.147 340.424 262.995 343.087 262.995 cv
345.75 262.995 347.909 265.147 347.909 267.803 cv
f
309.335 266.476 mo
309.335 269.131 307.176 271.284 304.513 271.284 cv
301.85 271.284 299.692 269.131 299.692 266.476 cv
299.692 263.821 301.85 261.669 304.513 261.669 cv
307.176 261.669 309.335 263.821 309.335 266.476 cv
f
347.909 254.541 mo
347.909 257.196 345.75 259.348 343.087 259.348 cv
340.424 259.348 338.265 257.196 338.265 254.541 cv
338.265 251.886 340.424 249.734 343.087 249.734 cv
345.75 249.734 347.909 251.886 347.909 254.541 cv
f
131.763 193.207 mo
131.763 195.862 129.604 198.014 126.941 198.014 cv
124.278 198.014 122.119 195.862 122.119 193.207 cv
122.119 190.552 124.278 188.399 126.941 188.399 cv
129.604 188.399 131.763 190.552 131.763 193.207 cv
f
131.763 209.784 mo
131.763 212.439 129.604 214.591 126.941 214.591 cv
124.278 214.591 122.119 212.439 122.119 209.784 cv
122.119 207.129 124.278 204.976 126.941 204.976 cv
129.604 204.976 131.763 207.129 131.763 209.784 cv
f
347.909 241.28 mo
347.909 243.935 345.75 246.087 343.087 246.087 cv
340.424 246.087 338.265 243.935 338.265 241.28 cv
338.265 238.625 340.424 236.472 343.087 236.472 cv
345.75 236.472 347.909 238.625 347.909 241.28 cv
f
298.029 209.784 mo
298.029 212.439 295.87 214.591 293.207 214.591 cv
290.544 214.591 288.385 212.439 288.385 209.784 cv
288.385 207.129 290.544 204.976 293.207 204.976 cv
295.87 204.976 298.029 207.129 298.029 209.784 cv
f
298.029 226.36 mo
298.029 229.015 295.87 231.168 293.207 231.168 cv
290.544 231.168 288.385 229.015 288.385 226.36 cv
288.385 223.705 290.544 221.553 293.207 221.553 cv
295.87 221.553 298.029 223.705 298.029 226.36 cv
f
309.335 158.727 mo
309.335 161.382 307.176 163.534 304.513 163.534 cv
301.85 163.534 299.692 161.382 299.692 158.727 cv
299.692 156.072 301.85 153.92 304.513 153.92 cv
307.176 153.92 309.335 156.072 309.335 158.727 cv
f
213.566 251.226 mo
213.566 253.148 212.002 254.707 210.074 254.707 cv
208.146 254.707 206.582 253.148 206.582 251.226 cv
206.582 249.303 208.146 247.745 210.074 247.745 cv
212.002 247.745 213.566 249.303 213.566 251.226 cv
f
213.566 234.649 mo
213.566 236.571 212.002 238.13 210.074 238.13 cv
208.146 238.13 206.582 236.571 206.582 234.649 cv
206.582 232.726 208.146 231.168 210.074 231.168 cv
212.002 231.168 213.566 232.726 213.566 234.649 cv
f
213.566 201.495 mo
213.566 203.418 212.002 204.976 210.074 204.976 cv
208.146 204.976 206.582 203.418 206.582 201.495 cv
206.582 199.573 208.146 198.014 210.074 198.014 cv
212.002 198.014 213.566 199.573 213.566 201.495 cv
f
188.626 201.495 mo
188.626 203.418 187.062 204.976 185.134 204.976 cv
183.206 204.976 181.643 203.418 181.643 201.495 cv
181.643 199.573 183.206 198.014 185.134 198.014 cv
187.062 198.014 188.626 199.573 188.626 201.495 cv
f
188.626 234.649 mo
188.626 236.571 187.062 238.13 185.134 238.13 cv
183.206 238.13 181.643 236.571 181.643 234.649 cv
181.643 232.726 183.206 231.168 185.134 231.168 cv
187.062 231.168 188.626 232.726 188.626 234.649 cv
f
188.626 251.226 mo
188.626 253.148 187.062 254.707 185.134 254.707 cv
183.206 254.707 181.643 253.148 181.643 251.226 cv
181.643 249.303 183.206 247.745 185.134 247.745 cv
187.062 247.745 188.626 249.303 188.626 251.226 cv
f
238.506 251.226 mo
238.506 253.148 236.942 254.707 235.014 254.707 cv
233.086 254.707 231.522 253.148 231.522 251.226 cv
231.522 249.303 233.086 247.745 235.014 247.745 cv
236.942 247.745 238.506 249.303 238.506 251.226 cv
f
238.506 201.495 mo
238.506 203.418 236.942 204.976 235.014 204.976 cv
233.086 204.976 231.522 203.418 231.522 201.495 cv
231.522 199.573 233.086 198.014 235.014 198.014 cv
236.942 198.014 238.506 199.573 238.506 201.495 cv
f
188.626 176.63 mo
188.626 178.552 187.062 180.111 185.134 180.111 cv
183.206 180.111 181.643 178.552 181.643 176.63 cv
181.643 174.707 183.206 173.149 185.134 173.149 cv
187.062 173.149 188.626 174.707 188.626 176.63 cv
f
238.506 234.649 mo
238.506 236.571 236.942 238.13 235.014 238.13 cv
233.086 238.13 231.522 236.571 231.522 234.649 cv
231.522 232.726 233.086 231.168 235.014 231.168 cv
236.942 231.168 238.506 232.726 238.506 234.649 cv
f
213.566 342.398 mo
213.566 344.321 212.002 345.879 210.074 345.879 cv
208.146 345.879 206.582 344.321 206.582 342.398 cv
206.582 340.476 208.146 338.917 210.074 338.917 cv
212.002 338.917 213.566 340.476 213.566 342.398 cv
f
125.445 271.118 mo
125.445 273.04 123.881 274.599 121.953 274.599 cv
120.025 274.599 118.461 273.04 118.461 271.118 cv
118.461 269.195 120.025 267.637 121.953 267.637 cv
123.881 267.637 125.445 269.195 125.445 271.118 cv
f
82.2153 292.668 mo
82.2153 294.59 80.652 296.149 78.7237 296.149 cv
76.7953 296.149 75.2321 294.59 75.2321 292.668 cv
75.2321 290.745 76.7953 289.187 78.7237 289.187 cv
80.652 289.187 82.2153 290.745 82.2153 292.668 cv
f
19.6194 lw
318.313 325.656 mo
318.313 325.656 li
@
318.313 292.502 mo
318.313 292.502 li
@
210.24 68.7148 mo
210.24 68.7148 li
@
210.24 35.561 mo
210.24 35.561 li
@
394.796 335.602 mo
394.796 315.71 li
374.844 315.71 li
374.844 335.602 li
cp
ef
394.796 302.448 mo
394.796 282.556 li
374.844 282.556 li
374.844 302.448 li
cp
ef
126.775 424.785 mo
126.775 392.295 li
94.1865 392.295 li
94.1865 424.785 li
cp
ef
15.629 lw
85.5405 183.426 mo
85.5405 183.426 li
@
85.5405 119.771 mo
85.5405 119.771 li
@
193.281 424.785 mo
193.281 392.295 li
160.693 392.295 li
160.693 424.785 li
cp
ef
133.758 58.7686 mo
133.758 78.6608 li
153.71 78.6608 li
153.71 58.7686 li
cp
ef
19.6194 lw
176.987 68.7148 mo
176.987 68.7148 li
@
143.734 35.561 mo
143.734 35.561 li
@
176.987 35.561 mo
176.987 35.561 li
@
326.294 424.785 mo
326.294 392.295 li
293.706 392.295 li
293.706 424.785 li
cp
ef
276.747 68.7148 mo
276.747 68.7148 li
@
276.747 35.561 mo
276.747 35.561 li
@
351.567 325.656 mo
351.567 325.656 li
@
351.567 292.502 mo
351.567 292.502 li
@
259.788 424.785 mo
259.788 392.295 li
227.2 392.295 li
227.2 424.785 li
cp
ef
243.493 68.7148 mo
243.493 68.7148 li
@
243.493 35.561 mo
243.493 35.561 li
@
310.665 259.017 mo
325.962 259.017 li
325.962 236.472 li
310.665 236.472 li
cp
0 .993988 1 0 cmyk
ef
7.98081 lw
262.448 292.502 mo
285.393 292.502 li
@
262.448 275.925 mo
285.393 275.925 li
@
262.448 242.772 mo
285.393 242.772 li
@
300.689 252.718 mo
308.67 252.718 li
308.67 249.402 li
300.689 249.402 li
cp
ef
300.689 246.087 mo
308.67 246.087 li
308.67 242.772 li
300.689 242.772 li
cp
ef
301.022 239.456 mo
308.67 239.456 li
308.67 236.141 li
301.022 236.141 li
cp
ef
328.289 239.456 mo
335.938 239.456 li
335.938 236.141 li
328.289 236.141 li
cp
ef
327.957 246.087 mo
335.938 246.087 li
335.938 242.772 li
327.957 242.772 li
cp
ef
327.957 252.718 mo
335.938 252.718 li
335.938 249.402 li
327.957 249.402 li
cp
ef
262.448 209.618 mo
285.393 209.618 li
@
262.448 193.041 mo
285.393 193.041 li
@
262.448 159.887 mo
285.393 159.887 li
@
262.448 143.31 mo
285.393 143.31 li
@
50.2921 323.667 mo
50.2921 344.553 li
107.488 344.553 li
107.488 323.667 li
cp
ef
50.2921 240.451 mo
50.2921 261.338 li
107.488 261.338 li
107.488 240.451 li
cp
ef
262.448 309.079 mo
285.393 309.079 li
@
262.448 176.464 mo
285.393 176.464 li
@
262.448 226.195 mo
285.393 226.195 li
@
262.448 259.348 mo
285.393 259.348 li
@
300.689 259.348 mo
308.337 259.348 li
308.337 256.033 li
300.689 256.033 li
cp
ef
327.957 259.348 mo
335.605 259.348 li
335.605 256.033 li
327.957 256.033 li
cp
ef
262.448 126.734 mo
285.393 126.734 li
@
296.699 137.674 mo
296.699 154.583 li
316.651 154.583 li
316.651 137.674 li
cp
ef
296.699 115.461 mo
296.699 132.37 li
316.651 132.37 li
316.651 115.461 li
cp
ef
349.904 250.397 mo
349.904 267.305 li
369.856 267.305 li
369.856 250.397 li
cp
ef
349.904 228.184 mo
349.904 245.092 li
369.856 245.092 li
369.856 228.184 li
cp
ef
135.088 292.502 mo
158.033 292.502 li
@
135.088 275.925 mo
158.033 275.925 li
@
135.088 242.772 mo
158.033 242.772 li
@
135.088 209.618 mo
158.033 209.618 li
@
135.088 193.041 mo
158.033 193.041 li
@
135.088 159.887 mo
158.033 159.887 li
@
135.088 143.31 mo
158.033 143.31 li
@
135.088 309.079 mo
158.033 309.079 li
@
135.088 176.464 mo
158.033 176.464 li
@
135.088 226.195 mo
158.033 226.195 li
@
135.088 259.348 mo
158.033 259.348 li
@
135.088 126.734 mo
158.033 126.734 li
@
2.66029 lw
150.384 222.548 mo
150.384 206.634 li
.275517 .158297 .678767 0 cmyk
@
150.384 196.025 mo
150.384 180.111 li
@
270.096 212.602 mo
270.096 196.688 li
@
270.096 239.125 mo
270.096 223.211 li
@
186.298 219.564 mo
187.961 215.917 li
187.961 215.585 li
188.293 215.254 li
188.626 215.254 li
188.626 214.922 li
188.958 214.922 li
189.291 214.922 li
189.956 214.922 li
189.956 219.564 li
191.951 219.564 li
191.951 208.292 li
188.626 208.292 li
188.293 208.292 li
187.961 208.292 li
187.628 208.292 li
186.963 208.292 li
186.63 208.292 li
186.63 208.623 li
186.298 208.623 li
185.965 208.623 li
185.633 208.955 li
185.3 208.955 li
185.3 209.286 li
184.968 209.618 li
184.635 209.949 li
184.635 210.281 li
184.635 210.612 li
184.635 210.944 li
184.635 211.276 li
184.635 211.607 li
184.635 211.939 li
184.635 212.602 li
184.968 212.602 li
184.968 212.933 li
185.3 213.265 li
185.3 213.596 li
185.633 213.596 li
185.965 213.928 li
186.298 213.928 li
186.63 213.928 li
186.963 214.259 li
186.63 214.259 li
186.298 214.591 li
185.965 214.922 li
185.633 215.254 li
185.633 215.585 li
185.633 215.917 li
183.638 219.564 li
cp
186.63 211.607 mo
186.63 211.607 li
186.63 211.276 li
186.63 210.944 li
186.963 210.944 li
186.963 210.612 li
187.296 210.281 li
187.628 210.281 li
187.961 209.949 li
188.293 209.949 li
188.626 209.949 li
188.958 209.949 li
189.956 209.949 li
189.956 213.265 li
188.958 213.265 li
188.626 213.265 li
188.293 213.265 li
187.961 212.933 li
187.628 212.933 li
187.296 212.933 li
187.296 212.602 li
186.963 212.602 li
186.963 212.27 li
186.963 211.939 li
186.63 211.939 li
186.63 211.607 li
cp
f
174.327 216.249 mo
174.327 216.249 li
174.327 216.58 li
174.327 216.912 li
174.327 217.243 li
174.659 217.243 li
174.659 217.575 li
174.659 217.906 li
174.992 217.906 li
174.992 218.238 li
175.324 218.238 li
175.324 218.569 li
175.657 218.901 li
175.989 218.901 li
176.322 219.232 li
176.655 219.232 li
176.987 219.232 li
177.32 219.564 li
177.652 219.564 li
177.985 219.564 li
178.317 219.564 li
178.65 219.564 li
178.982 219.564 li
179.647 219.895 li
179.98 219.895 li
180.312 219.564 li
180.645 219.564 li
180.977 219.564 li
181.31 219.564 li
181.643 219.564 li
181.975 219.564 li
181.975 217.575 li
181.975 217.906 li
181.643 217.906 li
181.31 217.906 li
180.977 217.906 li
180.645 217.906 li
180.312 217.906 li
179.98 217.906 li
179.647 217.906 li
179.315 217.906 li
178.982 217.906 li
178.65 217.906 li
177.985 217.906 li
177.652 217.906 li
177.652 217.575 li
177.32 217.575 li
177.32 217.243 li
176.987 217.243 li
176.655 216.912 li
176.655 216.58 li
176.655 216.249 li
176.655 215.917 li
176.655 215.585 li
176.987 215.254 li
177.32 214.922 li
177.652 214.922 li
177.652 214.591 li
177.985 214.591 li
178.317 214.591 li
178.65 214.591 li
178.982 214.591 li
179.315 214.591 li
180.645 214.591 li
180.645 212.933 li
179.647 212.933 li
179.315 212.933 li
178.982 212.933 li
178.65 212.933 li
178.317 212.602 li
177.985 212.602 li
177.652 212.27 li
177.32 211.939 li
177.32 211.607 li
176.987 211.276 li
176.987 210.944 li
177.32 210.944 li
177.32 210.612 li
177.32 210.281 li
177.652 210.281 li
177.652 209.949 li
177.985 209.949 li
178.317 209.949 li
178.65 209.949 li
178.982 209.618 li
179.315 209.618 li
179.315 209.949 li
179.647 209.949 li
179.98 209.949 li
180.312 209.949 li
180.645 209.949 li
180.977 209.949 li
181.31 210.281 li
181.643 210.281 li
181.643 208.623 li
181.643 208.292 li
181.31 208.292 li
180.977 208.292 li
180.645 208.292 li
180.312 208.292 li
180.312 207.96 li
179.98 207.96 li
179.647 207.96 li
179.315 207.96 li
178.982 207.96 li
178.65 207.96 li
178.317 207.96 li
177.985 207.96 li
177.652 207.96 li
177.32 208.292 li
176.987 208.292 li
176.655 208.292 li
176.322 208.623 li
175.989 208.623 li
175.989 208.955 li
175.657 208.955 li
175.657 209.286 li
175.324 209.286 li
175.324 209.618 li
174.992 209.949 li
174.992 210.281 li
174.992 210.612 li
174.992 210.944 li
174.992 211.276 li
174.992 211.607 li
175.324 211.939 li
175.324 212.27 li
175.324 212.602 li
175.657 212.602 li
175.657 212.933 li
175.989 212.933 li
176.322 213.265 li
176.655 213.596 li
176.322 213.596 li
175.989 213.596 li
175.657 213.928 li
175.324 214.259 li
174.992 214.259 li
174.992 214.591 li
174.659 214.591 li
174.659 214.922 li
174.659 215.254 li
174.327 215.254 li
174.327 215.585 li
174.327 216.249 li
cp
f
186.298 194.699 mo
187.961 191.052 li
187.961 190.72 li
188.293 190.389 li
188.626 190.389 li
188.626 190.057 li
188.958 190.057 li
189.291 190.057 li
189.956 190.057 li
189.956 194.699 li
191.951 194.699 li
191.951 183.426 li
188.626 183.426 li
188.293 183.426 li
187.961 183.426 li
187.628 183.426 li
186.963 183.426 li
186.63 183.426 li
186.63 183.758 li
186.298 183.758 li
185.965 183.758 li
185.633 184.09 li
185.3 184.09 li
185.3 184.421 li
184.968 184.753 li
184.635 185.084 li
184.635 185.416 li
184.635 185.747 li
184.635 186.079 li
184.635 186.41 li
184.635 186.742 li
184.635 187.073 li
184.635 187.736 li
184.968 187.736 li
184.968 188.068 li
185.3 188.399 li
185.3 188.731 li
185.633 188.731 li
185.965 189.063 li
186.298 189.063 li
186.63 189.063 li
186.963 189.394 li
186.63 189.394 li
186.298 189.726 li
185.965 190.057 li
185.633 190.389 li
185.633 190.72 li
185.633 191.052 li
183.638 194.699 li
cp
186.63 186.742 mo
186.63 186.742 li
186.63 186.41 li
186.63 186.079 li
186.963 186.079 li
186.963 185.747 li
187.296 185.416 li
187.628 185.416 li
187.961 185.084 li
188.293 185.084 li
188.626 185.084 li
188.958 185.084 li
189.956 185.084 li
189.956 188.399 li
188.958 188.399 li
188.626 188.399 li
188.293 188.399 li
187.961 188.068 li
187.628 188.068 li
187.296 188.068 li
187.296 187.736 li
186.963 187.736 li
186.963 187.405 li
186.963 187.073 li
186.63 187.073 li
186.63 186.742 li
cp
f
181.975 194.699 mo
181.975 193.041 li
179.315 190.389 li
179.315 190.057 li
178.982 190.057 li
178.65 189.726 li
178.317 189.394 li
178.317 189.063 li
177.985 189.063 li
177.985 188.731 li
177.652 188.399 li
177.652 188.068 li
177.32 188.068 li
177.32 187.736 li
177.32 187.405 li
177.32 187.073 li
176.987 187.073 li
176.987 186.742 li
176.987 186.41 li
176.987 186.079 li
177.32 186.079 li
177.32 185.747 li
177.652 185.416 li
177.985 185.084 li
178.317 185.084 li
178.65 185.084 li
178.982 185.084 li
179.315 185.084 li
179.647 185.084 li
179.98 185.416 li
180.312 185.416 li
180.645 185.747 li
180.977 186.079 li
182.308 184.753 li
181.975 184.753 li
181.975 184.421 li
181.643 184.421 li
181.31 184.09 li
181.31 183.758 li
180.977 183.758 li
180.645 183.426 li
180.312 183.426 li
179.98 183.426 li
179.647 183.426 li
179.315 183.095 li
178.982 183.095 li
178.65 183.095 li
178.317 183.095 li
177.985 183.095 li
177.652 183.095 li
177.32 183.426 li
176.987 183.426 li
176.655 183.426 li
176.322 183.758 li
175.989 183.758 li
175.657 184.09 li
175.657 184.421 li
175.324 184.421 li
175.324 184.753 li
174.992 185.084 li
174.992 185.416 li
174.992 185.747 li
174.992 186.079 li
174.659 186.079 li
174.659 186.41 li
174.659 186.742 li
174.992 187.073 li
174.992 187.405 li
174.992 187.736 li
174.992 188.068 li
175.324 188.399 li
175.657 189.063 li
175.657 189.394 li
175.989 189.394 li
175.989 189.726 li
176.322 189.726 li
176.322 190.057 li
176.655 190.057 li
176.655 190.389 li
176.987 190.389 li
176.987 190.72 li
177.32 191.052 li
177.652 191.052 li
179.315 192.709 li
174.327 192.709 li
174.327 194.699 li
cp
f
85.8731 166.186 mo
85.8731 166.186 li
86.2057 166.186 li
86.5381 166.186 li
86.8707 166.518 li
87.2032 166.518 li
87.5358 166.518 li
87.8683 166.518 li
88.2009 166.518 li
88.5334 166.518 li
88.8659 166.518 li
89.1984 166.518 li
89.5309 166.518 li
89.8635 166.518 li
90.196 166.518 li
90.5286 166.518 li
90.8611 166.186 li
91.1937 166.186 li
91.5262 166.186 li
91.8587 165.855 li
92.1912 165.855 li
92.1912 165.523 li
92.5237 165.192 li
92.8563 164.86 li
93.1888 164.529 li
93.1888 164.197 li
93.5214 163.866 li
93.5214 163.534 li
93.5214 163.203 li
93.5214 162.871 li
93.8539 162.54 li
93.8539 161.877 li
93.8539 161.545 li
93.8539 160.882 li
93.8539 160.55 li
93.8539 160.219 li
93.8539 159.887 li
93.8539 159.224 li
93.5214 158.893 li
93.5214 158.561 li
93.5214 158.23 li
93.1888 158.23 li
93.1888 157.898 li
93.1888 157.567 li
92.8563 157.235 li
92.8563 156.904 li
92.5237 156.572 li
92.1912 156.572 li
92.1912 156.24 li
91.8587 156.24 li
91.8587 155.909 li
91.5262 155.577 li
91.1937 155.577 li
90.8611 155.246 li
90.5286 155.246 li
90.196 155.246 li
89.8635 155.246 li
89.5309 154.914 li
89.1984 154.914 li
88.5334 154.914 li
88.2009 154.914 li
87.8683 154.914 li
87.5358 154.914 li
87.2032 154.914 li
87.2032 155.246 li
86.8707 155.246 li
86.5381 155.246 li
86.2057 155.246 li
85.8731 155.246 li
85.8731 157.567 li
86.2057 157.235 li
86.5381 157.235 li
86.8707 157.235 li
87.2032 156.904 li
87.5358 156.904 li
87.8683 156.904 li
88.5334 156.904 li
88.8659 156.904 li
89.1984 156.904 li
89.5309 156.904 li
89.5309 157.235 li
89.8635 157.235 li
90.196 157.235 li
90.196 157.567 li
90.5286 157.567 li
90.5286 157.898 li
90.8611 157.898 li
90.8611 158.23 li
91.1937 158.561 li
91.1937 158.893 li
91.1937 159.224 li
91.5262 159.556 li
91.5262 159.887 li
91.5262 160.219 li
91.5262 160.55 li
91.5262 160.882 li
91.5262 161.213 li
91.5262 161.545 li
91.5262 161.877 li
91.1937 162.54 li
91.1937 162.871 li
91.1937 163.203 li
90.8611 163.203 li
90.8611 163.534 li
90.8611 163.866 li
90.5286 163.866 li
90.5286 164.197 li
90.196 164.197 li
89.8635 164.529 li
89.5309 164.529 li
89.1984 164.529 li
88.8659 164.86 li
88.5334 164.86 li
88.2009 164.86 li
87.8683 164.86 li
87.8683 164.529 li
87.5358 164.529 li
87.2032 164.529 li
86.8707 164.529 li
86.5381 164.529 li
86.5381 164.197 li
86.2057 164.197 li
85.8731 164.197 li
cp
f
75.8971 162.871 mo
75.8971 162.871 li
75.8971 163.203 li
75.8971 163.534 li
76.2297 163.866 li
76.2297 164.197 li
76.2297 164.529 li
76.5622 164.529 li
76.5622 164.86 li
76.8947 165.192 li
77.2272 165.523 li
77.5598 165.855 li
77.8923 165.855 li
78.2248 166.186 li
78.5574 166.186 li
78.8899 166.518 li
79.2225 166.518 li
79.555 166.518 li
79.8875 166.518 li
80.2201 166.518 li
80.5526 166.518 li
80.8851 166.85 li
81.2176 166.85 li
81.5502 166.85 li
81.5502 166.518 li
81.8827 166.518 li
82.2153 166.518 li
82.5478 166.518 li
82.8803 166.518 li
83.2129 166.518 li
83.5453 166.518 li
83.5453 164.529 li
83.2129 164.529 li
83.2129 164.86 li
82.8803 164.86 li
82.5478 164.86 li
82.2153 164.86 li
81.8827 164.86 li
81.5502 164.86 li
80.8851 164.86 li
80.5526 164.86 li
80.2201 164.86 li
79.8875 164.86 li
79.555 164.529 li
79.2225 164.529 li
78.8899 164.529 li
78.8899 164.197 li
78.5574 164.197 li
78.5574 163.866 li
78.2248 163.534 li
78.2248 163.203 li
78.2248 162.871 li
78.2248 162.54 li
78.5574 162.208 li
78.5574 161.877 li
78.8899 161.545 li
79.2225 161.545 li
79.555 161.545 li
79.555 161.213 li
79.8875 161.213 li
80.5526 161.213 li
80.8851 161.213 li
83.2129 161.213 li
83.2129 155.246 li
76.5622 155.246 li
76.5622 157.235 li
81.2176 157.235 li
81.2176 159.556 li
80.2201 159.556 li
79.8875 159.556 li
79.555 159.556 li
79.2225 159.556 li
78.5574 159.556 li
78.2248 159.887 li
77.8923 159.887 li
77.5598 159.887 li
77.2272 160.219 li
76.8947 160.55 li
76.5622 160.882 li
76.2297 161.213 li
76.2297 161.545 li
76.2297 161.877 li
75.8971 162.208 li
75.8971 162.54 li
75.8971 162.871 li
cp
f
110.148 441.694 mo
110.148 441.694 li
110.148 441.362 li
110.148 441.03 li
110.148 440.699 li
110.148 440.367 li
109.815 440.036 li
109.483 439.704 li
109.483 439.373 li
109.15 439.373 li
108.818 439.041 li
108.485 438.71 li
108.153 438.71 li
107.82 438.378 li
107.488 438.378 li
107.155 438.378 li
106.823 438.378 li
106.49 438.378 li
106.158 438.378 li
105.825 438.047 li
105.493 438.047 li
105.16 438.047 li
104.827 438.047 li
104.495 438.378 li
103.83 438.378 li
103.497 438.378 li
103.165 438.378 li
102.832 438.378 li
102.167 438.71 li
102.167 440.699 li
102.5 440.699 li
102.832 440.699 li
102.832 440.367 li
103.165 440.367 li
103.497 440.367 li
103.83 440.367 li
104.162 440.367 li
104.162 440.036 li
104.495 440.036 li
104.827 440.036 li
105.16 440.036 li
105.493 440.036 li
105.825 440.036 li
106.158 440.036 li
106.49 440.036 li
106.823 440.036 li
106.823 440.367 li
107.155 440.367 li
107.488 440.367 li
107.488 440.699 li
107.82 441.03 li
107.82 441.362 li
107.82 441.694 li
107.82 442.025 li
107.488 442.025 li
107.488 442.357 li
107.155 442.357 li
106.823 442.688 li
106.49 442.688 li
106.49 443.02 li
106.158 443.02 li
105.825 443.02 li
105.493 443.351 li
105.16 443.351 li
104.827 443.351 li
104.827 443.683 li
104.495 443.683 li
104.162 444.014 li
103.83 444.014 li
103.497 444.346 li
103.165 444.346 li
103.165 444.677 li
102.832 444.677 li
102.832 445.009 li
102.5 445.34 li
102.5 445.672 li
102.5 446.004 li
102.167 446.004 li
102.167 446.335 li
102.167 446.667 li
102.167 446.998 li
102.5 447.33 li
102.5 447.661 li
102.5 447.993 li
102.832 448.324 li
102.832 448.656 li
103.165 448.656 li
103.165 448.987 li
103.497 448.987 li
103.497 449.319 li
103.83 449.319 li
104.162 449.319 li
104.495 449.65 li
104.827 449.65 li
105.16 449.65 li
105.493 449.982 li
105.825 449.982 li
106.158 449.982 li
106.49 449.982 li
106.823 449.982 li
107.155 449.982 li
107.488 449.982 li
107.82 449.982 li
108.153 449.65 li
108.485 449.65 li
108.818 449.65 li
109.15 449.65 li
109.483 449.65 li
109.483 447.661 li
109.15 447.661 li
108.818 447.661 li
108.818 447.993 li
108.485 447.993 li
108.153 447.993 li
107.82 447.993 li
107.488 447.993 li
107.155 447.993 li
106.823 447.993 li
106.49 447.993 li
106.158 447.993 li
105.825 447.993 li
105.493 447.993 li
105.16 447.993 li
105.16 447.661 li
104.827 447.661 li
104.827 447.33 li
104.495 446.998 li
104.495 446.667 li
104.827 446.335 li
104.827 446.004 li
105.16 446.004 li
105.493 445.672 li
105.825 445.672 li
106.158 445.672 li
106.49 445.34 li
106.823 445.34 li
107.155 445.009 li
107.488 445.009 li
107.82 445.009 li
107.82 444.677 li
108.153 444.677 li
108.485 444.677 li
108.485 444.346 li
108.818 444.346 li
109.15 444.014 li
109.483 444.014 li
109.483 443.683 li
109.815 443.351 li
109.815 443.02 li
110.148 443.02 li
110.148 442.688 li
110.148 442.357 li
110.148 442.025 li
110.148 441.694 li
cp
f
117.131 442.357 mo
117.131 438.71 li
115.136 438.71 li
115.136 442.357 li
111.811 442.357 li
111.811 444.014 li
115.136 444.014 li
115.136 447.33 li
117.131 447.33 li
117.131 444.014 li
120.457 444.014 li
120.457 442.357 li
cp
f
85.8731 147.952 mo
85.8731 147.952 li
86.2057 147.952 li
86.5381 147.952 li
86.8707 148.284 li
87.2032 148.284 li
87.5358 148.284 li
87.8683 148.284 li
88.2009 148.284 li
88.5334 148.284 li
88.8659 148.284 li
89.1984 148.284 li
89.5309 148.284 li
89.8635 148.284 li
90.196 148.284 li
90.5286 148.284 li
90.8611 147.952 li
91.1937 147.952 li
91.5262 147.952 li
91.8587 147.62 li
92.1912 147.62 li
92.1912 147.289 li
92.5237 146.957 li
92.8563 146.626 li
93.1888 146.294 li
93.1888 145.963 li
93.5214 145.631 li
93.5214 145.3 li
93.5214 144.968 li
93.5214 144.637 li
93.8539 144.305 li
93.8539 143.642 li
93.8539 143.31 li
93.8539 142.647 li
93.8539 142.316 li
93.8539 141.984 li
93.8539 141.653 li
93.8539 140.99 li
93.5214 140.658 li
93.5214 140.327 li
93.5214 139.995 li
93.1888 139.995 li
93.1888 139.664 li
93.1888 139.332 li
92.8563 139 li
92.8563 138.669 li
92.5237 138.337 li
92.1912 138.337 li
92.1912 138.006 li
91.8587 138.006 li
91.8587 137.674 li
91.5262 137.343 li
91.1937 137.343 li
90.8611 137.011 li
90.5286 137.011 li
90.196 137.011 li
89.8635 137.011 li
89.5309 136.68 li
89.1984 136.68 li
88.5334 136.68 li
88.2009 136.68 li
87.8683 136.68 li
87.5358 136.68 li
87.2032 136.68 li
87.2032 137.011 li
86.8707 137.011 li
86.5381 137.011 li
86.2057 137.011 li
85.8731 137.011 li
85.8731 139.332 li
86.2057 139 li
86.5381 139 li
86.8707 139 li
87.2032 138.669 li
87.5358 138.669 li
87.8683 138.669 li
88.5334 138.669 li
88.8659 138.669 li
89.1984 138.669 li
89.5309 138.669 li
89.5309 139 li
89.8635 139 li
90.196 139 li
90.196 139.332 li
90.5286 139.332 li
90.5286 139.664 li
90.8611 139.664 li
90.8611 139.995 li
91.1937 140.327 li
91.1937 140.658 li
91.1937 140.99 li
91.5262 141.321 li
91.5262 141.653 li
91.5262 141.984 li
91.5262 142.316 li
91.5262 142.647 li
91.5262 142.979 li
91.5262 143.31 li
91.5262 143.642 li
91.1937 144.305 li
91.1937 144.637 li
91.1937 144.968 li
90.8611 144.968 li
90.8611 145.3 li
90.8611 145.631 li
90.5286 145.631 li
90.5286 145.963 li
90.196 145.963 li
89.8635 146.294 li
89.5309 146.294 li
89.1984 146.294 li
88.8659 146.626 li
88.5334 146.626 li
88.2009 146.626 li
87.8683 146.626 li
87.8683 146.294 li
87.5358 146.294 li
87.2032 146.294 li
86.8707 146.294 li
86.5381 146.294 li
86.5381 145.963 li
86.2057 145.963 li
85.8731 145.963 li
cp
f
76.8947 145.963 mo
76.8947 148.284 li
79.2225 148.284 li
79.2225 145.963 li
84.543 145.963 li
84.543 144.305 li
79.8875 137.011 li
76.8947 137.011 li
76.8947 143.974 li
75.2321 143.974 li
75.2321 145.963 li
cp
79.2225 139 mo
82.2153 143.974 li
79.2225 143.974 li
cp
f
176.655 441.694 mo
176.655 441.694 li
176.655 441.362 li
176.655 441.03 li
176.655 440.699 li
176.655 440.367 li
176.322 440.036 li
175.989 439.704 li
175.989 439.373 li
175.657 439.373 li
175.324 439.041 li
174.992 438.71 li
174.659 438.71 li
174.327 438.378 li
173.994 438.378 li
173.662 438.378 li
173.329 438.378 li
172.997 438.378 li
172.664 438.378 li
172.332 438.047 li
171.999 438.047 li
171.667 438.047 li
171.334 438.047 li
171.001 438.378 li
170.336 438.378 li
170.004 438.378 li
169.671 438.378 li
169.339 438.378 li
168.674 438.71 li
168.674 440.699 li
169.006 440.699 li
169.339 440.699 li
169.339 440.367 li
169.671 440.367 li
170.004 440.367 li
170.336 440.367 li
170.669 440.367 li
170.669 440.036 li
171.001 440.036 li
171.334 440.036 li
171.667 440.036 li
171.999 440.036 li
172.332 440.036 li
172.664 440.036 li
172.997 440.036 li
173.329 440.036 li
173.329 440.367 li
173.662 440.367 li
173.994 440.367 li
173.994 440.699 li
174.327 441.03 li
174.327 441.362 li
174.327 441.694 li
174.327 442.025 li
173.994 442.025 li
173.994 442.357 li
173.662 442.357 li
173.329 442.688 li
172.997 442.688 li
172.997 443.02 li
172.664 443.02 li
172.332 443.02 li
171.999 443.351 li
171.667 443.351 li
171.334 443.351 li
171.334 443.683 li
171.001 443.683 li
170.669 444.014 li
170.336 444.014 li
170.004 444.346 li
169.671 444.346 li
169.671 444.677 li
169.339 444.677 li
169.339 445.009 li
169.006 445.34 li
169.006 445.672 li
169.006 446.004 li
168.674 446.004 li
168.674 446.335 li
168.674 446.667 li
168.674 446.998 li
169.006 447.33 li
169.006 447.661 li
169.006 447.993 li
169.339 448.324 li
169.339 448.656 li
169.671 448.656 li
169.671 448.987 li
170.004 448.987 li
170.004 449.319 li
170.336 449.319 li
170.669 449.319 li
171.001 449.65 li
171.334 449.65 li
171.667 449.65 li
171.999 449.982 li
172.332 449.982 li
172.664 449.982 li
172.997 449.982 li
173.329 449.982 li
173.662 449.982 li
173.994 449.982 li
174.327 449.982 li
174.659 449.65 li
174.992 449.65 li
175.324 449.65 li
175.657 449.65 li
175.989 449.65 li
175.989 447.661 li
175.657 447.661 li
175.324 447.661 li
175.324 447.993 li
174.992 447.993 li
174.659 447.993 li
174.327 447.993 li
173.994 447.993 li
173.662 447.993 li
173.329 447.993 li
172.997 447.993 li
172.664 447.993 li
172.332 447.993 li
171.999 447.993 li
171.667 447.993 li
171.667 447.661 li
171.334 447.661 li
171.334 447.33 li
171.001 446.998 li
171.001 446.667 li
171.334 446.335 li
171.334 446.004 li
171.667 446.004 li
171.999 445.672 li
172.332 445.672 li
172.664 445.672 li
172.997 445.34 li
173.329 445.34 li
173.662 445.009 li
173.994 445.009 li
174.327 445.009 li
174.327 444.677 li
174.659 444.677 li
174.992 444.677 li
174.992 444.346 li
175.324 444.346 li
175.657 444.014 li
175.989 444.014 li
175.989 443.683 li
176.322 443.351 li
176.322 443.02 li
176.655 443.02 li
176.655 442.688 li
176.655 442.357 li
176.655 442.025 li
176.655 441.694 li
cp
f
179.98 442.025 mo
179.98 444.014 li
185.3 444.014 li
185.3 442.025 li
cp
f
301.687 438.378 mo
301.687 449.65 li
308.67 449.65 li
308.67 447.993 li
304.015 447.993 li
304.015 445.009 li
308.337 445.009 li
308.337 443.351 li
304.015 443.351 li
304.015 440.036 li
308.67 440.036 li
308.67 438.378 li
cp
f
315.653 442.357 mo
315.653 438.71 li
313.991 438.71 li
313.991 442.357 li
310.665 442.357 li
310.665 444.014 li
313.991 444.014 li
313.991 447.33 li
315.653 447.33 li
315.653 444.014 li
318.978 444.014 li
318.978 442.357 li
cp
f
237.841 216.249 mo
239.503 212.602 li
239.503 212.27 li
239.836 211.939 li
240.168 211.939 li
240.168 211.607 li
240.501 211.607 li
240.833 211.607 li
241.498 211.607 li
241.498 216.249 li
243.494 216.249 li
243.494 204.976 li
240.168 204.976 li
239.836 204.976 li
239.503 204.976 li
239.171 204.976 li
238.506 204.976 li
238.173 204.976 li
238.173 205.308 li
237.841 205.308 li
237.508 205.308 li
237.175 205.639 li
236.843 205.639 li
236.843 205.971 li
236.51 206.302 li
236.178 206.634 li
236.178 206.966 li
236.178 207.297 li
236.178 207.629 li
236.178 207.96 li
236.178 208.292 li
236.178 208.623 li
236.178 209.286 li
236.51 209.286 li
236.51 209.618 li
236.843 209.949 li
236.843 210.281 li
237.175 210.281 li
237.508 210.612 li
237.841 210.612 li
238.173 210.612 li
238.506 210.944 li
238.173 210.944 li
237.841 211.276 li
237.508 211.607 li
237.175 211.939 li
237.175 212.27 li
237.175 212.602 li
235.18 216.249 li
cp
238.173 208.292 mo
238.173 208.292 li
238.173 207.96 li
238.173 207.629 li
238.506 207.629 li
238.506 207.297 li
238.838 206.966 li
239.171 206.966 li
239.503 206.634 li
239.836 206.634 li
240.168 206.634 li
240.501 206.634 li
241.498 206.634 li
241.498 209.949 li
240.501 209.949 li
240.168 209.949 li
239.836 209.949 li
239.503 209.618 li
239.171 209.618 li
238.838 209.618 li
238.838 209.286 li
238.506 209.286 li
238.506 208.955 li
238.506 208.623 li
238.173 208.623 li
238.173 208.292 li
cp
f
225.869 212.602 mo
225.869 212.602 li
225.869 212.933 li
226.202 213.265 li
226.202 213.596 li
226.202 213.928 li
226.534 214.259 li
226.534 214.591 li
226.867 214.922 li
227.2 215.254 li
227.532 215.585 li
227.865 215.585 li
228.197 215.917 li
228.53 215.917 li
228.862 215.917 li
229.195 216.249 li
229.527 216.249 li
229.86 216.249 li
230.192 216.249 li
230.525 216.249 li
231.19 216.58 li
231.522 216.58 li
231.522 216.249 li
231.855 216.249 li
232.187 216.249 li
232.52 216.249 li
232.853 216.249 li
233.185 216.249 li
233.518 216.249 li
233.518 214.259 li
233.185 214.259 li
233.185 214.591 li
232.853 214.591 li
232.52 214.591 li
232.187 214.591 li
231.855 214.591 li
231.522 214.591 li
230.857 214.591 li
230.525 214.591 li
230.192 214.591 li
229.86 214.591 li
229.527 214.259 li
229.195 214.259 li
228.862 214.259 li
228.862 213.928 li
228.53 213.928 li
228.53 213.596 li
228.53 213.265 li
228.197 212.933 li
228.197 212.602 li
228.53 212.27 li
228.53 211.939 li
228.862 211.607 li
228.862 211.276 li
229.195 211.276 li
229.527 211.276 li
229.86 210.944 li
230.192 210.944 li
230.525 210.944 li
230.857 210.944 li
233.185 210.944 li
233.185 204.976 li
226.534 204.976 li
226.534 206.966 li
231.19 206.966 li
231.19 209.286 li
230.525 209.286 li
230.192 209.286 li
229.86 209.286 li
229.527 209.286 li
229.195 209.286 li
228.862 209.286 li
228.53 209.286 li
228.197 209.618 li
227.865 209.618 li
227.532 209.618 li
227.2 209.949 li
226.867 210.281 li
226.534 210.612 li
226.534 210.944 li
226.202 210.944 li
226.202 211.276 li
226.202 211.607 li
226.202 211.939 li
225.869 212.27 li
225.869 212.602 li
cp
f
235.18 438.378 mo
235.18 449.65 li
242.163 449.65 li
242.163 447.993 li
237.508 447.993 li
237.508 445.009 li
241.831 445.009 li
241.831 443.351 li
237.508 443.351 li
237.508 440.036 li
242.163 440.036 li
242.163 438.378 li
cp
f
245.489 442.025 mo
245.489 444.014 li
251.142 444.014 li
251.142 442.025 li
cp
f
237.841 231.168 mo
239.503 227.521 li
239.503 227.189 li
239.836 226.858 li
240.168 226.858 li
240.168 226.526 li
240.501 226.526 li
240.833 226.526 li
241.498 226.526 li
241.498 231.168 li
243.494 231.168 li
243.494 219.895 li
240.168 219.895 li
239.836 219.895 li
239.503 219.895 li
239.171 219.895 li
238.506 219.895 li
238.173 219.895 li
238.173 220.227 li
237.841 220.227 li
237.508 220.227 li
237.175 220.559 li
236.843 220.559 li
236.843 220.89 li
236.51 221.222 li
236.178 221.553 li
236.178 221.885 li
236.178 222.216 li
236.178 222.548 li
236.178 222.879 li
236.178 223.211 li
236.178 223.542 li
236.178 224.205 li
236.51 224.205 li
236.51 224.537 li
236.843 224.869 li
236.843 225.2 li
237.175 225.2 li
237.508 225.532 li
237.841 225.532 li
238.173 225.532 li
238.506 225.863 li
238.173 225.863 li
237.841 226.195 li
237.508 226.526 li
237.175 226.858 li
237.175 227.189 li
237.175 227.521 li
235.18 231.168 li
cp
238.173 223.211 mo
238.173 223.211 li
238.173 222.879 li
238.173 222.548 li
238.506 222.548 li
238.506 222.216 li
238.838 221.885 li
239.171 221.885 li
239.503 221.553 li
239.836 221.553 li
240.168 221.553 li
240.501 221.553 li
241.498 221.553 li
241.498 224.869 li
240.501 224.869 li
240.168 224.869 li
239.836 224.869 li
239.503 224.537 li
239.171 224.537 li
238.838 224.537 li
238.838 224.205 li
238.506 224.205 li
238.506 223.874 li
238.506 223.542 li
238.173 223.542 li
238.173 223.211 li
cp
f
227.2 228.847 mo
227.2 231.168 li
229.195 231.168 li
229.195 228.847 li
234.515 228.847 li
234.515 227.189 li
229.86 219.895 li
227.2 219.895 li
227.2 226.858 li
225.204 226.858 li
225.204 228.847 li
cp
229.195 221.885 mo
232.52 226.858 li
229.195 226.858 li
cp
f
318.978 93.58 mo
318.978 93.58 li
318.978 93.9115 li
318.978 94.243 li
318.978 94.5746 li
319.311 94.5746 li
319.311 94.9061 li
319.311 95.2376 li
319.644 95.2376 li
319.644 95.5692 li
319.976 95.5692 li
319.976 95.9007 li
320.309 96.2322 li
320.641 96.2322 li
320.974 96.5638 li
321.306 96.5638 li
321.639 96.5638 li
321.971 96.8954 li
322.304 96.8954 li
322.636 96.8954 li
322.969 96.8954 li
323.301 96.8954 li
323.634 96.8954 li
324.299 97.2269 li
324.632 97.2269 li
324.964 96.8954 li
325.297 96.8954 li
325.629 96.8954 li
325.962 96.8954 li
326.294 96.8954 li
326.627 96.8954 li
326.627 94.9061 li
326.627 95.2376 li
326.294 95.2376 li
325.962 95.2376 li
325.629 95.2376 li
325.297 95.2376 li
324.964 95.2376 li
324.632 95.2376 li
324.299 95.2376 li
323.967 95.2376 li
323.634 95.2376 li
323.301 95.2376 li
322.636 95.2376 li
322.304 95.2376 li
322.304 94.9061 li
321.971 94.9061 li
321.639 94.5746 li
321.306 94.243 li
321.306 93.9115 li
321.306 93.58 li
321.306 93.2484 li
321.306 92.9169 li
321.306 92.5854 li
321.639 92.5854 li
321.971 92.2538 li
322.304 92.2538 li
322.304 91.9222 li
322.636 91.9222 li
322.969 91.9222 li
323.301 91.9222 li
323.634 91.9222 li
323.967 91.9222 li
325.297 91.9222 li
325.297 90.2646 li
323.967 90.2646 li
323.634 90.2646 li
323.301 90.2646 li
322.969 89.933 li
322.636 89.933 li
322.304 89.6015 li
321.971 89.6015 li
321.971 89.27 li
321.971 88.9384 li
321.639 88.9384 li
321.639 88.6069 li
321.639 88.2754 li
321.971 87.9438 li
321.971 87.6123 li
322.304 87.6123 li
322.304 87.2808 li
322.636 87.2808 li
322.969 87.2808 li
323.301 87.2808 li
323.634 86.9492 li
323.967 86.9492 li
323.967 87.2808 li
324.299 87.2808 li
324.632 87.2808 li
324.964 87.2808 li
325.297 87.2808 li
325.629 87.2808 li
325.962 87.6123 li
326.294 87.6123 li
326.294 85.9546 li
326.294 85.6231 li
325.962 85.6231 li
325.629 85.6231 li
325.297 85.6231 li
324.964 85.6231 li
324.964 85.2916 li
324.632 85.2916 li
324.299 85.2916 li
323.967 85.2916 li
323.634 85.2916 li
323.301 85.2916 li
322.969 85.2916 li
322.636 85.2916 li
322.304 85.2916 li
321.971 85.6231 li
321.639 85.6231 li
321.306 85.6231 li
320.974 85.9546 li
320.641 85.9546 li
320.641 86.2862 li
320.309 86.2862 li
320.309 86.6177 li
319.976 86.6177 li
319.976 86.9492 li
319.644 86.9492 li
319.644 87.2808 li
319.644 87.6123 li
319.644 87.9438 li
319.644 88.2754 li
319.644 88.6069 li
319.644 88.9384 li
319.644 89.27 li
319.976 89.6015 li
319.976 89.933 li
320.309 89.933 li
320.309 90.2646 li
320.641 90.2646 li
320.974 90.5961 li
321.306 90.9277 li
320.974 90.9277 li
320.641 90.9277 li
320.309 91.2592 li
319.976 91.2592 li
319.976 91.5908 li
319.644 91.5908 li
319.644 91.9222 li
319.311 91.9222 li
319.311 92.2538 li
318.978 92.5854 li
318.978 92.9169 li
318.978 93.58 li
cp
f
313.325 93.58 mo
312.993 93.58 li
312.66 93.58 li
312.328 93.9115 li
311.995 93.9115 li
311.995 94.243 li
311.663 94.243 li
311.663 94.5746 li
311.663 94.9061 li
311.33 95.2376 li
311.33 95.5692 li
311.663 95.9007 li
311.663 96.2322 li
311.663 96.5638 li
311.995 96.5638 li
311.995 96.8954 li
312.328 96.8954 li
312.66 96.8954 li
312.993 97.2269 li
313.325 97.2269 li
313.658 96.8954 li
313.991 96.8954 li
314.323 96.8954 li
314.323 96.5638 li
314.656 96.5638 li
314.656 96.2322 li
314.656 95.9007 li
314.656 95.5692 li
314.988 95.5692 li
314.988 95.2376 li
314.656 95.2376 li
314.656 94.9061 li
314.656 94.5746 li
314.656 94.243 li
314.323 94.243 li
314.323 93.9115 li
313.991 93.9115 li
313.658 93.9115 li
313.658 93.58 li
313.325 93.58 li
cp
f
299.359 93.58 mo
299.359 93.58 li
299.359 93.9115 li
299.359 94.243 li
299.359 94.5746 li
299.692 94.9061 li
299.692 95.2376 li
300.024 95.5692 li
300.357 95.9007 li
300.689 96.2322 li
301.022 96.2322 li
301.354 96.5638 li
301.687 96.5638 li
302.019 96.5638 li
302.352 96.8954 li
302.684 96.8954 li
303.017 96.8954 li
303.349 96.8954 li
303.682 96.8954 li
304.015 96.8954 li
304.68 97.2269 li
305.012 97.2269 li
305.012 96.8954 li
305.345 96.8954 li
305.677 96.8954 li
306.01 96.8954 li
306.342 96.8954 li
306.675 96.8954 li
307.007 96.8954 li
307.007 94.9061 li
307.007 95.2376 li
306.675 95.2376 li
306.342 95.2376 li
306.01 95.2376 li
305.677 95.2376 li
305.345 95.2376 li
305.012 95.2376 li
304.68 95.2376 li
304.347 95.2376 li
304.015 95.2376 li
303.682 95.2376 li
303.349 95.2376 li
303.017 95.2376 li
302.684 95.2376 li
302.352 94.9061 li
302.019 94.9061 li
302.019 94.5746 li
301.687 94.5746 li
301.687 94.243 li
301.687 93.9115 li
301.687 93.58 li
301.687 93.2484 li
301.687 92.9169 li
301.687 92.5854 li
302.019 92.5854 li
302.352 92.2538 li
302.684 92.2538 li
302.684 91.9222 li
303.017 91.9222 li
303.349 91.9222 li
303.682 91.9222 li
304.015 91.9222 li
304.347 91.9222 li
305.677 91.9222 li
305.677 90.2646 li
304.347 90.2646 li
304.015 90.2646 li
303.682 90.2646 li
303.349 90.2646 li
303.349 89.933 li
303.017 89.933 li
302.684 89.933 li
302.684 89.6015 li
302.352 89.6015 li
302.352 89.27 li
302.019 89.27 li
302.019 88.9384 li
302.019 88.6069 li
302.019 88.2754 li
302.352 87.9438 li
302.352 87.6123 li
302.684 87.6123 li
302.684 87.2808 li
303.017 87.2808 li
303.349 87.2808 li
303.682 87.2808 li
304.015 86.9492 li
304.347 86.9492 li
304.347 87.2808 li
304.68 87.2808 li
305.345 87.2808 li
305.677 87.2808 li
306.01 87.2808 li
306.01 87.6123 li
306.675 87.6123 li
306.675 85.9546 li
306.675 85.6231 li
306.342 85.6231 li
306.01 85.6231 li
305.677 85.6231 li
305.345 85.6231 li
305.012 85.2916 li
304.68 85.2916 li
304.347 85.2916 li
304.015 85.2916 li
303.682 85.2916 li
303.349 85.2916 li
303.017 85.2916 li
302.684 85.2916 li
302.352 85.6231 li
302.019 85.6231 li
301.687 85.6231 li
301.354 85.6231 li
301.354 85.9546 li
301.022 85.9546 li
301.022 86.2862 li
300.689 86.2862 li
300.357 86.6177 li
300.357 86.9492 li
300.024 86.9492 li
300.024 87.2808 li
300.024 87.6123 li
300.024 87.9438 li
300.024 88.2754 li
300.024 88.6069 li
300.024 88.9384 li
300.024 89.27 li
300.357 89.6015 li
300.357 89.933 li
300.689 89.933 li
300.689 90.2646 li
301.022 90.2646 li
301.022 90.5961 li
301.354 90.5961 li
301.687 90.9277 li
301.354 90.9277 li
301.022 90.9277 li
300.689 91.2592 li
300.357 91.2592 li
300.357 91.5908 li
300.024 91.5908 li
299.692 91.9222 li
299.692 92.2538 li
299.359 92.5854 li
299.359 92.9169 li
299.359 93.58 li
cp
f
292.043 96.8954 mo
295.036 96.8954 li
298.362 85.6231 li
296.034 85.6231 li
294.039 92.2538 li
293.374 94.5746 li
292.708 92.2538 li
290.713 85.6231 li
288.385 85.6231 li
cp
f
271.094 96.8954 mo
271.426 90.5961 li
271.426 87.9438 li
272.091 89.6015 li
273.422 93.58 li
274.752 93.58 li
275.749 89.6015 li
276.414 87.9438 li
276.414 90.2646 li
276.414 96.8954 li
278.41 96.8954 li
277.744 85.6231 li
275.417 85.6231 li
274.419 88.9384 li
273.754 90.5961 li
273.422 88.9384 li
272.424 85.6231 li
269.764 85.6231 li
269.431 96.8954 li
cp
f
259.455 91.2592 mo
259.455 91.2592 li
259.455 91.5908 li
259.455 91.9222 li
259.455 92.5854 li
259.455 92.9169 li
259.455 93.2484 li
259.788 93.9115 li
259.788 94.243 li
260.12 94.5746 li
260.12 94.9061 li
260.453 95.2376 li
260.453 95.5692 li
260.785 95.5692 li
260.785 95.9007 li
261.118 95.9007 li
261.118 96.2322 li
261.45 96.2322 li
261.783 96.5638 li
262.115 96.8954 li
262.448 96.8954 li
262.78 96.8954 li
263.113 96.8954 li
263.446 96.8954 li
263.778 97.2269 li
264.111 97.2269 li
264.443 97.2269 li
264.443 96.8954 li
264.776 96.8954 li
265.108 96.8954 li
265.441 96.8954 li
265.773 96.5638 li
266.106 96.5638 li
266.438 96.5638 li
266.771 96.2322 li
267.103 96.2322 li
267.103 95.9007 li
267.436 95.5692 li
267.436 95.2376 li
267.769 95.2376 li
267.769 94.9061 li
268.101 94.5746 li
268.101 94.243 li
268.101 93.9115 li
268.434 93.58 li
268.434 93.2484 li
268.434 92.5854 li
268.434 92.2538 li
268.434 91.9222 li
268.434 91.2592 li
268.434 90.9277 li
268.434 90.5961 li
268.434 90.2646 li
268.434 89.933 li
268.434 89.6015 li
268.434 88.9384 li
268.101 88.6069 li
268.101 88.2754 li
267.769 87.9438 li
267.769 87.6123 li
267.769 87.2808 li
267.436 86.9492 li
267.103 86.6177 li
266.771 86.2862 li
266.438 86.2862 li
266.438 85.9546 li
266.106 85.9546 li
265.773 85.6231 li
265.441 85.6231 li
265.108 85.6231 li
264.776 85.2916 li
264.443 85.2916 li
264.111 85.2916 li
263.778 85.2916 li
263.446 85.2916 li
263.113 85.2916 li
262.78 85.2916 li
262.78 85.6231 li
262.448 85.6231 li
262.115 85.6231 li
261.783 85.9546 li
261.45 85.9546 li
261.118 86.2862 li
260.785 86.6177 li
260.453 86.9492 li
260.12 87.2808 li
260.12 87.6123 li
259.788 87.9438 li
259.788 88.2754 li
259.788 88.6069 li
259.788 88.9384 li
259.455 89.27 li
259.455 89.6015 li
259.455 90.2646 li
259.455 90.5961 li
259.455 91.2592 li
cp
261.783 91.2592 mo
261.783 91.2592 li
261.783 90.9277 li
261.783 90.5961 li
261.783 90.2646 li
261.783 89.6015 li
261.783 89.27 li
262.115 88.6069 li
262.115 88.2754 li
262.448 87.9438 li
262.448 87.6123 li
262.78 87.6123 li
263.113 87.2808 li
263.446 87.2808 li
263.778 87.2808 li
264.111 87.2808 li
264.443 87.2808 li
264.776 87.2808 li
265.108 87.6123 li
265.441 87.6123 li
265.441 87.9438 li
265.773 88.2754 li
265.773 88.6069 li
266.106 88.9384 li
266.106 89.27 li
266.106 89.6015 li
266.106 89.933 li
266.106 90.2646 li
266.106 90.5961 li
266.438 90.9277 li
266.438 91.2592 li
266.438 91.5908 li
266.106 91.5908 li
266.106 91.9222 li
266.106 92.2538 li
266.106 92.9169 li
266.106 93.2484 li
265.773 93.9115 li
265.773 94.243 li
265.441 94.5746 li
265.108 94.9061 li
264.776 94.9061 li
264.443 95.2376 li
264.111 95.2376 li
263.778 95.2376 li
263.446 95.2376 li
263.113 94.9061 li
262.78 94.9061 li
262.78 94.5746 li
262.448 94.5746 li
262.448 94.243 li
262.115 94.243 li
262.115 93.9115 li
262.115 93.58 li
261.783 93.58 li
261.783 93.2484 li
261.783 92.9169 li
261.783 92.5854 li
261.783 92.2538 li
261.783 91.9222 li
261.783 91.5908 li
261.783 91.2592 li
cp
f
250.144 93.58 mo
250.144 93.58 li
250.144 93.9115 li
250.144 94.243 li
250.144 94.5746 li
250.477 94.9061 li
250.477 95.2376 li
250.809 95.5692 li
251.142 95.9007 li
251.474 96.2322 li
251.807 96.2322 li
251.807 96.5638 li
252.139 96.5638 li
252.472 96.5638 li
252.472 96.8954 li
252.805 96.8954 li
253.137 96.8954 li
253.47 96.8954 li
253.802 96.8954 li
254.135 96.8954 li
254.467 97.2269 li
254.8 97.2269 li
255.132 97.2269 li
255.465 97.2269 li
255.797 96.8954 li
256.462 96.8954 li
256.795 96.8954 li
257.127 96.8954 li
257.46 96.8954 li
258.125 96.5638 li
258.125 94.5746 li
257.792 94.5746 li
257.46 94.9061 li
257.127 94.9061 li
256.795 94.9061 li
256.462 94.9061 li
256.13 94.9061 li
256.13 95.2376 li
255.797 95.2376 li
255.465 95.2376 li
255.132 95.2376 li
254.8 95.2376 li
254.467 95.2376 li
254.135 95.2376 li
253.802 95.2376 li
253.47 94.9061 li
253.137 94.9061 li
252.805 94.5746 li
252.472 94.243 li
252.472 93.9115 li
252.472 93.58 li
252.472 93.2484 li
252.805 93.2484 li
252.805 92.9169 li
253.137 92.9169 li
253.47 92.5854 li
253.802 92.5854 li
253.802 92.2538 li
254.135 92.2538 li
254.467 92.2538 li
254.8 91.9222 li
255.465 91.9222 li
255.465 91.5908 li
255.797 91.5908 li
256.462 91.2592 li
256.795 90.9277 li
257.127 90.9277 li
257.127 90.5961 li
257.46 90.5961 li
257.46 90.2646 li
257.792 90.2646 li
257.792 89.933 li
257.792 89.6015 li
258.125 89.6015 li
258.125 89.27 li
258.125 88.9384 li
258.125 88.6069 li
258.125 88.2754 li
258.125 87.9438 li
257.792 87.6123 li
257.792 87.2808 li
257.792 86.9492 li
257.46 86.9492 li
257.46 86.6177 li
257.127 86.6177 li
257.127 86.2862 li
256.795 86.2862 li
256.795 85.9546 li
256.462 85.9546 li
256.13 85.9546 li
256.13 85.6231 li
255.797 85.6231 li
255.465 85.6231 li
255.132 85.6231 li
254.8 85.2916 li
254.467 85.2916 li
254.135 85.2916 li
253.802 85.2916 li
253.47 85.2916 li
253.137 85.2916 li
252.805 85.2916 li
252.472 85.2916 li
252.139 85.6231 li
251.807 85.6231 li
251.474 85.6231 li
251.142 85.6231 li
250.809 85.6231 li
250.809 87.6123 li
251.142 87.6123 li
251.474 87.6123 li
251.807 87.2808 li
252.139 87.2808 li
252.472 87.2808 li
252.805 87.2808 li
253.137 87.2808 li
253.47 87.2808 li
253.802 87.2808 li
254.135 87.2808 li
254.467 87.2808 li
254.8 87.2808 li
255.132 87.2808 li
255.132 87.6123 li
255.465 87.6123 li
255.797 87.9438 li
255.797 88.2754 li
255.797 88.6069 li
255.797 88.9384 li
255.465 88.9384 li
255.465 89.27 li
255.132 89.27 li
254.8 89.6015 li
254.467 89.6015 li
254.135 89.933 li
253.802 89.933 li
253.47 89.933 li
253.47 90.2646 li
252.805 90.2646 li
252.472 90.2646 li
252.472 90.5961 li
252.139 90.5961 li
251.807 90.5961 li
251.807 90.9277 li
251.474 90.9277 li
251.474 91.2592 li
251.142 91.2592 li
250.809 91.5908 li
250.809 91.9222 li
250.477 91.9222 li
250.477 92.2538 li
250.144 92.5854 li
250.144 92.9169 li
250.144 93.2484 li
250.144 93.58 li
cp
f
247.817 87.2808 mo
247.817 85.6231 li
240.833 85.6231 li
240.833 87.2808 li
243.161 87.2808 li
243.161 95.2376 li
240.833 95.2376 li
240.833 96.8954 li
247.817 96.8954 li
247.817 95.2376 li
245.489 95.2376 li
245.489 87.2808 li
cp
f
223.209 96.8954 mo
223.209 91.2592 li
223.209 90.9277 li
223.209 90.5961 li
223.209 90.2646 li
223.542 89.933 li
223.874 89.6015 li
224.207 89.6015 li
224.539 89.6015 li
224.539 89.933 li
224.872 89.933 li
225.204 90.2646 li
225.537 90.5961 li
225.869 90.9277 li
226.202 91.2592 li
226.202 96.8954 li
228.197 96.8954 li
228.197 87.9438 li
226.534 87.9438 li
226.534 89.27 li
226.202 89.27 li
226.202 88.9384 li
225.869 88.6069 li
225.537 88.6069 li
225.204 88.2754 li
224.872 88.2754 li
224.872 87.9438 li
224.539 87.9438 li
224.207 87.9438 li
223.874 87.9438 li
223.542 87.9438 li
223.209 87.9438 li
222.877 87.9438 li
222.544 87.9438 li
222.212 88.2754 li
221.879 88.6069 li
221.546 88.6069 li
221.546 88.9384 li
221.214 89.27 li
221.214 89.6015 li
221.214 89.933 li
220.881 89.933 li
220.881 90.2646 li
220.881 90.5961 li
220.881 90.9277 li
220.881 96.8954 li
cp
f
212.901 96.8954 mo
214.563 93.2484 li
214.563 92.9169 li
214.896 92.5854 li
215.228 92.5854 li
215.228 92.2538 li
215.561 92.2538 li
215.893 92.2538 li
216.558 92.2538 li
216.558 96.8954 li
218.554 96.8954 li
218.554 85.6231 li
215.228 85.6231 li
214.896 85.6231 li
214.563 85.6231 li
214.231 85.6231 li
213.566 85.6231 li
213.233 85.6231 li
213.233 85.9546 li
212.901 85.9546 li
212.568 85.9546 li
212.236 86.2862 li
211.903 86.6177 li
211.57 86.9492 li
211.57 87.2808 li
211.238 87.2808 li
211.238 87.6123 li
211.238 87.9438 li
211.238 88.2754 li
211.238 88.6069 li
211.238 88.9384 li
211.238 89.27 li
211.238 89.933 li
211.57 89.933 li
211.57 90.2646 li
211.903 90.5961 li
211.903 90.9277 li
212.236 90.9277 li
212.568 91.2592 li
212.901 91.2592 li
213.233 91.2592 li
213.566 91.5908 li
213.233 91.5908 li
212.901 91.9222 li
212.568 92.2538 li
212.568 92.5854 li
212.236 92.9169 li
212.236 93.2484 li
210.24 96.8954 li
cp
213.233 88.9384 mo
213.233 88.9384 li
213.233 88.6069 li
213.566 88.6069 li
213.566 88.2754 li
213.566 87.9438 li
213.898 87.9438 li
213.898 87.6123 li
214.231 87.6123 li
214.563 87.2808 li
214.896 87.2808 li
215.228 87.2808 li
215.561 87.2808 li
216.558 87.2808 li
216.558 90.5961 li
215.561 90.5961 li
215.228 90.5961 li
214.896 90.5961 li
214.563 90.2646 li
214.231 90.2646 li
213.898 90.2646 li
213.898 89.933 li
213.566 89.933 li
213.566 89.6015 li
213.566 89.27 li
213.233 88.9384 li
cp
f
200.597 90.9277 mo
200.597 91.2592 li
200.597 91.5908 li
200.597 91.9222 li
200.597 92.2538 li
200.597 92.5854 li
200.597 92.9169 li
200.929 93.58 li
200.929 93.9115 li
201.262 94.243 li
201.262 94.5746 li
201.594 94.9061 li
201.927 95.2376 li
201.927 95.5692 li
202.26 95.5692 li
202.26 95.9007 li
202.592 95.9007 li
202.925 96.2322 li
203.257 96.2322 li
203.59 96.5638 li
203.922 96.5638 li
204.255 96.5638 li
204.92 96.8954 li
205.252 96.8954 li
205.585 96.8954 li
206.25 96.8954 li
209.243 96.8954 li
209.243 85.6231 li
205.917 85.6231 li
205.585 85.6231 li
205.252 85.6231 li
204.92 85.6231 li
204.587 85.6231 li
204.255 85.6231 li
203.922 85.6231 li
203.59 85.9546 li
203.257 85.9546 li
202.925 85.9546 li
202.592 86.2862 li
202.26 86.2862 li
202.26 86.6177 li
201.927 86.9492 li
201.594 86.9492 li
201.594 87.2808 li
201.262 87.6123 li
201.262 87.9438 li
200.929 88.2754 li
200.929 88.6069 li
200.929 88.9384 li
200.597 89.27 li
200.597 89.6015 li
200.597 89.933 li
200.597 90.5961 li
200.597 90.9277 li
cp
202.925 91.2592 mo
202.925 91.2592 li
202.925 90.9277 li
202.925 90.5961 li
202.925 90.2646 li
202.925 89.6015 li
202.925 89.27 li
203.257 89.27 li
203.257 88.9384 li
203.257 88.6069 li
203.59 88.2754 li
203.59 87.9438 li
203.922 87.9438 li
204.255 87.6123 li
204.587 87.6123 li
204.92 87.6123 li
204.92 87.2808 li
205.252 87.2808 li
205.585 87.2808 li
205.917 87.2808 li
206.915 87.2808 li
206.915 95.2376 li
205.917 95.2376 li
205.585 95.2376 li
205.585 94.9061 li
205.252 94.9061 li
204.92 94.9061 li
204.255 94.5746 li
203.922 94.5746 li
203.922 94.243 li
203.59 94.243 li
203.59 93.9115 li
203.257 93.9115 li
203.257 93.58 li
203.257 93.2484 li
203.257 92.9169 li
202.925 92.9169 li
202.925 92.5854 li
202.925 92.2538 li
202.925 91.9222 li
202.925 91.5908 li
202.925 91.2592 li
cp
f
193.946 92.9169 mo
193.946 96.8954 li
196.274 96.8954 li
196.274 92.9169 li
199.932 85.6231 li
197.604 85.6231 li
195.941 88.9384 li
195.276 90.9277 li
194.279 88.9384 li
192.616 85.6231 li
190.288 85.6231 li
cp
f
173.994 96.8954 mo
173.994 91.2592 li
173.994 90.9277 li
173.994 90.5961 li
173.994 90.2646 li
174.327 90.2646 li
174.327 89.933 li
174.659 89.6015 li
174.992 89.6015 li
175.324 89.6015 li
175.324 89.933 li
175.657 89.933 li
175.989 89.933 li
175.989 90.2646 li
176.322 90.2646 li
176.322 90.5961 li
176.655 90.5961 li
176.655 90.9277 li
176.987 90.9277 li
176.987 91.2592 li
176.987 96.8954 li
179.315 96.8954 li
179.315 87.9438 li
177.32 87.9438 li
177.32 89.27 li
176.987 89.27 li
176.987 88.9384 li
176.655 88.6069 li
176.322 88.6069 li
175.989 88.2754 li
175.657 87.9438 li
175.324 87.9438 li
174.992 87.9438 li
174.659 87.9438 li
174.327 87.9438 li
173.994 87.9438 li
173.662 87.9438 li
173.329 87.9438 li
173.329 88.2754 li
172.997 88.2754 li
172.664 88.6069 li
172.332 88.6069 li
172.332 88.9384 li
172.332 89.27 li
171.999 89.27 li
171.999 89.6015 li
171.999 89.933 li
171.667 90.2646 li
171.667 90.5961 li
171.667 90.9277 li
171.667 96.8954 li
cp
f
163.686 96.8954 mo
165.348 93.2484 li
165.348 92.9169 li
165.681 92.5854 li
166.013 92.5854 li
166.013 92.2538 li
166.346 92.2538 li
166.679 92.2538 li
167.011 92.2538 li
167.344 92.2538 li
167.344 96.8954 li
169.339 96.8954 li
169.339 85.6231 li
166.013 85.6231 li
165.681 85.6231 li
165.348 85.6231 li
165.016 85.6231 li
164.351 85.6231 li
164.018 85.6231 li
164.018 85.9546 li
163.686 85.9546 li
163.353 85.9546 li
163.021 86.2862 li
162.688 86.6177 li
162.688 86.9492 li
162.356 86.9492 li
162.356 87.2808 li
162.023 87.6123 li
162.023 87.9438 li
162.023 88.2754 li
162.023 88.6069 li
162.023 88.9384 li
162.023 89.27 li
162.023 89.933 li
162.356 89.933 li
162.356 90.2646 li
162.688 90.5961 li
163.021 90.9277 li
163.353 91.2592 li
163.686 91.2592 li
164.018 91.2592 li
164.351 91.5908 li
164.018 91.5908 li
164.018 91.9222 li
163.686 91.9222 li
163.686 92.2538 li
163.353 92.2538 li
163.353 92.5854 li
163.021 92.9169 li
163.021 93.2484 li
161.358 96.8954 li
cp
164.351 88.9384 mo
164.351 88.9384 li
164.351 88.6069 li
164.351 88.2754 li
164.351 87.9438 li
164.683 87.9438 li
164.683 87.6123 li
165.016 87.6123 li
165.348 87.2808 li
165.681 87.2808 li
166.013 87.2808 li
166.346 87.2808 li
167.344 87.2808 li
167.344 90.5961 li
166.346 90.5961 li
166.013 90.5961 li
165.681 90.2646 li
165.348 90.2646 li
165.016 90.2646 li
164.683 89.933 li
164.351 89.6015 li
164.351 89.27 li
164.351 88.9384 li
cp
f
151.715 93.58 mo
151.715 93.58 li
151.715 93.9115 li
152.047 94.243 li
152.047 94.5746 li
152.047 94.9061 li
152.047 95.2376 li
152.38 95.2376 li
152.38 95.5692 li
152.712 95.5692 li
152.712 95.9007 li
153.045 95.9007 li
153.045 96.2322 li
153.377 96.2322 li
153.71 96.5638 li
154.042 96.5638 li
154.375 96.8954 li
154.707 96.8954 li
155.04 96.8954 li
155.372 96.8954 li
155.705 96.8954 li
156.037 97.2269 li
156.37 97.2269 li
156.703 97.2269 li
157.035 97.2269 li
157.368 97.2269 li
157.7 96.8954 li
158.365 96.8954 li
158.698 96.8954 li
159.03 96.8954 li
159.363 96.8954 li
160.028 96.5638 li
160.028 94.5746 li
159.695 94.5746 li
159.363 94.5746 li
159.03 94.9061 li
158.698 94.9061 li
158.365 94.9061 li
158.033 94.9061 li
157.7 95.2376 li
157.368 95.2376 li
157.035 95.2376 li
156.703 95.2376 li
156.37 95.2376 li
156.037 95.2376 li
155.705 95.2376 li
155.372 95.2376 li
155.372 94.9061 li
155.04 94.9061 li
154.707 94.9061 li
154.707 94.5746 li
154.375 94.5746 li
154.375 94.243 li
154.375 93.9115 li
154.042 93.9115 li
154.042 93.58 li
154.375 93.58 li
154.375 93.2484 li
154.375 92.9169 li
154.707 92.9169 li
155.04 92.5854 li
155.372 92.5854 li
155.705 92.2538 li
156.037 92.2538 li
156.37 92.2538 li
156.37 91.9222 li
156.703 91.9222 li
157.035 91.9222 li
157.368 91.9222 li
157.368 91.5908 li
157.7 91.5908 li
158.033 91.2592 li
158.365 91.2592 li
158.698 90.9277 li
159.03 90.9277 li
159.03 90.5961 li
159.363 90.2646 li
159.695 89.933 li
159.695 89.6015 li
159.695 89.27 li
159.695 88.9384 li
159.695 88.6069 li
159.695 88.2754 li
159.695 87.9438 li
159.695 87.6123 li
159.695 87.2808 li
159.363 87.2808 li
159.363 86.9492 li
159.03 86.6177 li
158.698 86.2862 li
158.365 85.9546 li
158.033 85.9546 li
157.7 85.6231 li
157.368 85.6231 li
157.035 85.6231 li
156.703 85.2916 li
156.37 85.2916 li
155.705 85.2916 li
155.372 85.2916 li
155.04 85.2916 li
154.707 85.2916 li
154.375 85.2916 li
154.042 85.6231 li
153.71 85.6231 li
153.377 85.6231 li
153.045 85.6231 li
152.712 85.6231 li
152.712 87.6123 li
153.045 87.6123 li
153.377 87.6123 li
153.377 87.2808 li
153.71 87.2808 li
154.042 87.2808 li
154.375 87.2808 li
154.707 87.2808 li
155.04 87.2808 li
155.372 87.2808 li
155.705 87.2808 li
156.037 87.2808 li
156.37 87.2808 li
156.703 87.2808 li
157.035 87.6123 li
157.368 87.6123 li
157.368 87.9438 li
157.368 88.2754 li
157.368 88.6069 li
157.368 88.9384 li
157.035 89.27 li
156.703 89.27 li
156.703 89.6015 li
156.37 89.6015 li
156.037 89.6015 li
155.705 89.933 li
155.372 89.933 li
155.04 90.2646 li
154.707 90.2646 li
154.375 90.2646 li
154.042 90.5961 li
153.71 90.5961 li
153.71 90.9277 li
153.377 90.9277 li
153.045 91.2592 li
152.712 91.2592 li
152.712 91.5908 li
152.38 91.5908 li
152.38 91.9222 li
152.047 91.9222 li
152.047 92.2538 li
152.047 92.5854 li
152.047 92.9169 li
151.715 92.9169 li
151.715 93.2484 li
151.715 93.58 li
cp
f
145.064 87.2808 mo
145.064 96.8954 li
147.059 96.8954 li
147.059 87.2808 li
150.384 87.2808 li
150.384 85.6231 li
141.739 85.6231 li
141.739 87.2808 li
cp
f
122.452 93.58 mo
122.452 93.58 li
122.452 93.9115 li
122.452 94.243 li
122.452 94.5746 li
122.452 94.9061 li
122.784 95.2376 li
122.784 95.5692 li
123.117 95.5692 li
123.117 95.9007 li
123.449 95.9007 li
123.782 96.2322 li
124.114 96.5638 li
124.447 96.5638 li
124.779 96.8954 li
125.112 96.8954 li
125.445 96.8954 li
125.777 96.8954 li
126.11 96.8954 li
126.442 96.8954 li
126.775 97.2269 li
127.107 97.2269 li
127.44 97.2269 li
127.772 97.2269 li
128.105 96.8954 li
128.77 96.8954 li
129.102 96.8954 li
129.435 96.8954 li
129.767 96.8954 li
130.432 96.5638 li
130.432 94.5746 li
130.1 94.5746 li
129.767 94.5746 li
129.435 94.9061 li
129.102 94.9061 li
128.77 94.9061 li
128.437 94.9061 li
128.437 95.2376 li
128.105 95.2376 li
127.772 95.2376 li
127.44 95.2376 li
127.107 95.2376 li
126.775 95.2376 li
126.442 95.2376 li
125.777 95.2376 li
125.777 94.9061 li
125.445 94.9061 li
125.112 94.9061 li
125.112 94.5746 li
124.779 94.243 li
124.779 93.9115 li
124.779 93.58 li
124.779 93.2484 li
125.112 93.2484 li
125.112 92.9169 li
125.445 92.9169 li
125.445 92.5854 li
125.777 92.5854 li
126.11 92.5854 li
126.11 92.2538 li
126.442 92.2538 li
126.775 92.2538 li
127.107 91.9222 li
127.44 91.9222 li
127.772 91.9222 li
127.772 91.5908 li
128.105 91.5908 li
128.437 91.2592 li
128.77 91.2592 li
129.102 90.9277 li
129.435 90.9277 li
129.435 90.5961 li
129.767 90.5961 li
129.767 90.2646 li
130.1 89.933 li
130.1 89.6015 li
130.1 89.27 li
130.432 88.9384 li
130.432 88.6069 li
130.432 88.2754 li
130.1 88.2754 li
130.1 87.9438 li
130.1 87.6123 li
130.1 87.2808 li
129.767 86.9492 li
129.767 86.6177 li
129.435 86.6177 li
129.435 86.2862 li
129.102 86.2862 li
128.77 85.9546 li
128.437 85.9546 li
128.105 85.6231 li
127.772 85.6231 li
127.44 85.6231 li
127.107 85.2916 li
126.775 85.2916 li
126.442 85.2916 li
126.11 85.2916 li
125.777 85.2916 li
125.445 85.2916 li
125.112 85.2916 li
124.779 85.2916 li
124.447 85.6231 li
124.114 85.6231 li
123.782 85.6231 li
123.449 85.6231 li
123.117 85.6231 li
123.117 87.6123 li
123.449 87.6123 li
123.782 87.6123 li
123.782 87.2808 li
124.114 87.2808 li
124.447 87.2808 li
124.779 87.2808 li
125.112 87.2808 li
125.445 87.2808 li
125.777 87.2808 li
126.11 87.2808 li
126.442 87.2808 li
126.775 87.2808 li
127.107 87.2808 li
127.44 87.2808 li
127.44 87.6123 li
127.772 87.6123 li
127.772 87.9438 li
128.105 88.2754 li
128.105 88.6069 li
127.772 88.6069 li
127.772 88.9384 li
127.772 89.27 li
127.44 89.27 li
127.107 89.6015 li
126.775 89.6015 li
126.442 89.6015 li
126.11 89.933 li
125.777 89.933 li
125.445 90.2646 li
125.112 90.2646 li
124.779 90.2646 li
124.779 90.5961 li
124.447 90.5961 li
124.114 90.5961 li
124.114 90.9277 li
123.782 90.9277 li
123.449 91.2592 li
123.117 91.2592 li
123.117 91.5908 li
122.784 91.9222 li
122.452 92.2538 li
122.452 92.5854 li
122.452 92.9169 li
122.452 93.2484 li
122.452 93.58 li
cp
f
112.808 96.5638 mo
112.808 96.5638 li
113.141 96.5638 li
113.473 96.5638 li
113.473 96.8954 li
114.138 96.8954 li
114.471 96.8954 li
114.803 96.8954 li
115.136 96.8954 li
115.469 96.8954 li
115.801 96.8954 li
116.134 96.8954 li
116.466 96.8954 li
116.799 96.8954 li
117.131 96.8954 li
117.464 96.8954 li
117.796 96.5638 li
118.129 96.5638 li
118.461 96.5638 li
118.461 96.2322 li
118.794 96.2322 li
119.126 95.9007 li
119.459 95.5692 li
119.791 95.2376 li
119.791 94.9061 li
120.124 94.5746 li
120.124 94.243 li
120.457 93.9115 li
120.457 93.58 li
120.457 93.2484 li
120.789 92.9169 li
120.789 92.2538 li
120.789 91.9222 li
120.789 91.2592 li
120.789 90.9277 li
120.789 90.5961 li
120.789 90.2646 li
120.457 89.6015 li
120.457 89.27 li
120.457 88.9384 li
120.457 88.6069 li
120.124 88.6069 li
120.124 88.2754 li
119.791 87.9438 li
119.791 87.6123 li
119.459 87.2808 li
119.459 86.9492 li
119.126 86.9492 li
119.126 86.6177 li
118.794 86.6177 li
118.461 86.2862 li
118.461 85.9546 li
118.129 85.9546 li
117.796 85.6231 li
117.464 85.6231 li
117.131 85.6231 li
116.799 85.6231 li
116.466 85.2916 li
115.801 85.2916 li
115.469 85.2916 li
115.136 85.2916 li
114.803 85.2916 li
114.471 85.2916 li
114.138 85.2916 li
113.806 85.6231 li
113.473 85.6231 li
113.141 85.6231 li
112.808 85.6231 li
112.808 87.9438 li
112.808 87.6123 li
113.141 87.6123 li
113.473 87.6123 li
114.138 87.2808 li
114.471 87.2808 li
114.803 87.2808 li
115.469 87.2808 li
115.801 87.2808 li
116.134 87.2808 li
116.466 87.6123 li
116.799 87.6123 li
117.131 87.6123 li
117.131 87.9438 li
117.464 87.9438 li
117.464 88.2754 li
117.796 88.2754 li
117.796 88.6069 li
117.796 88.9384 li
118.129 89.27 li
118.129 89.6015 li
118.129 89.933 li
118.461 90.2646 li
118.461 90.5961 li
118.461 90.9277 li
118.461 91.2592 li
118.461 91.5908 li
118.461 91.9222 li
118.129 92.2538 li
118.129 92.9169 li
118.129 93.2484 li
118.129 93.58 li
117.796 93.58 li
117.796 93.9115 li
117.796 94.243 li
117.464 94.243 li
117.131 94.5746 li
116.799 94.9061 li
116.466 94.9061 li
116.134 94.9061 li
115.801 95.2376 li
115.469 95.2376 li
115.136 95.2376 li
114.803 95.2376 li
114.471 94.9061 li
114.138 94.9061 li
113.806 94.9061 li
113.473 94.9061 li
113.473 94.5746 li
113.141 94.5746 li
112.808 94.5746 li
cp
f
109.815 96.8954 mo
109.815 85.6231 li
107.82 85.6231 li
107.82 94.9061 li
102.832 94.9061 li
102.832 96.8954 li
cp
f
95.184 96.8954 mo
98.5093 91.2592 li
98.5093 96.8954 li
100.505 96.8954 li
100.505 85.6231 li
98.5093 85.6231 li
98.5093 90.5961 li
95.184 85.6231 li
92.5237 85.6231 li
96.5142 90.9277 li
92.1912 96.8954 li
cp
f
307.007 14.0111 mo
307.007 12.3535 li
303.017 12.3535 li
303.017 18.3211 li
303.017 18.6526 li
303.349 18.6526 li
303.682 18.6526 li
304.015 18.9841 li
304.347 18.9841 li
304.68 18.9841 li
305.012 18.9841 li
305.345 18.9841 li
305.677 18.9841 li
306.01 19.3157 li
306.342 19.3157 li
306.675 19.3157 li
307.007 19.3157 li
307.34 18.9841 li
307.672 18.9841 li
308.005 18.9841 li
308.337 18.9841 li
308.67 18.9841 li
308.67 18.6526 li
309.003 18.6526 li
309.335 18.6526 li
309.668 18.3211 li
310 17.9896 li
310.333 17.658 li
310.665 17.3265 li
310.998 16.995 li
310.998 16.6634 li
311.33 16.3318 li
311.33 16.0004 li
311.33 15.6688 li
311.33 15.3373 li
311.663 15.0057 li
311.663 14.3427 li
311.663 14.0111 li
311.663 13.3481 li
311.663 13.0165 li
311.663 12.685 li
311.663 12.3535 li
311.663 11.6904 li
311.33 11.3588 li
311.33 11.0273 li
311.33 10.6958 li
310.998 10.6958 li
310.998 10.3642 li
310.998 10.0327 li
310.665 9.70117 li
310.333 9.36963 li
310.333 9.03809 li
310 9.03809 li
310 8.7066 li
309.668 8.7066 li
309.335 8.375 li
309.335 8.04346 li
309.003 8.04346 li
308.337 7.71198 li
308.005 7.71198 li
307.672 7.71198 li
307.34 7.71198 li
307.007 7.38037 li
306.675 7.38037 li
306.01 7.38037 li
305.677 7.38037 li
305.345 7.38037 li
305.012 7.38037 li
304.68 7.71198 li
304.347 7.71198 li
304.015 7.71198 li
303.682 7.71198 li
303.017 8.04346 li
303.017 10.0327 li
303.349 10.0327 li
303.682 9.70117 li
304.015 9.70117 li
304.347 9.70117 li
304.68 9.70117 li
304.68 9.36963 li
305.012 9.36963 li
305.345 9.36963 li
305.677 9.36963 li
306.01 9.36963 li
306.342 9.36963 li
306.675 9.36963 li
307.007 9.36963 li
307.34 9.36963 li
307.672 9.70117 li
308.005 9.70117 li
308.005 10.0327 li
308.337 10.0327 li
308.337 10.3642 li
308.67 10.3642 li
308.67 10.6958 li
309.003 11.0273 li
309.003 11.3588 li
309.003 11.6904 li
309.335 11.6904 li
309.335 12.0219 li
309.335 12.3535 li
309.335 12.685 li
309.335 13.0165 li
309.335 13.3481 li
309.335 13.6796 li
309.335 14.0111 li
309.335 14.3427 li
309.335 15.0057 li
309.003 15.3373 li
309.003 15.6688 li
308.67 16.3318 li
308.337 16.6634 li
308.005 16.6634 li
308.005 16.995 li
307.672 16.995 li
307.34 16.995 li
307.007 17.3265 li
306.675 17.3265 li
306.342 17.3265 li
306.01 17.3265 li
305.677 17.3265 li
305.345 17.3265 li
305.345 16.995 li
305.012 16.995 li
305.012 14.0111 li
cp
f
295.701 18.9841 mo
298.694 12.3535 li
299.359 10.6958 li
299.359 15.3373 li
299.359 18.9841 li
301.354 18.9841 li
301.354 7.71198 li
298.694 7.71198 li
295.701 14.3427 li
295.036 15.6688 li
295.036 10.6958 li
295.036 7.71198 li
293.041 7.71198 li
293.041 18.9841 li
cp
f
283.065 13.0165 mo
283.065 13.3481 li
283.065 13.6796 li
283.065 14.0111 li
283.065 14.3427 li
283.065 14.6742 li
283.398 15.0057 li
283.398 15.6688 li
283.398 16.0004 li
283.73 16.3318 li
284.063 16.6634 li
284.063 16.995 li
284.395 17.3265 li
284.395 17.658 li
284.728 17.658 li
284.728 17.9896 li
285.06 17.9896 li
285.393 18.3211 li
285.725 18.3211 li
286.058 18.6526 li
286.39 18.6526 li
286.723 18.6526 li
287.055 18.6526 li
287.388 18.9841 li
287.72 18.9841 li
288.385 18.9841 li
288.718 18.9841 li
291.711 18.9841 li
291.711 7.71198 li
288.385 7.71198 li
288.053 7.71198 li
287.72 7.71198 li
287.388 7.71198 li
287.055 7.71198 li
286.723 7.71198 li
286.39 7.71198 li
286.058 8.04346 li
285.725 8.04346 li
285.393 8.04346 li
285.06 8.375 li
284.728 8.7066 li
284.395 9.03809 li
284.063 9.36963 li
283.73 9.70117 li
283.73 10.0327 li
283.398 10.3642 li
283.398 10.6958 li
283.398 11.0273 li
283.065 11.3588 li
283.065 11.6904 li
283.065 12.0219 li
283.065 12.685 li
283.065 13.0165 li
cp
285.393 13.3481 mo
285.393 13.3481 li
285.393 13.0165 li
285.393 12.685 li
285.393 12.3535 li
285.393 11.6904 li
285.725 11.3588 li
285.725 11.0273 li
285.725 10.6958 li
286.058 10.6958 li
286.058 10.3642 li
286.39 10.0327 li
286.723 10.0327 li
286.723 9.70117 li
287.055 9.70117 li
287.388 9.70117 li
287.72 9.36963 li
288.053 9.36963 li
288.385 9.36963 li
289.383 9.36963 li
289.383 17.3265 li
288.718 17.3265 li
288.385 17.3265 li
288.053 17.3265 li
288.053 16.995 li
287.72 16.995 li
287.388 16.995 li
287.055 16.6634 li
286.39 16.6634 li
286.39 16.3318 li
286.058 16.3318 li
286.058 16.0004 li
285.725 15.6688 li
285.725 15.3373 li
285.725 15.0057 li
285.393 15.0057 li
285.393 14.6742 li
285.393 14.3427 li
285.393 14.0111 li
285.393 13.6796 li
285.393 13.3481 li
cp
f
265.108 18.9841 mo
265.441 12.685 li
265.441 10.0327 li
266.106 11.6904 li
267.436 15.6688 li
268.766 15.6688 li
269.764 11.6904 li
270.429 10.0327 li
270.429 12.3535 li
270.429 18.9841 li
272.424 18.9841 li
271.759 7.71198 li
269.431 7.71198 li
268.434 11.0273 li
267.769 12.685 li
267.436 11.0273 li
266.438 7.71198 li
263.778 7.71198 li
263.446 18.9841 li
cp
f
261.45 9.36963 mo
261.45 7.71198 li
254.467 7.71198 li
254.467 9.36963 li
256.795 9.36963 li
256.795 17.3265 li
254.467 17.3265 li
254.467 18.9841 li
261.45 18.9841 li
261.45 17.3265 li
259.123 17.3265 li
259.123 9.36963 li
cp
f
244.159 15.6688 mo
244.159 15.6688 li
244.159 16.0004 li
244.159 16.3318 li
244.491 16.6634 li
244.491 16.995 li
244.491 17.3265 li
244.824 17.3265 li
244.824 17.658 li
245.156 17.9896 li
245.489 18.3211 li
245.821 18.3211 li
245.821 18.6526 li
246.154 18.6526 li
246.486 18.6526 li
246.819 18.9841 li
247.151 18.9841 li
247.484 18.9841 li
247.817 18.9841 li
248.149 18.9841 li
248.482 19.3157 li
248.814 19.3157 li
249.147 19.3157 li
249.479 19.3157 li
249.812 19.3157 li
249.812 18.9841 li
250.477 18.9841 li
250.809 18.9841 li
251.142 18.9841 li
251.474 18.9841 li
251.807 18.9841 li
252.139 18.6526 li
252.139 16.6634 li
251.807 16.6634 li
251.474 16.995 li
251.142 16.995 li
250.809 16.995 li
250.477 16.995 li
250.144 16.995 li
250.144 17.3265 li
249.812 17.3265 li
249.479 17.3265 li
249.147 17.3265 li
248.814 17.3265 li
248.482 17.3265 li
248.149 17.3265 li
247.817 17.3265 li
247.484 16.995 li
247.151 16.995 li
246.819 16.6634 li
246.819 16.3318 li
246.486 16.3318 li
246.486 16.0004 li
246.486 15.6688 li
246.486 15.3373 li
246.819 15.3373 li
246.819 15.0057 li
247.151 15.0057 li
247.484 14.6742 li
247.817 14.6742 li
247.817 14.3427 li
248.482 14.3427 li
248.814 14.0111 li
249.479 14.0111 li
249.812 13.6796 li
250.144 13.6796 li
250.477 13.3481 li
250.809 13.3481 li
250.809 13.0165 li
251.142 13.0165 li
251.474 12.685 li
251.474 12.3535 li
251.807 12.3535 li
251.807 12.0219 li
251.807 11.6904 li
252.139 11.6904 li
252.139 11.3588 li
252.139 11.0273 li
252.139 10.6958 li
252.139 10.3642 li
252.139 10.0327 li
251.807 9.70117 li
251.807 9.36963 li
251.807 9.03809 li
251.474 9.03809 li
251.474 8.7066 li
251.142 8.7066 li
251.142 8.375 li
250.809 8.375 li
250.809 8.04346 li
250.477 8.04346 li
250.144 7.71198 li
249.812 7.71198 li
249.479 7.71198 li
249.147 7.71198 li
248.814 7.38037 li
248.482 7.38037 li
248.149 7.38037 li
247.817 7.38037 li
247.484 7.38037 li
247.151 7.38037 li
246.819 7.38037 li
246.486 7.38037 li
246.486 7.71198 li
246.154 7.71198 li
245.821 7.71198 li
245.489 7.71198 li
245.156 7.71198 li
245.156 9.70117 li
245.489 9.70117 li
245.821 9.70117 li
245.821 9.36963 li
246.154 9.36963 li
246.486 9.36963 li
246.819 9.36963 li
247.151 9.36963 li
247.484 9.36963 li
247.817 9.36963 li
248.149 9.36963 li
248.482 9.36963 li
248.814 9.36963 li
249.147 9.36963 li
249.479 9.70117 li
249.812 10.0327 li
249.812 10.3642 li
249.812 10.6958 li
249.812 11.0273 li
249.479 11.0273 li
249.479 11.3588 li
249.147 11.3588 li
248.814 11.6904 li
248.482 11.6904 li
248.149 12.0219 li
247.817 12.0219 li
247.484 12.0219 li
247.484 12.3535 li
247.151 12.3535 li
246.819 12.3535 li
246.486 12.685 li
245.821 12.685 li
245.821 13.0165 li
245.489 13.0165 li
245.489 13.3481 li
245.156 13.3481 li
245.156 13.6796 li
244.824 13.6796 li
244.824 14.0111 li
244.491 14.0111 li
244.491 14.3427 li
244.491 14.6742 li
244.159 14.6742 li
244.159 15.0057 li
244.159 15.3373 li
244.159 15.6688 li
cp
f
233.85 13.3481 mo
233.85 13.3481 li
233.85 13.6796 li
233.85 14.0111 li
233.85 14.6742 li
233.85 15.0057 li
233.85 15.3373 li
234.183 16.0004 li
234.183 16.3318 li
234.515 16.6634 li
234.515 16.995 li
234.848 17.3265 li
234.848 17.658 li
235.18 17.658 li
235.18 17.9896 li
235.513 17.9896 li
235.513 18.3211 li
235.845 18.3211 li
236.178 18.6526 li
236.51 18.9841 li
236.843 18.9841 li
237.175 18.9841 li
237.508 18.9841 li
237.841 18.9841 li
238.173 19.3157 li
238.506 19.3157 li
238.838 19.3157 li
238.838 18.9841 li
239.171 18.9841 li
239.503 18.9841 li
239.836 18.9841 li
240.168 18.6526 li
240.501 18.6526 li
240.833 18.6526 li
241.166 18.3211 li
241.498 18.3211 li
241.498 17.9896 li
241.831 17.658 li
241.831 17.3265 li
242.163 17.3265 li
242.163 16.995 li
242.496 16.6634 li
242.496 16.3318 li
242.496 16.0004 li
242.828 15.6688 li
242.828 15.3373 li
242.828 14.6742 li
242.828 14.3427 li
242.828 14.0111 li
242.828 13.3481 li
242.828 13.0165 li
242.828 12.685 li
242.828 12.3535 li
242.828 12.0219 li
242.828 11.6904 li
242.828 11.0273 li
242.496 10.6958 li
242.496 10.3642 li
242.163 10.0327 li
242.163 9.70117 li
242.163 9.36963 li
241.831 9.03809 li
241.498 8.7066 li
241.166 8.375 li
240.833 8.375 li
240.833 8.04346 li
240.501 8.04346 li
240.168 7.71198 li
239.836 7.71198 li
239.503 7.71198 li
239.171 7.38037 li
238.838 7.38037 li
238.506 7.38037 li
238.173 7.38037 li
237.841 7.38037 li
237.508 7.38037 li
237.175 7.38037 li
237.175 7.71198 li
236.843 7.71198 li
236.51 7.71198 li
236.178 8.04346 li
235.845 8.04346 li
235.513 8.375 li
235.18 8.7066 li
234.848 9.03809 li
234.515 9.36963 li
234.515 9.70117 li
234.183 10.0327 li
234.183 10.3642 li
234.183 10.6958 li
234.183 11.0273 li
233.85 11.3588 li
233.85 11.6904 li
233.85 12.3535 li
233.85 12.685 li
233.85 13.3481 li
cp
236.178 13.3481 mo
236.178 13.3481 li
236.178 13.0165 li
236.178 12.685 li
236.178 12.3535 li
236.178 11.6904 li
236.178 11.3588 li
236.51 10.6958 li
236.51 10.3642 li
236.843 10.0327 li
236.843 9.70117 li
237.175 9.70117 li
237.508 9.36963 li
237.841 9.36963 li
238.173 9.36963 li
238.506 9.36963 li
238.838 9.36963 li
239.171 9.36963 li
239.503 9.70117 li
239.836 9.70117 li
239.836 10.0327 li
240.168 10.3642 li
240.168 10.6958 li
240.501 11.0273 li
240.501 11.3588 li
240.501 11.6904 li
240.501 12.0219 li
240.501 12.3535 li
240.501 12.685 li
240.833 13.0165 li
240.833 13.3481 li
240.833 13.6796 li
240.501 13.6796 li
240.501 14.0111 li
240.501 14.3427 li
240.501 15.0057 li
240.501 15.3373 li
240.168 16.0004 li
240.168 16.3318 li
239.836 16.6634 li
239.503 16.995 li
239.171 16.995 li
238.838 17.3265 li
238.506 17.3265 li
238.173 17.3265 li
237.841 17.3265 li
237.508 16.995 li
237.175 16.995 li
237.175 16.6634 li
236.843 16.6634 li
236.843 16.3318 li
236.51 16.3318 li
236.51 16.0004 li
236.51 15.6688 li
236.178 15.6688 li
236.178 15.3373 li
236.178 15.0057 li
236.178 14.6742 li
236.178 14.3427 li
236.178 14.0111 li
236.178 13.6796 li
236.178 13.3481 li
cp
f
217.224 18.9841 mo
217.224 13.3481 li
217.224 13.0165 li
217.224 12.685 li
217.224 12.3535 li
217.556 12.0219 li
217.889 11.6904 li
218.221 11.6904 li
218.554 11.6904 li
218.554 12.0219 li
218.886 12.0219 li
219.219 12.3535 li
219.551 12.3535 li
219.551 12.685 li
219.884 13.0165 li
220.216 13.0165 li
220.216 13.3481 li
220.216 18.9841 li
222.544 18.9841 li
222.544 10.0327 li
220.549 10.0327 li
220.549 11.3588 li
220.216 11.3588 li
220.216 11.0273 li
219.884 10.6958 li
219.551 10.6958 li
219.219 10.3642 li
218.886 10.0327 li
218.554 10.0327 li
218.221 10.0327 li
217.889 10.0327 li
217.556 10.0327 li
217.224 10.0327 li
216.891 10.0327 li
216.558 10.0327 li
216.558 10.3642 li
216.226 10.3642 li
215.893 10.6958 li
215.561 10.6958 li
215.561 11.0273 li
215.228 11.3588 li
215.228 11.6904 li
215.228 12.0219 li
214.896 12.0219 li
214.896 12.3535 li
214.896 12.685 li
214.896 13.0165 li
214.896 18.9841 li
cp
f
204.92 18.6526 mo
204.92 18.6526 li
205.252 18.6526 li
205.585 18.6526 li
205.917 18.9841 li
206.582 18.9841 li
206.915 18.9841 li
207.248 18.9841 li
207.58 18.9841 li
207.913 18.9841 li
208.245 18.9841 li
208.578 18.9841 li
208.91 18.9841 li
209.575 18.9841 li
209.908 18.9841 li
210.24 18.6526 li
210.573 18.6526 li
210.905 18.3211 li
211.238 18.3211 li
211.57 17.9896 li
211.903 17.658 li
211.903 17.3265 li
212.236 17.3265 li
212.236 16.995 li
212.568 16.6634 li
212.568 16.3318 li
212.568 16.0004 li
212.901 16.0004 li
212.901 15.6688 li
212.901 15.3373 li
212.901 15.0057 li
212.901 14.3427 li
212.901 14.0111 li
212.901 13.3481 li
212.901 13.0165 li
212.901 12.685 li
212.901 12.3535 li
212.901 11.6904 li
212.901 11.3588 li
212.568 11.0273 li
212.568 10.6958 li
212.568 10.3642 li
212.236 10.0327 li
212.236 9.70117 li
211.903 9.36963 li
211.57 9.03809 li
211.238 8.7066 li
210.905 8.375 li
210.573 8.04346 li
210.24 8.04346 li
209.908 7.71198 li
209.575 7.71198 li
209.243 7.71198 li
208.91 7.71198 li
208.578 7.38037 li
208.245 7.38037 li
207.913 7.38037 li
207.58 7.38037 li
207.248 7.38037 li
206.915 7.38037 li
206.582 7.38037 li
206.25 7.38037 li
206.25 7.71198 li
205.917 7.71198 li
205.585 7.71198 li
205.252 7.71198 li
204.92 7.71198 li
204.92 10.0327 li
205.252 10.0327 li
205.252 9.70117 li
205.585 9.70117 li
205.917 9.70117 li
206.582 9.36963 li
206.915 9.36963 li
207.248 9.36963 li
207.58 9.36963 li
207.913 9.36963 li
208.245 9.36963 li
208.578 9.36963 li
208.91 9.70117 li
209.243 9.70117 li
209.575 10.0327 li
209.908 10.3642 li
209.908 10.6958 li
210.24 10.6958 li
210.24 11.0273 li
210.24 11.3588 li
210.573 11.3588 li
210.573 11.6904 li
210.573 12.0219 li
210.573 12.3535 li
210.573 12.685 li
210.573 13.0165 li
210.573 13.3481 li
210.573 13.6796 li
210.573 14.0111 li
210.573 14.3427 li
210.573 15.0057 li
210.573 15.3373 li
210.24 15.3373 li
210.24 15.6688 li
210.24 16.0004 li
209.908 16.3318 li
209.575 16.3318 li
209.575 16.6634 li
209.243 16.6634 li
209.243 16.995 li
208.91 16.995 li
208.578 16.995 li
208.245 16.995 li
208.245 17.3265 li
207.913 17.3265 li
207.58 17.3265 li
207.248 17.3265 li
206.915 17.3265 li
206.915 16.995 li
206.582 16.995 li
206.25 16.995 li
205.917 16.995 li
205.585 16.6634 li
205.252 16.6634 li
204.92 16.6634 li
cp
f
194.944 15.6688 mo
194.944 15.6688 li
194.944 16.0004 li
195.276 16.3318 li
195.276 16.6634 li
195.276 16.995 li
195.276 17.3265 li
195.609 17.3265 li
195.609 17.658 li
195.941 17.9896 li
196.274 17.9896 li
196.274 18.3211 li
196.607 18.3211 li
196.939 18.6526 li
197.272 18.6526 li
197.604 18.9841 li
197.937 18.9841 li
198.269 18.9841 li
198.602 18.9841 li
198.934 18.9841 li
199.267 19.3157 li
199.599 19.3157 li
199.932 19.3157 li
200.264 19.3157 li
200.597 19.3157 li
200.929 18.9841 li
201.594 18.9841 li
201.927 18.9841 li
202.26 18.9841 li
202.592 18.9841 li
203.257 18.6526 li
203.257 16.6634 li
202.925 16.6634 li
202.592 16.6634 li
202.26 16.995 li
201.927 16.995 li
201.594 16.995 li
201.262 16.995 li
200.929 17.3265 li
200.597 17.3265 li
200.264 17.3265 li
199.932 17.3265 li
199.599 17.3265 li
199.267 17.3265 li
198.934 17.3265 li
198.602 17.3265 li
198.602 16.995 li
198.269 16.995 li
197.937 16.995 li
197.604 16.6634 li
197.604 16.3318 li
197.272 16.0004 li
197.272 15.6688 li
197.604 15.3373 li
197.604 15.0057 li
197.937 15.0057 li
198.269 14.6742 li
198.602 14.6742 li
198.934 14.3427 li
199.267 14.3427 li
199.599 14.3427 li
199.599 14.0111 li
199.932 14.0111 li
200.264 14.0111 li
200.597 13.6796 li
200.929 13.6796 li
201.262 13.3481 li
201.594 13.3481 li
201.927 13.0165 li
202.26 13.0165 li
202.26 12.685 li
202.592 12.3535 li
202.592 12.0219 li
202.925 12.0219 li
202.925 11.6904 li
202.925 11.3588 li
202.925 11.0273 li
202.925 10.6958 li
202.925 10.3642 li
202.925 10.0327 li
202.925 9.70117 li
202.592 9.36963 li
202.592 9.03809 li
202.26 8.7066 li
201.927 8.375 li
201.594 8.375 li
201.594 8.04346 li
201.262 8.04346 li
200.929 7.71198 li
200.597 7.71198 li
200.264 7.71198 li
199.932 7.71198 li
199.932 7.38037 li
199.599 7.38037 li
198.934 7.38037 li
198.602 7.38037 li
198.269 7.38037 li
197.937 7.38037 li
197.604 7.38037 li
197.272 7.71198 li
196.939 7.71198 li
196.607 7.71198 li
196.274 7.71198 li
195.941 7.71198 li
195.941 9.70117 li
196.274 9.70117 li
196.607 9.70117 li
196.607 9.36963 li
196.939 9.36963 li
197.272 9.36963 li
197.604 9.36963 li
197.937 9.36963 li
198.269 9.36963 li
198.602 9.36963 li
198.934 9.36963 li
199.267 9.36963 li
199.599 9.36963 li
199.932 9.36963 li
200.264 9.70117 li
200.597 9.70117 li
200.597 10.0327 li
200.597 10.3642 li
200.597 10.6958 li
200.597 11.0273 li
200.264 11.0273 li
200.264 11.3588 li
199.932 11.3588 li
199.932 11.6904 li
199.599 11.6904 li
199.267 11.6904 li
198.934 12.0219 li
198.602 12.0219 li
198.269 12.0219 li
198.269 12.3535 li
197.937 12.3535 li
197.604 12.3535 li
197.272 12.685 li
196.939 12.685 li
196.939 13.0165 li
196.607 13.0165 li
196.274 13.3481 li
195.941 13.3481 li
195.941 13.6796 li
195.609 13.6796 li
195.609 14.0111 li
195.276 14.0111 li
195.276 14.3427 li
195.276 14.6742 li
195.276 15.0057 li
194.944 15.0057 li
194.944 15.3373 li
194.944 15.6688 li
cp
f
177.652 18.9841 mo
177.652 13.3481 li
177.652 13.0165 li
177.985 12.685 li
177.985 12.3535 li
178.317 12.0219 li
178.65 11.6904 li
178.982 11.6904 li
179.315 11.6904 li
179.315 12.0219 li
179.647 12.0219 li
179.98 12.3535 li
180.312 12.685 li
180.645 13.0165 li
180.977 13.3481 li
180.977 18.9841 li
182.973 18.9841 li
182.973 10.0327 li
181.31 10.0327 li
181.31 11.3588 li
180.977 11.3588 li
180.977 11.0273 li
180.645 10.6958 li
180.312 10.6958 li
179.98 10.3642 li
179.647 10.3642 li
179.647 10.0327 li
179.315 10.0327 li
178.982 10.0327 li
178.65 10.0327 li
178.317 10.0327 li
177.985 10.0327 li
177.652 10.0327 li
177.32 10.0327 li
176.987 10.3642 li
176.655 10.6958 li
176.322 10.6958 li
176.322 11.0273 li
175.989 11.0273 li
175.989 11.3588 li
175.989 11.6904 li
175.657 11.6904 li
175.657 12.0219 li
175.657 12.3535 li
175.657 12.685 li
175.657 13.0165 li
175.657 18.9841 li
cp
f
165.681 15.6688 mo
165.681 15.6688 li
165.681 16.0004 li
165.681 16.3318 li
165.681 16.6634 li
165.681 16.995 li
166.013 17.3265 li
166.013 17.658 li
166.346 17.658 li
166.346 17.9896 li
166.679 17.9896 li
167.011 18.3211 li
167.344 18.6526 li
167.676 18.6526 li
168.009 18.9841 li
168.341 18.9841 li
168.674 18.9841 li
169.006 18.9841 li
169.339 18.9841 li
170.004 19.3157 li
170.336 19.3157 li
170.669 19.3157 li
171.001 19.3157 li
171.334 18.9841 li
171.999 18.9841 li
172.332 18.9841 li
172.664 18.9841 li
172.997 18.9841 li
173.662 18.6526 li
173.662 16.6634 li
173.329 16.6634 li
172.997 16.6634 li
172.664 16.995 li
172.332 16.995 li
171.999 16.995 li
171.667 16.995 li
171.334 17.3265 li
171.001 17.3265 li
170.669 17.3265 li
170.336 17.3265 li
170.004 17.3265 li
169.671 17.3265 li
169.339 17.3265 li
169.006 17.3265 li
169.006 16.995 li
168.674 16.995 li
168.341 16.995 li
168.341 16.6634 li
168.009 16.6634 li
168.009 16.3318 li
168.009 16.0004 li
168.009 15.6688 li
168.009 15.3373 li
168.341 15.3373 li
168.341 15.0057 li
168.674 15.0057 li
168.674 14.6742 li
169.006 14.6742 li
169.339 14.6742 li
169.339 14.3427 li
169.671 14.3427 li
170.004 14.3427 li
170.004 14.0111 li
170.336 14.0111 li
170.669 14.0111 li
171.001 14.0111 li
171.001 13.6796 li
171.334 13.6796 li
171.667 13.3481 li
171.999 13.3481 li
172.332 13.0165 li
172.664 13.0165 li
172.664 12.685 li
172.997 12.685 li
172.997 12.3535 li
173.329 12.0219 li
173.329 11.6904 li
173.329 11.3588 li
173.329 11.0273 li
173.329 10.6958 li
173.329 10.3642 li
173.329 10.0327 li
173.329 9.70117 li
173.329 9.36963 li
172.997 9.36963 li
172.997 9.03809 li
172.997 8.7066 li
172.664 8.7066 li
172.332 8.375 li
171.999 8.04346 li
171.667 8.04346 li
171.334 7.71198 li
171.001 7.71198 li
170.669 7.71198 li
170.336 7.38037 li
170.004 7.38037 li
169.671 7.38037 li
169.006 7.38037 li
168.674 7.38037 li
168.341 7.38037 li
168.009 7.38037 li
167.676 7.71198 li
167.344 7.71198 li
167.011 7.71198 li
166.679 7.71198 li
166.346 7.71198 li
166.346 9.70117 li
166.679 9.70117 li
167.011 9.70117 li
167.011 9.36963 li
167.344 9.36963 li
167.676 9.36963 li
168.009 9.36963 li
168.341 9.36963 li
168.674 9.36963 li
169.006 9.36963 li
169.339 9.36963 li
169.671 9.36963 li
170.004 9.36963 li
170.336 9.36963 li
170.669 9.70117 li
171.001 9.70117 li
171.001 10.0327 li
171.001 10.3642 li
171.334 10.6958 li
171.001 10.6958 li
171.001 11.0273 li
171.001 11.3588 li
170.669 11.3588 li
170.336 11.6904 li
170.004 11.6904 li
169.671 11.6904 li
169.339 12.0219 li
169.006 12.0219 li
168.674 12.3535 li
168.341 12.3535 li
168.009 12.3535 li
168.009 12.685 li
167.676 12.685 li
167.344 12.685 li
167.344 13.0165 li
167.011 13.0165 li
166.679 13.3481 li
166.346 13.3481 li
166.346 13.6796 li
166.013 14.0111 li
165.681 14.3427 li
165.681 14.6742 li
165.681 15.0057 li
165.681 15.3373 li
165.681 15.6688 li
cp
f
158.698 15.0057 mo
158.698 18.9841 li
160.693 18.9841 li
160.693 15.0057 li
164.683 7.71198 li
162.023 7.71198 li
160.36 11.0273 li
159.695 13.0165 li
159.03 11.0273 li
157.035 7.71198 li
155.04 7.71198 li
cp
f
148.389 18.9841 mo
151.382 12.3535 li
152.047 10.6958 li
152.047 15.3373 li
152.047 18.9841 li
154.042 18.9841 li
154.042 7.71198 li
151.382 7.71198 li
148.389 14.3427 li
147.724 15.6688 li
147.724 10.6958 li
147.724 7.71198 li
145.729 7.71198 li
145.729 18.9841 li
cp
f
126.442 15.3373 mo
126.442 15.3373 li
126.442 15.6688 li
126.442 16.0004 li
126.442 16.3318 li
126.775 16.6634 li
126.775 16.995 li
126.775 17.3265 li
127.107 17.3265 li
127.107 17.658 li
127.44 17.658 li
127.44 17.9896 li
127.772 18.3211 li
128.105 18.3211 li
128.437 18.6526 li
128.77 18.6526 li
129.102 18.6526 li
129.435 18.9841 li
129.767 18.9841 li
130.1 18.9841 li
130.432 18.9841 li
130.765 18.9841 li
131.098 18.9841 li
131.43 19.3157 li
131.763 19.3157 li
132.095 18.9841 li
132.428 18.9841 li
132.76 18.9841 li
133.093 18.9841 li
133.425 18.9841 li
133.758 18.9841 li
133.758 16.995 li
133.425 17.3265 li
133.093 17.3265 li
132.76 17.3265 li
132.428 17.3265 li
132.095 17.3265 li
131.763 17.3265 li
131.43 17.3265 li
131.098 17.3265 li
130.765 17.3265 li
130.432 17.3265 li
130.1 16.995 li
129.767 16.995 li
129.435 16.995 li
129.102 16.6634 li
128.77 16.3318 li
128.77 16.0004 li
128.77 15.6688 li
128.77 15.3373 li
128.77 15.0057 li
128.77 14.6742 li
129.102 14.3427 li
129.435 14.0111 li
129.767 14.0111 li
130.1 13.6796 li
130.432 13.6796 li
130.765 13.6796 li
131.43 13.6796 li
133.425 13.6796 li
133.425 7.71198 li
127.107 7.71198 li
127.107 9.70117 li
131.43 9.70117 li
131.43 12.0219 li
130.765 12.0219 li
130.432 12.0219 li
130.1 12.0219 li
129.767 12.0219 li
129.102 12.0219 li
128.77 12.0219 li
128.77 12.3535 li
128.437 12.3535 li
128.105 12.3535 li
127.772 12.3535 li
127.772 12.685 li
127.44 12.685 li
127.44 13.0165 li
127.107 13.0165 li
127.107 13.3481 li
126.775 13.3481 li
126.775 13.6796 li
126.775 14.0111 li
126.442 14.0111 li
126.442 14.3427 li
126.442 14.6742 li
126.442 15.0057 li
126.442 15.3373 li
cp
f
119.126 18.9841 mo
121.787 18.9841 li
125.445 7.71198 li
122.784 7.71198 li
121.122 14.3427 li
120.457 16.6634 li
119.791 14.3427 li
117.796 7.71198 li
115.469 7.71198 li
cp
f
185.3 101.868 mo
185.3 85.2916 li
.873014 .24213 1 .129183 cmyk
@
235.18 101.868 mo
235.18 85.2916 li
@
301.687 342.233 mo
301.687 309.079 li
@
301.687 309.079 mo
301.687 275.925 li
@
401.447 342.233 mo
401.447 309.079 li
@
401.447 309.079 mo
401.447 275.925 li
@
51.6222 318.693 mo
51.6222 266.311 li
@
54.9475 196.356 mo
54.9475 106.841 li
@
3.3253 lw
77.2272 561.047 mo
77.2272 458.27 li
@
77.2272 458.27 mo
77.2272 358.809 li
@
2.66029 lw
106.158 318.693 mo
106.158 266.311 li
@
116.134 196.356 mo
116.134 106.841 li
@
127.107 85.2916 mo
127.107 18.9841 li
@
167.011 319.688 mo
167.011 116.124 li
@
253.47 319.688 mo
253.47 116.124 li
@
293.373 85.2916 mo
293.373 18.9841 li
@
3.3253 lw
343.253 561.047 mo
343.253 458.27 li
@
343.253 458.27 mo
343.253 358.809 li
@
2.66029 lw
51.6222 266.311 mo
106.158 266.311 li
@
185.3 101.868 mo
235.18 101.868 li
@
3.3253 lw
77.2272 561.047 mo
343.253 561.047 li
@
77.2272 458.27 mo
343.253 458.27 li
@
77.2272 358.809 mo
343.253 358.809 li
@
2.66029 lw
167.011 319.688 mo
253.47 319.688 li
@
167.011 116.124 mo
253.47 116.124 li
@
127.107 85.2916 mo
293.373 85.2916 li
@
127.107 18.9841 mo
293.373 18.9841 li
@
301.687 342.233 mo
401.447 342.233 li
@
301.687 275.925 mo
401.447 275.925 li
@
301.687 309.079 mo
401.447 309.079 li
@
301.687 309.079 mo
401.447 309.079 li
@
51.6223 266.311 mo
106.158 266.311 li
106.158 273.604 li
51.6223 273.604 li
cp
ef
286.39 328.971 mo
286.39 328.971 li
286.39 329.303 li
286.39 329.634 li
286.39 329.966 li
286.058 330.297 li
286.058 330.629 li
286.058 330.96 li
285.725 330.96 li
285.725 331.292 li
285.393 331.623 li
285.06 331.623 li
285.06 331.955 li
284.728 331.955 li
284.395 331.955 li
284.395 332.286 li
284.063 332.286 li
283.73 332.286 li
283.398 332.286 li
283.065 332.286 li
282.732 332.618 li
282.4 332.618 li
282.4 332.286 li
282.067 332.286 li
281.735 332.286 li
281.07 332.286 li
280.737 332.286 li
280.737 331.955 li
280.405 331.955 li
280.072 331.955 li
280.072 329.634 li
280.072 329.966 li
280.405 329.966 li
280.737 330.297 li
281.07 330.297 li
281.402 330.297 li
281.402 330.629 li
281.735 330.629 li
282.067 330.629 li
282.4 330.629 li
282.732 330.629 li
283.065 330.629 li
283.398 330.629 li
283.398 330.297 li
283.73 330.297 li
283.73 329.966 li
284.063 329.966 li
284.063 329.634 li
284.063 329.303 li
284.395 329.303 li
284.395 328.971 li
284.395 328.64 li
284.395 322.672 li
280.072 322.672 li
280.072 321.014 li
286.39 321.014 li
cp
f
289.383 332.286 mo
289.383 330.629 li
292.043 327.976 li
292.376 327.976 li
292.376 327.645 li
292.708 327.645 li
292.708 327.313 li
293.041 327.313 li
293.374 326.982 li
293.374 326.65 li
293.706 326.65 li
293.706 326.319 li
294.039 325.987 li
294.039 325.656 li
294.371 325.656 li
294.371 325.324 li
294.371 324.993 li
294.371 324.661 li
294.371 324.33 li
294.704 324.33 li
294.704 323.998 li
294.371 323.998 li
294.371 323.667 li
294.371 323.335 li
294.039 323.003 li
293.706 323.003 li
293.706 322.672 li
293.374 322.672 li
293.041 322.672 li
292.708 322.672 li
292.376 322.672 li
292.043 322.672 li
291.711 323.003 li
291.378 323.003 li
291.046 323.335 li
290.713 323.667 li
289.383 322.34 li
289.716 322.009 li
290.048 322.009 li
290.048 321.677 li
290.381 321.346 li
290.713 321.346 li
291.046 321.014 li
291.378 321.014 li
291.711 321.014 li
292.043 321.014 li
292.376 320.683 li
292.708 320.683 li
293.041 320.683 li
293.374 320.683 li
293.706 320.683 li
294.039 320.683 li
294.371 321.014 li
294.704 321.014 li
295.036 321.014 li
295.369 321.346 li
295.701 321.346 li
295.701 321.677 li
296.034 321.677 li
296.034 322.009 li
296.366 322.009 li
296.366 322.34 li
296.699 322.672 li
296.699 323.003 li
296.699 323.335 li
296.699 323.667 li
296.699 323.998 li
296.699 324.33 li
296.699 324.661 li
296.699 324.993 li
296.699 325.324 li
296.699 325.656 li
296.366 325.656 li
296.366 325.987 li
296.034 326.65 li
296.034 326.982 li
295.701 326.982 li
295.701 327.313 li
295.369 327.313 li
295.369 327.645 li
295.036 327.645 li
295.036 327.976 li
294.704 327.976 li
294.704 328.308 li
294.371 328.64 li
294.039 328.64 li
292.376 330.297 li
297.364 330.297 li
297.364 332.286 li
cp
f
286.39 343.89 mo
286.39 343.89 li
286.39 344.222 li
286.39 344.553 li
286.39 344.885 li
286.058 345.216 li
286.058 345.548 li
286.058 345.879 li
285.725 345.879 li
285.725 346.211 li
285.393 346.543 li
285.06 346.543 li
285.06 346.874 li
284.728 346.874 li
284.395 346.874 li
284.395 347.206 li
284.063 347.206 li
283.73 347.206 li
283.398 347.206 li
283.065 347.206 li
282.732 347.537 li
282.4 347.537 li
282.4 347.206 li
282.067 347.206 li
281.735 347.206 li
281.07 347.206 li
280.737 347.206 li
280.737 346.874 li
280.405 346.874 li
280.072 346.874 li
280.072 344.553 li
280.072 344.885 li
280.405 344.885 li
280.737 345.216 li
281.07 345.216 li
281.402 345.216 li
281.402 345.548 li
281.735 345.548 li
282.067 345.548 li
282.4 345.548 li
282.732 345.548 li
283.065 345.548 li
283.398 345.548 li
283.398 345.216 li
283.73 345.216 li
283.73 344.885 li
284.063 344.885 li
284.063 344.553 li
284.063 344.222 li
284.395 344.222 li
284.395 343.89 li
284.395 343.559 li
284.395 337.591 li
280.072 337.591 li
280.072 335.933 li
286.39 335.933 li
cp
f
289.716 347.206 mo
289.716 345.216 li
292.708 345.216 li
292.708 337.923 li
290.048 339.249 li
289.383 337.591 li
293.041 335.602 li
294.704 335.602 li
294.704 345.216 li
297.364 345.216 li
297.364 347.206 li
cp
f
316.651 226.858 mo
316.651 226.858 li
316.651 227.189 li
316.651 227.521 li
316.651 227.852 li
316.651 228.184 li
316.318 228.515 li
316.318 228.847 li
316.318 229.178 li
315.986 229.51 li
315.986 229.842 li
315.653 230.173 li
315.321 230.505 li
314.988 230.505 li
314.988 230.836 li
314.656 230.836 li
314.323 230.836 li
314.323 231.168 li
313.991 231.168 li
313.658 231.168 li
313.325 231.168 li
312.993 231.168 li
312.66 231.499 li
312.328 231.499 li
311.995 231.499 li
311.663 231.168 li
311.33 231.168 li
310.998 231.168 li
310.665 231.168 li
310.333 231.168 li
310.333 230.836 li
310 230.836 li
309.668 230.505 li
309.335 230.505 li
309.335 230.173 li
309.003 230.173 li
309.003 229.842 li
308.67 229.51 li
308.67 229.178 li
308.67 228.847 li
308.337 228.847 li
308.337 228.515 li
308.337 228.184 li
308.337 227.852 li
308.337 227.521 li
308.337 227.189 li
308.337 219.895 li
310.333 219.895 li
310.333 227.189 li
310.333 227.521 li
310.665 227.521 li
310.665 227.852 li
310.665 228.184 li
310.665 228.515 li
310.665 228.847 li
310.998 228.847 li
310.998 229.178 li
311.33 229.178 li
311.663 229.51 li
311.995 229.51 li
312.328 229.51 li
312.66 229.51 li
312.993 229.51 li
313.325 229.51 li
313.658 229.51 li
313.658 229.178 li
313.991 229.178 li
313.991 228.847 li
314.323 228.847 li
314.323 228.515 li
314.323 228.184 li
314.323 227.852 li
314.323 227.521 li
314.656 227.521 li
314.656 227.189 li
314.656 219.895 li
316.651 219.895 li
cp
f
318.646 231.168 mo
318.646 229.51 li
321.306 226.858 li
321.639 226.526 li
321.971 226.195 li
322.304 225.863 li
322.304 225.532 li
322.636 225.532 li
322.636 225.2 li
322.969 224.869 li
322.969 224.537 li
323.301 224.537 li
323.301 224.205 li
323.301 223.874 li
323.634 223.874 li
323.634 223.542 li
323.634 223.211 li
323.634 222.879 li
323.634 222.548 li
323.301 222.548 li
323.301 222.216 li
322.969 221.885 li
322.636 221.553 li
322.304 221.553 li
321.971 221.553 li
321.639 221.553 li
321.306 221.553 li
320.974 221.553 li
320.641 221.885 li
320.309 221.885 li
320.309 222.216 li
319.976 222.216 li
319.644 222.548 li
318.313 221.222 li
318.646 221.222 li
318.646 220.89 li
318.978 220.89 li
319.311 220.559 li
319.644 220.227 li
319.976 220.227 li
320.309 219.895 li
320.641 219.895 li
320.974 219.895 li
321.306 219.564 li
321.639 219.564 li
322.304 219.564 li
322.636 219.564 li
322.969 219.564 li
323.301 219.564 li
323.301 219.895 li
323.634 219.895 li
323.967 219.895 li
324.299 220.227 li
324.632 220.227 li
324.964 220.559 li
324.964 220.89 li
325.297 220.89 li
325.297 221.222 li
325.629 221.222 li
325.629 221.553 li
325.629 221.885 li
325.629 222.216 li
325.962 222.548 li
325.962 222.879 li
325.962 223.211 li
325.962 223.542 li
325.629 223.874 li
325.629 224.205 li
325.629 224.537 li
325.297 224.869 li
325.297 225.532 li
324.964 225.532 li
324.964 225.863 li
324.632 225.863 li
324.632 226.195 li
324.299 226.526 li
323.967 226.526 li
323.967 226.858 li
323.634 226.858 li
323.634 227.189 li
323.301 227.521 li
322.969 227.521 li
321.306 229.178 li
326.294 229.178 li
326.294 231.168 li
cp
f
118.794 28.9303 mo
118.794 30.588 li
116.134 33.2403 li
115.801 33.2403 li
115.801 33.5718 li
115.469 33.5718 li
115.469 33.9034 li
115.136 33.9034 li
115.136 34.2349 li
114.803 34.5664 li
114.471 34.8979 li
114.471 35.2295 li
114.138 35.2295 li
114.138 35.561 li
113.806 35.8926 li
113.806 36.2241 li
113.806 36.5556 li
113.806 36.8872 li
113.806 37.2187 li
113.806 37.5502 li
113.806 37.8818 li
114.138 37.8818 li
114.138 38.2133 li
114.471 38.2133 li
114.803 38.5449 li
115.136 38.5449 li
115.469 38.5449 li
115.801 38.5449 li
116.134 38.5449 li
116.466 38.5449 li
116.466 38.2133 li
116.799 38.2133 li
117.131 37.8818 li
117.464 37.5502 li
117.796 37.5502 li
118.794 38.8763 li
118.794 39.2079 li
118.461 39.2079 li
118.129 39.5394 li
117.796 39.871 li
117.464 39.871 li
117.131 40.2026 li
116.799 40.2026 li
116.466 40.2026 li
116.134 40.2026 li
115.801 40.5341 li
115.469 40.5341 li
115.136 40.5341 li
114.803 40.5341 li
114.471 40.5341 li
114.138 40.5341 li
113.806 40.2026 li
113.473 40.2026 li
113.141 40.2026 li
113.141 39.871 li
112.808 39.871 li
112.476 39.871 li
112.476 39.5394 li
112.143 39.5394 li
112.143 39.2079 li
111.811 38.8763 li
111.811 38.5449 li
111.478 38.5449 li
111.478 38.2133 li
111.478 37.8818 li
111.478 37.5502 li
111.478 37.2187 li
111.478 36.8872 li
111.478 36.5556 li
111.478 36.2241 li
111.478 35.8926 li
111.811 35.561 li
111.811 35.2295 li
112.143 34.5664 li
112.476 34.2349 li
112.808 33.9034 li
113.141 33.5718 li
113.473 33.2403 li
113.806 32.9088 li
113.806 32.5771 li
114.138 32.5771 li
115.801 30.9196 li
111.146 30.9196 li
111.146 28.9303 li
cp
f
306.342 111.483 mo
306.342 111.483 li
306.01 111.483 li
305.677 111.483 li
305.345 111.814 li
305.012 111.814 li
304.68 111.814 li
304.347 111.814 li
304.015 111.814 li
303.682 111.814 li
303.349 111.814 li
303.017 111.814 li
302.684 111.814 li
302.352 111.814 li
302.019 111.814 li
301.687 111.814 li
301.354 111.483 li
301.022 111.483 li
300.689 111.483 li
300.357 111.151 li
300.024 111.151 li
300.024 110.82 li
299.692 110.488 li
299.359 110.157 li
299.027 109.825 li
299.027 109.494 li
298.694 109.162 li
298.694 108.831 li
298.694 108.499 li
298.694 108.168 li
298.362 107.836 li
298.362 107.173 li
298.362 106.841 li
298.362 106.178 li
298.362 105.847 li
298.362 105.515 li
298.362 105.184 li
298.362 104.521 li
298.694 104.189 li
298.694 103.858 li
298.694 103.526 li
299.027 103.526 li
299.027 103.195 li
299.027 102.863 li
299.359 102.531 li
299.359 102.2 li
299.692 101.868 li
300.024 101.868 li
300.024 101.537 li
300.357 101.537 li
300.357 101.205 li
300.689 100.874 li
301.022 100.874 li
301.354 100.542 li
301.687 100.542 li
302.019 100.542 li
302.352 100.542 li
302.684 100.211 li
303.017 100.211 li
303.682 100.211 li
304.015 100.211 li
304.347 100.211 li
304.68 100.211 li
305.012 100.211 li
305.012 100.542 li
305.345 100.542 li
305.677 100.542 li
306.01 100.542 li
306.342 100.542 li
306.342 102.863 li
306.01 102.531 li
305.677 102.531 li
305.345 102.531 li
305.012 102.2 li
304.68 102.2 li
304.347 102.2 li
303.682 102.2 li
303.349 102.2 li
303.017 102.2 li
302.684 102.2 li
302.684 102.531 li
302.352 102.531 li
302.019 102.531 li
302.019 102.863 li
301.687 102.863 li
301.687 103.195 li
301.354 103.195 li
301.354 103.526 li
301.022 103.858 li
301.022 104.189 li
301.022 104.521 li
300.689 104.852 li
300.689 105.184 li
300.689 105.515 li
300.689 105.847 li
300.689 106.178 li
300.689 106.51 li
300.689 106.841 li
300.689 107.173 li
301.022 107.836 li
301.022 108.168 li
301.022 108.499 li
301.354 108.499 li
301.354 108.831 li
301.354 109.162 li
301.687 109.162 li
301.687 109.494 li
302.019 109.494 li
302.352 109.825 li
302.684 109.825 li
303.017 109.825 li
303.349 110.157 li
303.682 110.157 li
304.015 110.157 li
304.347 110.157 li
304.347 109.825 li
304.68 109.825 li
305.012 109.825 li
305.345 109.825 li
305.677 109.825 li
305.677 109.494 li
306.01 109.494 li
306.342 109.494 li
cp
f
316.318 108.499 mo
316.318 108.499 li
316.318 108.831 li
316.318 109.162 li
316.318 109.494 li
315.986 109.825 li
315.986 110.157 li
315.653 110.157 li
315.653 110.488 li
315.321 110.82 li
314.988 111.151 li
314.656 111.151 li
314.323 111.483 li
313.991 111.483 li
313.658 111.483 li
313.325 111.814 li
312.993 111.814 li
312.66 111.814 li
312.328 111.814 li
311.995 111.814 li
311.663 111.814 li
310.998 112.146 li
310.665 112.146 li
310.665 111.814 li
310.333 111.814 li
310 111.814 li
309.668 111.814 li
309.335 111.814 li
309.003 111.814 li
308.67 111.814 li
308.67 109.825 li
308.67 110.157 li
309.003 110.157 li
309.335 110.157 li
309.668 110.157 li
310 110.157 li
310.333 110.157 li
310.665 110.157 li
310.998 110.157 li
311.33 110.157 li
311.663 110.157 li
311.995 110.157 li
312.328 110.157 li
312.66 110.157 li
312.993 110.157 li
313.325 109.825 li
313.658 109.825 li
313.658 109.494 li
313.991 109.162 li
313.991 108.831 li
313.991 108.499 li
313.991 108.168 li
313.991 107.836 li
313.991 107.505 li
313.658 107.505 li
313.325 107.173 li
312.993 107.173 li
312.993 106.841 li
312.66 106.841 li
312.328 106.841 li
311.995 106.841 li
311.663 106.841 li
311.33 106.841 li
310 106.841 li
310 105.184 li
311.33 105.184 li
311.663 105.184 li
311.995 105.184 li
312.328 105.184 li
312.328 104.852 li
312.66 104.852 li
312.993 104.852 li
312.993 104.521 li
313.325 104.521 li
313.325 104.189 li
313.658 103.858 li
313.658 103.526 li
313.658 103.195 li
313.325 102.863 li
313.325 102.531 li
312.993 102.531 li
312.993 102.2 li
312.66 102.2 li
312.328 102.2 li
311.995 102.2 li
311.663 102.2 li
311.33 102.2 li
310.998 102.2 li
310.333 102.2 li
310 102.2 li
309.668 102.2 li
309.668 102.531 li
309.003 102.531 li
309.003 100.874 li
309.003 100.542 li
309.335 100.542 li
309.668 100.542 li
310 100.542 li
310.333 100.542 li
310.665 100.211 li
310.998 100.211 li
311.33 100.211 li
311.663 100.211 li
311.995 100.211 li
312.328 100.211 li
312.66 100.211 li
312.993 100.211 li
313.325 100.542 li
313.658 100.542 li
313.991 100.542 li
314.323 100.542 li
314.323 100.874 li
314.656 100.874 li
314.656 101.205 li
314.988 101.205 li
315.321 101.537 li
315.321 101.868 li
315.653 101.868 li
315.653 102.2 li
315.653 102.531 li
315.653 102.863 li
315.653 103.195 li
315.653 103.526 li
315.653 103.858 li
315.653 104.189 li
315.321 104.521 li
315.321 104.852 li
314.988 104.852 li
314.988 105.184 li
314.656 105.184 li
314.656 105.515 li
314.323 105.515 li
313.991 105.847 li
314.323 105.847 li
314.656 105.847 li
314.988 106.178 li
315.321 106.178 li
315.321 106.51 li
315.653 106.51 li
315.653 106.841 li
315.986 106.841 li
315.986 107.173 li
316.318 107.505 li
316.318 107.836 li
316.318 108.499 li
cp
f
319.644 30.588 mo
319.644 32.5771 li
316.651 32.5771 li
316.651 39.871 li
319.311 38.5449 li
319.976 40.2026 li
316.318 42.1918 li
314.656 42.1918 li
314.656 32.5771 li
311.995 32.5771 li
311.995 30.588 li
cp
f
301.687 36.2241 mo
301.687 36.2241 li
301.687 35.8926 li
301.687 35.561 li
301.687 35.2295 li
302.019 34.5664 li
302.019 34.2349 li
302.019 33.9034 li
302.019 33.5718 li
302.352 33.5718 li
302.352 33.2403 li
302.352 32.9088 li
302.684 32.5771 li
302.684 32.2457 li
303.017 31.9141 li
303.349 31.5826 li
303.682 31.251 li
304.015 30.9196 li
304.347 30.9196 li
304.68 30.588 li
305.012 30.588 li
305.345 30.588 li
305.677 30.588 li
306.01 30.2564 li
306.342 30.2564 li
306.675 30.2564 li
307.007 30.588 li
307.34 30.588 li
307.672 30.588 li
308.005 30.588 li
308.337 30.9196 li
308.67 30.9196 li
308.67 31.251 li
309.003 31.251 li
309.335 31.5826 li
309.335 31.9141 li
309.668 31.9141 li
309.668 32.2457 li
310 32.5771 li
310 32.9088 li
310.333 33.2403 li
310.333 33.5718 li
310.333 33.9034 li
310.333 34.2349 li
310.665 34.2349 li
310.665 34.5664 li
310.665 35.2295 li
310.665 35.561 li
310.665 36.2241 li
310.665 36.5556 li
310.665 36.8872 li
310.665 37.5502 li
310.665 37.8818 li
310.333 38.2133 li
310.333 38.5449 li
310.333 38.8763 li
310.333 39.2079 li
310 39.2079 li
310 39.5394 li
310 39.871 li
309.668 40.2026 li
309.335 40.5341 li
309.335 40.8656 li
309.003 40.8656 li
309.003 41.1971 li
308.67 41.5287 li
308.337 41.5287 li
308.005 41.8602 li
307.672 41.8602 li
307.34 41.8602 li
307.007 42.1918 li
306.342 42.1918 li
306.01 42.1918 li
305.677 42.1918 li
305.345 42.1918 li
305.012 41.8602 li
304.68 41.8602 li
304.347 41.8602 li
304.015 41.5287 li
303.682 41.5287 li
303.349 41.1971 li
303.349 40.8656 li
303.017 40.8656 li
303.017 40.5341 li
302.684 40.5341 li
302.684 40.2026 li
302.684 39.871 li
302.352 39.871 li
302.352 39.2079 li
302.019 38.8763 li
302.019 38.5449 li
302.019 38.2133 li
302.019 37.8818 li
301.687 37.2187 li
301.687 36.8872 li
301.687 36.2241 li
cp
308.67 36.2241 mo
308.67 36.2241 li
308.67 35.8926 li
308.67 35.561 li
304.347 38.8763 li
304.347 39.2079 li
304.68 39.5394 li
305.012 39.871 li
305.012 40.2026 li
305.345 40.2026 li
305.677 40.2026 li
306.01 40.5341 li
306.342 40.5341 li
306.675 40.5341 li
306.675 40.2026 li
307.007 40.2026 li
307.34 40.2026 li
307.34 39.871 li
307.672 39.871 li
307.672 39.5394 li
308.005 39.5394 li
308.005 39.2079 li
308.005 38.8763 li
308.337 38.5449 li
308.337 38.2133 li
308.337 37.8818 li
308.337 37.5502 li
308.337 37.2187 li
308.337 36.8872 li
308.67 36.5556 li
308.67 36.2241 li
cp
304.015 36.2241 mo
304.015 36.2241 li
304.015 36.5556 li
304.015 36.8872 li
308.337 33.9034 li
308.005 33.9034 li
308.005 33.5718 li
308.005 33.2403 li
307.672 32.9088 li
307.672 32.5771 li
307.34 32.5771 li
307.34 32.2457 li
307.007 32.2457 li
306.675 32.2457 li
306.342 32.2457 li
306.01 32.2457 li
305.677 32.2457 li
305.345 32.2457 li
305.012 32.5771 li
304.68 32.9088 li
304.68 33.2403 li
304.347 33.2403 li
304.347 33.5718 li
304.347 33.9034 li
304.015 34.2349 li
304.015 34.5664 li
304.015 34.8979 li
304.015 35.2295 li
304.015 35.561 li
304.015 35.8926 li
304.015 36.2241 li
cp
f
357.885 224.205 mo
357.885 224.205 li
357.552 224.205 li
357.22 224.205 li
356.887 224.537 li
356.555 224.537 li
356.222 224.537 li
355.89 224.537 li
355.557 224.537 li
355.225 224.537 li
354.892 224.537 li
354.56 224.537 li
354.227 224.537 li
353.894 224.537 li
353.562 224.537 li
353.229 224.537 li
352.897 224.205 li
352.564 224.205 li
352.232 224.205 li
351.899 223.874 li
351.567 223.874 li
351.567 223.542 li
351.234 223.211 li
350.902 222.879 li
350.569 222.548 li
350.569 222.216 li
350.237 221.885 li
350.237 221.553 li
350.237 221.222 li
350.237 220.89 li
349.904 220.559 li
349.904 219.895 li
349.904 219.564 li
349.904 218.901 li
349.904 218.569 li
349.904 218.238 li
349.904 217.906 li
349.904 217.243 li
350.237 216.912 li
350.237 216.58 li
350.237 216.249 li
350.569 216.249 li
350.569 215.917 li
350.569 215.585 li
350.902 215.254 li
350.902 214.922 li
351.234 214.591 li
351.567 214.591 li
351.567 214.259 li
351.899 214.259 li
351.899 213.928 li
352.232 213.596 li
352.564 213.596 li
352.897 213.265 li
353.229 213.265 li
353.562 213.265 li
353.894 213.265 li
354.227 212.933 li
354.56 212.933 li
355.225 212.933 li
355.557 212.933 li
355.89 212.933 li
356.222 212.933 li
356.555 212.933 li
356.555 213.265 li
356.887 213.265 li
357.22 213.265 li
357.552 213.265 li
357.885 213.265 li
357.885 215.585 li
357.552 215.254 li
357.22 215.254 li
356.887 215.254 li
356.555 214.922 li
356.222 214.922 li
355.89 214.922 li
355.225 214.922 li
354.892 214.922 li
354.56 214.922 li
354.227 214.922 li
354.227 215.254 li
353.894 215.254 li
353.562 215.254 li
353.562 215.585 li
353.229 215.585 li
353.229 215.917 li
352.897 215.917 li
352.897 216.249 li
352.564 216.58 li
352.564 216.912 li
352.564 217.243 li
352.232 217.575 li
352.232 217.906 li
352.232 218.238 li
352.232 218.569 li
352.232 218.901 li
352.232 219.232 li
352.232 219.564 li
352.232 219.895 li
352.564 220.559 li
352.564 220.89 li
352.564 221.222 li
352.897 221.222 li
352.897 221.553 li
352.897 221.885 li
353.229 221.885 li
353.229 222.216 li
353.562 222.216 li
353.894 222.548 li
354.227 222.548 li
354.56 222.548 li
354.892 222.879 li
355.225 222.879 li
355.557 222.879 li
355.89 222.879 li
355.89 222.548 li
356.222 222.548 li
356.555 222.548 li
356.887 222.548 li
357.22 222.548 li
357.22 222.216 li
357.552 222.216 li
357.885 222.216 li
cp
f
360.213 224.537 mo
360.213 222.879 li
362.873 220.227 li
363.205 219.895 li
363.538 219.564 li
363.87 219.232 li
364.203 218.901 li
364.203 218.569 li
364.535 218.569 li
364.535 218.238 li
364.868 217.906 li
364.868 217.575 li
365.201 217.243 li
365.201 216.912 li
365.201 216.58 li
365.201 216.249 li
365.201 215.917 li
364.868 215.917 li
364.868 215.585 li
364.868 215.254 li
364.535 215.254 li
364.203 214.922 li
363.87 214.922 li
363.538 214.922 li
363.205 214.922 li
362.873 214.922 li
362.54 214.922 li
362.208 215.254 li
361.875 215.254 li
361.875 215.585 li
361.543 215.585 li
361.543 215.917 li
361.21 215.917 li
360.213 214.591 li
360.213 214.259 li
360.545 214.259 li
360.878 213.928 li
361.21 213.596 li
361.543 213.596 li
361.875 213.265 li
362.208 213.265 li
362.54 213.265 li
362.873 212.933 li
363.205 212.933 li
363.87 212.933 li
364.203 212.933 li
364.535 212.933 li
364.868 212.933 li
364.868 213.265 li
365.201 213.265 li
365.533 213.265 li
365.866 213.596 li
366.198 213.596 li
366.531 213.928 li
366.863 214.259 li
366.863 214.591 li
367.196 214.591 li
367.196 214.922 li
367.196 215.254 li
367.528 215.585 li
367.528 215.917 li
367.528 216.249 li
367.528 216.58 li
367.528 216.912 li
367.528 217.243 li
367.196 217.575 li
367.196 217.906 li
367.196 218.238 li
366.863 218.238 li
366.863 218.901 li
366.531 218.901 li
366.531 219.232 li
366.198 219.564 li
365.866 219.895 li
365.533 219.895 li
365.533 220.227 li
365.201 220.559 li
364.868 220.89 li
363.205 222.548 li
367.861 222.548 li
367.861 224.537 li
cp
f
120.124 343.559 mo
120.124 343.559 li
119.791 343.559 li
119.459 343.559 li
119.126 343.89 li
118.794 343.89 li
118.461 343.89 li
118.129 343.89 li
117.796 343.89 li
117.464 343.89 li
117.131 343.89 li
116.799 343.89 li
116.466 343.89 li
116.134 343.89 li
115.801 343.89 li
115.469 343.89 li
115.136 343.559 li
114.803 343.559 li
114.471 343.559 li
114.138 343.227 li
113.806 343.227 li
113.806 342.896 li
113.473 342.564 li
113.141 342.233 li
112.808 341.901 li
112.808 341.569 li
112.476 341.238 li
112.476 340.906 li
112.476 340.575 li
112.476 340.243 li
112.143 339.912 li
112.143 339.249 li
112.143 338.917 li
112.143 338.254 li
112.143 337.923 li
112.143 337.591 li
112.143 337.259 li
112.143 336.596 li
112.476 336.265 li
112.476 335.933 li
112.476 335.602 li
112.808 335.602 li
112.808 335.27 li
112.808 334.939 li
113.141 334.607 li
113.141 334.276 li
113.473 333.944 li
113.806 333.944 li
113.806 333.613 li
114.138 333.613 li
114.138 333.281 li
114.471 332.95 li
114.803 332.95 li
115.136 332.618 li
115.469 332.618 li
115.801 332.618 li
116.134 332.618 li
116.466 332.286 li
116.799 332.286 li
117.464 332.286 li
117.796 332.286 li
118.129 332.286 li
118.461 332.286 li
118.794 332.286 li
118.794 332.618 li
119.126 332.618 li
119.459 332.618 li
119.791 332.618 li
120.124 332.618 li
120.124 334.939 li
119.791 334.607 li
119.459 334.607 li
119.126 334.607 li
118.794 334.276 li
118.461 334.276 li
118.129 334.276 li
117.464 334.276 li
117.131 334.276 li
116.799 334.276 li
116.466 334.276 li
116.466 334.607 li
116.134 334.607 li
115.801 334.607 li
115.801 334.939 li
115.469 334.939 li
115.469 335.27 li
115.136 335.27 li
115.136 335.602 li
114.803 335.933 li
114.803 336.265 li
114.803 336.596 li
114.471 336.928 li
114.471 337.259 li
114.471 337.591 li
114.471 337.923 li
114.471 338.254 li
114.471 338.586 li
114.471 338.917 li
114.471 339.249 li
114.803 339.912 li
114.803 340.243 li
114.803 340.575 li
115.136 340.575 li
115.136 340.906 li
115.136 341.238 li
115.469 341.238 li
115.469 341.569 li
115.801 341.569 li
116.134 341.901 li
116.466 341.901 li
116.799 341.901 li
117.131 342.233 li
117.464 342.233 li
117.796 342.233 li
118.129 342.233 li
118.129 341.901 li
118.461 341.901 li
118.794 341.901 li
119.126 341.901 li
119.459 341.901 li
119.459 341.569 li
119.791 341.569 li
120.124 341.569 li
cp
f
122.452 343.89 mo
122.452 341.901 li
125.445 341.901 li
125.445 334.607 li
122.784 335.933 li
122.119 334.276 li
125.777 332.286 li
127.772 332.286 li
127.772 341.901 li
130.1 341.901 li
130.1 343.89 li
cp
f
63.5934 362.788 mo
63.5934 362.788 li
63.5934 363.119 li
63.5934 363.451 li
63.2609 363.782 li
63.2609 364.114 li
63.2609 364.445 li
62.9284 364.777 li
62.9284 365.109 li
62.5958 365.109 li
62.5958 365.44 li
62.2633 365.772 li
61.9308 365.772 li
61.5982 366.103 li
61.2657 366.435 li
60.9331 366.435 li
60.6006 366.435 li
60.2681 366.766 li
59.9356 366.766 li
59.603 366.766 li
59.2705 366.766 li
58.938 366.766 li
57.9404 366.766 li
57.9404 370.413 li
55.6126 370.413 li
55.6126 359.141 li
58.938 359.141 li
59.2705 359.141 li
59.603 359.141 li
59.9356 359.141 li
60.2681 359.141 li
60.6006 359.141 li
60.9331 359.141 li
60.9331 359.472 li
61.2657 359.472 li
61.5982 359.472 li
61.9308 359.804 li
62.2633 359.804 li
62.2633 360.136 li
62.5958 360.136 li
62.5958 360.467 li
62.9284 360.467 li
62.9284 360.799 li
63.2609 361.13 li
63.2609 361.462 li
63.2609 361.793 li
63.5934 362.125 li
63.5934 362.456 li
63.5934 362.788 li
cp
61.2657 362.788 mo
61.2657 362.788 li
61.2657 362.456 li
61.2657 362.125 li
60.9331 361.793 li
60.9331 361.462 li
60.6006 361.462 li
60.6006 361.13 li
60.2681 361.13 li
59.9356 361.13 li
59.9356 360.799 li
59.603 360.799 li
59.2705 360.799 li
58.938 360.799 li
57.9404 360.799 li
57.9404 365.109 li
58.938 365.109 li
59.2705 365.109 li
59.603 365.109 li
59.603 364.777 li
59.9356 364.777 li
60.2681 364.777 li
60.6006 364.445 li
60.9331 364.445 li
60.9331 364.114 li
61.2657 363.782 li
61.2657 363.451 li
61.2657 363.119 li
61.2657 362.788 li
cp
f
65.5886 370.413 mo
65.5886 368.424 li
68.5814 368.424 li
68.5814 361.13 li
65.9212 362.456 li
65.2561 360.799 li
68.9139 358.809 li
70.5766 358.809 li
70.5766 368.424 li
73.2369 368.424 li
73.2369 370.413 li
cp
f
118.461 63.7416 mo
118.461 65.7309 li
115.469 65.7309 li
115.469 73.0247 li
118.129 71.6985 li
118.794 73.3562 li
115.136 75.3454 li
113.473 75.3454 li
113.473 65.7309 li
110.813 65.7309 li
110.813 63.7416 li
cp
f
59.9356 69.7094 mo
59.9356 73.6878 li
57.6078 73.6878 li
57.6078 69.7094 li
53.95 62.4155 li
56.2777 62.4155 li
57.9404 65.7309 li
58.6054 67.7201 li
59.603 65.7309 li
61.2657 62.4155 li
63.5934 62.4155 li
cp
f
64.9236 73.6878 mo
64.9236 71.6985 li
67.9164 71.6985 li
67.9164 64.4047 li
65.2561 65.7309 li
64.591 64.0732 li
68.2489 62.084 li
70.2441 62.084 li
70.2441 71.6985 li
72.5718 71.6985 li
72.5718 73.6878 li
cp
f
301.687 70.0408 mo
301.687 70.0408 li
301.687 69.7094 li
301.687 69.3778 li
301.687 69.0462 li
301.687 68.3832 li
302.019 68.0516 li
302.019 67.7201 li
302.019 67.3886 li
302.019 67.057 li
302.352 67.057 li
302.352 66.7255 li
302.352 66.394 li
302.684 66.0624 li
302.684 65.7309 li
303.017 65.7309 li
303.017 65.3994 li
303.349 65.0678 li
303.682 64.7362 li
304.015 64.7362 li
304.015 64.4047 li
304.347 64.4047 li
304.68 64.4047 li
305.012 64.0732 li
305.345 64.0732 li
305.677 64.0732 li
306.01 63.7416 li
306.342 63.7416 li
306.675 63.7416 li
307.007 63.7416 li
307.34 63.7416 li
307.672 63.7416 li
308.005 63.7416 li
309.335 63.7416 li
309.335 65.3994 li
307.672 65.3994 li
307.34 65.7309 li
307.007 65.7309 li
306.675 65.7309 li
306.342 65.7309 li
306.01 65.7309 li
305.677 65.7309 li
305.345 66.0624 li
305.012 66.0624 li
305.012 66.394 li
304.68 66.394 li
304.68 66.7255 li
304.347 67.057 li
304.347 67.3886 li
304.015 67.7201 li
304.015 68.0516 li
304.015 68.3832 li
304.347 68.3832 li
304.68 68.3832 li
305.012 68.0516 li
305.345 68.0516 li
305.677 68.0516 li
306.342 68.0516 li
306.675 68.0516 li
307.007 68.0516 li
307.34 68.0516 li
307.672 68.0516 li
308.005 68.0516 li
308.005 68.3832 li
308.337 68.3832 li
308.67 68.3832 li
308.67 68.7147 li
309.003 68.7147 li
309.003 69.0462 li
309.335 69.0462 li
309.335 69.3778 li
309.668 69.3778 li
309.668 69.7094 li
309.668 70.0408 li
310 70.3723 li
310 70.7039 li
310 71.0355 li
310 71.3669 li
310 71.6985 li
310 72.0301 li
310 72.3616 li
309.668 72.6931 li
309.668 73.0247 li
309.668 73.3562 li
309.335 73.3562 li
309.335 73.6878 li
309.003 74.0193 li
309.003 74.3508 li
308.67 74.3508 li
308.337 74.6824 li
308.005 74.6824 li
307.672 75.0139 li
307.34 75.0139 li
307.007 75.0139 li
306.675 75.3454 li
306.342 75.3454 li
306.01 75.3454 li
305.677 75.3454 li
305.345 75.3454 li
305.012 75.3454 li
304.68 75.3454 li
304.347 75.0139 li
304.015 75.0139 li
303.682 74.6824 li
303.349 74.6824 li
303.017 74.3508 li
303.017 74.0193 li
302.684 74.0193 li
302.684 73.6878 li
302.352 73.6878 li
302.352 73.3562 li
302.019 73.0247 li
302.019 72.6931 li
302.019 72.3616 li
302.019 72.0301 li
301.687 71.3669 li
301.687 71.0355 li
301.687 70.7039 li
301.687 70.0408 li
cp
306.01 73.6878 mo
306.01 73.6878 li
306.342 73.3562 li
306.675 73.3562 li
307.007 73.3562 li
307.007 73.0247 li
307.34 73.0247 li
307.34 72.6931 li
307.672 72.6931 li
307.672 72.3616 li
307.672 72.0301 li
307.672 71.6985 li
307.672 71.3669 li
307.672 71.0355 li
307.672 70.7039 li
307.34 70.3723 li
307.34 70.0408 li
307.007 70.0408 li
306.675 70.0408 li
306.675 69.7094 li
306.342 69.7094 li
306.01 69.7094 li
305.677 69.7094 li
305.345 69.7094 li
305.012 69.7094 li
305.012 70.0408 li
304.68 70.0408 li
304.347 70.0408 li
304.015 70.3723 li
304.015 70.7039 li
304.015 71.0355 li
304.015 71.3669 li
304.015 71.6985 li
304.015 72.0301 li
304.347 72.3616 li
304.347 72.6931 li
304.68 72.6931 li
304.68 73.0247 li
305.012 73.3562 li
305.345 73.3562 li
305.677 73.3562 li
305.677 73.6878 li
306.01 73.6878 li
cp
f
360.213 352.842 mo
360.213 353.173 li
360.213 353.505 li
360.213 353.836 li
360.213 354.168 li
359.88 354.499 li
359.88 354.831 li
359.88 355.494 li
359.548 355.826 li
359.548 356.157 li
359.215 356.489 li
359.215 356.82 li
358.882 357.152 li
358.55 357.483 li
358.217 357.815 li
357.885 358.146 li
357.552 358.146 li
356.887 358.478 li
356.555 358.478 li
356.222 358.478 li
355.89 358.809 li
355.557 358.809 li
354.892 358.809 li
354.56 358.809 li
351.567 358.809 li
351.567 347.537 li
354.892 347.537 li
355.225 347.537 li
355.557 347.537 li
356.222 347.537 li
356.555 347.537 li
356.887 347.537 li
357.22 347.869 li
357.552 347.869 li
357.885 347.869 li
357.885 348.2 li
358.217 348.2 li
358.55 348.532 li
358.882 348.863 li
359.215 349.195 li
359.215 349.526 li
359.548 349.858 li
359.548 350.189 li
359.88 350.521 li
359.88 350.853 li
359.88 351.184 li
360.213 351.516 li
360.213 351.847 li
360.213 352.51 li
360.213 352.842 li
cp
357.885 353.173 mo
357.885 353.173 li
357.885 352.842 li
357.885 352.51 li
357.885 352.179 li
357.552 351.516 li
357.552 351.184 li
357.552 350.853 li
357.552 350.521 li
357.22 350.521 li
357.22 350.189 li
356.887 349.858 li
356.555 349.858 li
356.555 349.526 li
356.222 349.526 li
355.89 349.526 li
355.557 349.195 li
355.225 349.195 li
354.892 349.195 li
353.562 349.195 li
353.562 357.152 li
354.56 357.152 li
354.892 357.152 li
355.225 356.82 li
355.557 356.82 li
355.89 356.82 li
356.222 356.489 li
356.555 356.489 li
356.887 356.157 li
357.22 356.157 li
357.22 355.826 li
357.22 355.494 li
357.552 355.494 li
357.552 355.162 li
357.552 354.831 li
357.885 354.499 li
357.885 354.168 li
357.885 353.836 li
357.885 353.505 li
357.885 353.173 li
cp
f
369.523 358.478 mo
369.523 358.478 li
369.191 358.478 li
368.858 358.478 li
368.526 358.809 li
367.861 358.809 li
367.528 358.809 li
367.196 358.809 li
366.863 358.809 li
366.531 358.809 li
366.198 358.809 li
365.866 358.809 li
365.533 358.809 li
364.868 358.809 li
364.535 358.809 li
364.203 358.478 li
363.87 358.478 li
363.538 358.478 li
363.538 358.146 li
363.205 358.146 li
362.873 357.815 li
362.54 357.483 li
362.54 357.152 li
362.208 357.152 li
362.208 356.82 li
361.875 356.489 li
361.875 356.157 li
361.543 355.826 li
361.543 355.494 li
361.543 355.162 li
361.543 354.831 li
361.543 354.168 li
361.543 353.836 li
361.21 353.173 li
361.543 352.842 li
361.543 352.51 li
361.543 352.179 li
361.543 351.516 li
361.543 351.184 li
361.543 350.853 li
361.875 350.853 li
361.875 350.521 li
361.875 350.189 li
362.208 349.858 li
362.208 349.526 li
362.54 349.195 li
362.873 348.863 li
362.873 348.532 li
363.205 348.532 li
363.538 348.2 li
363.87 347.869 li
364.203 347.869 li
364.535 347.537 li
364.868 347.537 li
365.201 347.537 li
365.533 347.537 li
365.866 347.206 li
366.198 347.206 li
366.531 347.206 li
366.863 347.206 li
367.196 347.206 li
367.528 347.206 li
367.861 347.206 li
368.193 347.206 li
368.193 347.537 li
368.526 347.537 li
368.858 347.537 li
369.191 347.537 li
369.523 347.537 li
369.523 349.858 li
369.191 349.858 li
369.191 349.526 li
368.858 349.526 li
368.526 349.526 li
367.861 349.195 li
367.528 349.195 li
367.196 349.195 li
366.863 349.195 li
366.531 349.195 li
366.198 349.195 li
365.866 349.195 li
365.533 349.526 li
365.201 349.526 li
364.868 349.858 li
364.535 350.189 li
364.203 350.521 li
364.203 350.853 li
363.87 351.184 li
363.87 351.516 li
363.87 351.847 li
363.87 352.179 li
363.87 352.51 li
363.87 352.842 li
363.87 353.173 li
363.87 353.505 li
363.87 353.836 li
363.87 354.168 li
363.87 354.831 li
363.87 355.162 li
364.203 355.494 li
364.203 355.826 li
364.535 356.157 li
364.868 356.157 li
364.868 356.489 li
365.201 356.82 li
365.533 356.82 li
365.866 356.82 li
366.198 357.152 li
366.531 357.152 li
366.863 357.152 li
367.196 357.152 li
367.528 357.152 li
367.528 356.82 li
367.861 356.82 li
368.193 356.82 li
368.526 356.82 li
368.858 356.489 li
369.191 356.489 li
369.523 356.489 li
cp
f
373.181 360.799 mo
371.186 360.799 li
377.172 346.543 li
379.167 346.543 li
cp
f
387.813 358.809 mo
387.148 356.489 li
383.157 356.489 li
382.492 358.809 li
380.497 358.809 li
383.822 347.537 li
386.815 347.537 li
390.14 358.809 li
cp
385.152 349.526 mo
383.49 354.831 li
386.483 354.831 li
cp
f
398.786 358.478 mo
398.786 358.478 li
398.454 358.478 li
398.121 358.478 li
397.789 358.809 li
397.456 358.809 li
397.124 358.809 li
396.791 358.809 li
396.459 358.809 li
396.126 358.809 li
395.794 358.809 li
395.461 358.809 li
395.129 358.809 li
394.796 358.809 li
394.463 358.809 li
394.131 358.809 li
393.798 358.478 li
393.466 358.478 li
393.133 358.478 li
392.801 358.146 li
392.468 357.815 li
392.136 357.483 li
391.803 357.152 li
391.471 356.82 li
391.471 356.489 li
391.471 356.157 li
391.138 355.826 li
391.138 355.494 li
391.138 355.162 li
390.806 354.831 li
390.806 354.168 li
390.806 353.836 li
390.806 353.173 li
390.806 352.842 li
390.806 352.51 li
390.806 352.179 li
391.138 351.516 li
391.138 351.184 li
391.138 350.853 li
391.138 350.521 li
391.471 350.521 li
391.471 350.189 li
391.471 349.858 li
391.803 349.526 li
392.136 349.195 li
392.136 348.863 li
392.468 348.863 li
392.468 348.532 li
392.801 348.532 li
392.801 348.2 li
393.133 347.869 li
393.466 347.869 li
393.798 347.537 li
394.131 347.537 li
394.463 347.537 li
394.796 347.537 li
395.129 347.206 li
395.794 347.206 li
396.126 347.206 li
396.459 347.206 li
396.791 347.206 li
397.124 347.206 li
397.456 347.206 li
397.456 347.537 li
397.789 347.537 li
398.121 347.537 li
398.454 347.537 li
398.786 347.537 li
398.786 349.858 li
398.454 349.526 li
398.121 349.526 li
397.456 349.195 li
397.124 349.195 li
396.791 349.195 li
396.126 349.195 li
395.794 349.195 li
395.461 349.195 li
395.129 349.526 li
394.796 349.526 li
394.463 349.526 li
394.463 349.858 li
394.131 349.858 li
394.131 350.189 li
393.798 350.189 li
393.798 350.521 li
393.466 350.853 li
393.466 351.184 li
393.466 351.516 li
393.466 351.847 li
393.133 351.847 li
393.133 352.179 li
393.133 352.51 li
393.133 352.842 li
393.133 353.173 li
393.133 353.505 li
393.133 353.836 li
393.133 354.168 li
393.466 354.831 li
393.466 355.162 li
393.466 355.494 li
393.798 355.494 li
393.798 355.826 li
393.798 356.157 li
394.131 356.157 li
394.463 356.489 li
394.796 356.82 li
395.129 356.82 li
395.461 356.82 li
395.794 357.152 li
396.126 357.152 li
396.459 357.152 li
396.791 357.152 li
396.791 356.82 li
397.124 356.82 li
397.456 356.82 li
397.789 356.82 li
398.121 356.82 li
398.121 356.489 li
398.454 356.489 li
398.786 356.489 li
cp
f
99.1744 53.1325 mo
99.1744 53.1325 li
99.1744 52.8009 li
99.1744 52.4694 li
99.507 52.1379 li
99.507 51.8063 li
99.507 51.4747 li
99.8394 51.1432 li
99.8394 50.8118 li
100.172 50.8118 li
100.172 50.4802 li
100.505 50.1486 li
100.837 50.1486 li
101.17 49.8171 li
101.502 49.4856 li
101.835 49.4856 li
102.167 49.4856 li
102.5 49.154 li
102.832 49.154 li
103.165 49.154 li
103.497 49.154 li
103.83 49.154 li
104.827 49.154 li
104.827 45.5071 li
107.155 45.5071 li
107.155 56.7794 li
103.83 56.7794 li
103.497 56.7794 li
103.165 56.7794 li
102.832 56.7794 li
102.5 56.7794 li
102.167 56.7794 li
101.835 56.7794 li
101.835 56.4478 li
101.502 56.4478 li
101.17 56.4478 li
100.837 56.1163 li
100.505 56.1163 li
100.505 55.7848 li
100.172 55.7848 li
100.172 55.4532 li
99.8394 55.4532 li
99.8394 55.1217 li
99.507 54.7902 li
99.507 54.4586 li
99.507 54.1271 li
99.1744 53.7956 li
99.1744 53.464 li
99.1744 53.1325 li
cp
101.502 53.1325 mo
101.502 53.1325 li
101.502 53.464 li
101.502 53.7956 li
101.835 54.1271 li
101.835 54.4586 li
102.167 54.4586 li
102.167 54.7902 li
102.5 54.7902 li
102.832 54.7902 li
102.832 55.1217 li
103.165 55.1217 li
103.497 55.1217 li
103.83 55.1217 li
104.827 55.1217 li
104.827 50.8118 li
103.83 50.8118 li
103.497 50.8118 li
103.165 50.8118 li
103.165 51.1432 li
102.832 51.1432 li
102.5 51.1432 li
102.167 51.4747 li
101.835 51.4747 li
101.835 51.8063 li
101.502 52.1379 li
101.502 52.4694 li
101.502 52.8009 li
101.502 53.1325 li
cp
f
97.5117 45.5071 mo
97.5117 47.1648 li
94.8515 49.8171 li
94.519 49.8171 li
94.519 50.1486 li
94.1865 50.1486 li
94.1865 50.4802 li
93.8539 50.4802 li
93.5214 50.8118 li
93.5214 51.1432 li
93.1888 51.1432 li
93.1888 51.4747 li
92.8563 51.8063 li
92.8563 52.1379 li
92.5237 52.1379 li
92.5237 52.4694 li
92.5237 52.8009 li
92.5237 53.1325 li
92.5237 53.464 li
92.5237 53.7956 li
92.5237 54.1271 li
92.5237 54.4586 li
92.8563 54.7902 li
93.1888 54.7902 li
93.1888 55.1217 li
93.5214 55.1217 li
93.8539 55.1217 li
94.1865 55.1217 li
94.519 55.1217 li
94.8515 55.1217 li
95.184 55.1217 li
95.184 54.7902 li
95.5165 54.7902 li
95.8491 54.4586 li
96.1816 54.1271 li
97.5117 55.4532 li
97.1792 55.7848 li
96.8467 55.7848 li
96.8467 56.1163 li
96.5142 56.4478 li
96.1816 56.4478 li
95.8491 56.7794 li
95.5165 56.7794 li
95.184 56.7794 li
94.8515 56.7794 li
94.519 57.1109 li
94.1865 57.1109 li
93.8539 57.1109 li
93.5214 57.1109 li
93.1888 57.1109 li
92.8563 57.1109 li
92.5237 56.7794 li
92.1912 56.7794 li
91.8587 56.7794 li
91.5262 56.4478 li
91.1937 56.4478 li
91.1937 56.1163 li
90.8611 56.1163 li
90.8611 55.7848 li
90.5286 55.7848 li
90.5286 55.4532 li
90.196 55.1217 li
90.196 54.7902 li
90.196 54.4586 li
90.196 54.1271 li
90.196 53.7956 li
90.196 53.464 li
90.196 53.1325 li
90.196 52.8009 li
90.196 52.4694 li
90.196 52.1379 li
90.5286 52.1379 li
90.5286 51.8063 li
90.8611 51.1432 li
90.8611 50.8118 li
91.1937 50.8118 li
91.1937 50.4802 li
91.5262 50.4802 li
91.5262 50.1486 li
91.8587 50.1486 li
91.8587 49.8171 li
92.1912 49.8171 li
92.1912 49.4856 li
92.5237 49.154 li
92.8563 49.154 li
94.519 47.4964 li
89.5309 47.4964 li
89.5309 45.5071 li
cp
f
340.926 143.31 mo
338.598 143.31 li
334.94 134.359 li
337.268 134.359 li
339.263 139.664 li
339.596 140.99 li
340.261 139.664 li
342.256 134.359 li
344.251 134.359 li
cp
f
353.894 137.674 mo
353.894 137.674 li
353.894 138.006 li
353.894 138.337 li
353.894 138.669 li
353.894 139.332 li
353.562 139.664 li
353.562 139.995 li
353.562 140.327 li
353.562 140.658 li
353.229 140.99 li
353.229 141.321 li
352.897 141.653 li
352.564 141.984 li
352.564 142.316 li
352.232 142.316 li
352.232 142.647 li
351.899 142.647 li
351.567 142.979 li
351.234 142.979 li
351.234 143.31 li
350.902 143.31 li
350.569 143.31 li
350.237 143.31 li
349.904 143.642 li
349.239 143.642 li
348.906 143.642 li
348.906 143.31 li
348.574 143.31 li
348.241 143.31 li
347.909 143.31 li
347.576 143.31 li
347.576 142.979 li
347.244 142.979 li
346.911 142.647 li
346.579 142.647 li
346.579 142.316 li
346.246 142.316 li
346.246 141.984 li
345.914 141.984 li
345.914 141.653 li
345.914 141.321 li
345.581 140.99 li
345.581 140.658 li
345.249 140.327 li
345.249 139.995 li
345.249 139.664 li
345.249 139.332 li
345.249 138.669 li
344.916 138.337 li
344.916 137.674 li
344.916 137.343 li
344.916 137.011 li
345.249 136.348 li
345.249 136.017 li
345.249 135.685 li
345.249 135.354 li
345.249 135.022 li
345.581 134.691 li
345.581 134.359 li
345.914 134.027 li
345.914 133.696 li
346.246 133.364 li
346.579 133.033 li
346.911 132.701 li
347.244 132.37 li
347.576 132.038 li
347.909 132.038 li
348.241 132.038 li
348.574 132.038 li
348.906 131.707 li
349.239 131.707 li
349.572 131.707 li
349.904 131.707 li
350.237 131.707 li
350.569 131.707 li
350.902 132.038 li
351.234 132.038 li
351.567 132.038 li
351.567 132.37 li
351.899 132.37 li
352.232 132.701 li
352.564 133.033 li
352.897 133.364 li
352.897 133.696 li
353.229 134.027 li
353.562 134.691 li
353.562 135.022 li
353.562 135.354 li
353.894 135.685 li
353.894 136.017 li
353.894 136.68 li
353.894 137.011 li
353.894 137.674 li
cp
347.244 137.674 mo
347.244 137.674 li
347.244 138.006 li
347.244 138.337 li
351.567 135.022 li
351.234 135.022 li
351.234 134.691 li
351.234 134.359 li
350.902 134.359 li
350.902 134.027 li
350.569 134.027 li
350.569 133.696 li
350.237 133.696 li
349.904 133.696 li
349.572 133.364 li
349.239 133.364 li
348.906 133.696 li
348.574 133.696 li
348.241 134.027 li
347.909 134.359 li
347.909 134.691 li
347.576 134.691 li
347.576 135.022 li
347.576 135.354 li
347.576 135.685 li
347.244 135.685 li
347.244 136.017 li
347.244 136.348 li
347.244 136.68 li
347.244 137.011 li
347.244 137.343 li
347.244 137.674 li
cp
351.899 137.674 mo
351.899 137.674 li
351.899 137.343 li
351.899 137.011 li
347.576 139.995 li
347.576 140.327 li
347.576 140.658 li
347.909 140.658 li
347.909 140.99 li
348.241 141.321 li
348.574 141.653 li
348.906 141.653 li
349.239 141.653 li
349.572 141.653 li
349.904 141.653 li
350.237 141.653 li
350.569 141.653 li
350.569 141.321 li
350.902 141.321 li
350.902 140.99 li
351.234 140.658 li
351.234 140.327 li
351.567 139.995 li
351.567 139.664 li
351.567 139.332 li
351.567 139 li
351.567 138.669 li
351.899 138.337 li
351.899 138.006 li
351.899 137.674 li
cp
f
359.215 139.995 mo
359.215 139.995 li
359.548 139.995 li
359.88 140.327 li
360.213 140.327 li
360.545 140.658 li
360.878 140.99 li
360.878 141.321 li
360.878 141.653 li
360.878 141.984 li
360.878 142.316 li
360.878 142.647 li
360.545 142.979 li
360.213 143.31 li
359.88 143.31 li
359.548 143.642 li
359.215 143.642 li
358.882 143.642 li
358.882 143.31 li
358.55 143.31 li
358.217 143.31 li
357.885 142.979 li
357.885 142.647 li
357.552 142.316 li
357.552 141.984 li
357.552 141.653 li
357.552 141.321 li
357.552 140.99 li
357.885 140.99 li
357.885 140.658 li
358.217 140.658 li
358.217 140.327 li
358.55 140.327 li
358.882 139.995 li
359.215 139.995 li
cp
f
365.533 143.31 mo
365.533 141.321 li
368.526 141.321 li
368.526 134.027 li
365.866 135.354 li
365.201 133.696 li
368.858 131.707 li
370.521 131.707 li
370.521 141.321 li
373.181 141.321 li
373.181 143.31 li
cp
f
378.834 139.995 mo
378.834 139.995 li
379.167 139.995 li
379.499 139.995 li
379.499 140.327 li
379.832 140.327 li
380.165 140.658 li
380.497 140.99 li
380.497 141.321 li
380.497 141.653 li
380.497 141.984 li
380.497 142.316 li
380.497 142.647 li
380.165 142.979 li
379.832 143.31 li
379.499 143.31 li
379.167 143.642 li
378.834 143.642 li
378.502 143.31 li
378.169 143.31 li
377.837 143.31 li
377.837 142.979 li
377.504 142.979 li
377.504 142.647 li
377.504 142.316 li
377.172 142.316 li
377.172 141.984 li
377.172 141.653 li
377.172 141.321 li
377.504 141.321 li
377.504 140.99 li
377.504 140.658 li
377.837 140.658 li
377.837 140.327 li
378.169 140.327 li
378.502 140.327 li
378.502 139.995 li
378.834 139.995 li
cp
f
385.152 143.31 mo
385.152 141.321 li
388.145 141.321 li
388.145 134.027 li
385.485 135.354 li
384.82 133.696 li
388.478 131.707 li
390.473 131.707 li
390.473 141.321 li
392.801 141.321 li
392.801 143.31 li
cp
f
158.365 446.667 mo
158.365 446.667 li
158.365 446.998 li
158.365 447.33 li
158.365 447.661 li
158.033 447.993 li
158.033 448.324 li
158.033 448.656 li
157.7 448.656 li
157.7 448.987 li
157.368 449.319 li
157.035 449.319 li
157.035 449.65 li
156.703 449.65 li
156.37 449.65 li
156.37 449.982 li
156.037 449.982 li
155.705 449.982 li
155.372 449.982 li
155.04 449.982 li
154.707 450.314 li
154.375 450.314 li
154.375 449.982 li
154.042 449.982 li
153.71 449.982 li
153.045 449.982 li
152.712 449.982 li
152.712 449.65 li
152.38 449.65 li
152.047 449.65 li
152.047 447.33 li
152.047 447.661 li
152.38 447.661 li
152.712 447.993 li
153.045 447.993 li
153.377 447.993 li
153.377 448.324 li
153.71 448.324 li
154.042 448.324 li
154.375 448.324 li
154.707 448.324 li
155.04 448.324 li
155.372 448.324 li
155.372 447.993 li
155.705 447.993 li
155.705 447.661 li
156.037 447.661 li
156.037 447.33 li
156.037 446.998 li
156.37 446.998 li
156.37 446.667 li
156.37 446.335 li
156.37 440.367 li
152.047 440.367 li
152.047 438.71 li
158.365 438.71 li
cp
f
162.023 449.982 mo
162.023 438.71 li
164.351 438.71 li
164.351 447.993 li
169.006 447.993 li
169.006 449.982 li
cp
f
178.982 449.65 mo
178.982 449.65 li
178.65 449.65 li
178.317 449.65 li
177.985 449.982 li
177.32 449.982 li
176.987 449.982 li
176.655 449.982 li
176.322 449.982 li
175.989 449.982 li
175.657 449.982 li
175.324 449.982 li
174.992 449.982 li
174.659 449.982 li
174.327 449.982 li
173.994 449.65 li
173.662 449.65 li
173.329 449.65 li
172.997 449.319 li
172.664 449.319 li
172.332 448.987 li
172.332 448.656 li
171.999 448.656 li
171.999 448.324 li
171.667 447.993 li
171.667 447.661 li
171.334 447.33 li
171.334 446.998 li
171.334 446.667 li
171.001 446.667 li
171.001 446.335 li
171.001 446.004 li
171.001 445.34 li
171.001 445.009 li
171.001 444.346 li
171.001 444.014 li
171.001 443.683 li
171.001 443.351 li
171.001 442.688 li
171.001 442.357 li
171.334 442.025 li
171.334 441.694 li
171.667 441.362 li
171.667 441.03 li
171.999 440.699 li
171.999 440.367 li
172.332 440.036 li
172.664 439.704 li
172.997 439.373 li
173.329 439.041 li
173.662 439.041 li
173.994 438.71 li
174.327 438.71 li
174.659 438.71 li
174.992 438.71 li
175.324 438.378 li
175.657 438.378 li
176.322 438.378 li
176.655 438.378 li
176.987 438.378 li
177.32 438.378 li
177.652 438.378 li
177.652 438.71 li
177.985 438.71 li
178.317 438.71 li
178.65 438.71 li
178.982 438.71 li
178.982 441.03 li
178.65 440.699 li
178.317 440.699 li
177.985 440.699 li
177.652 440.367 li
177.32 440.367 li
176.987 440.367 li
176.655 440.367 li
176.322 440.367 li
175.989 440.367 li
175.657 440.367 li
175.324 440.367 li
175.324 440.699 li
174.992 440.699 li
174.659 440.699 li
174.327 441.03 li
173.994 441.362 li
173.994 441.694 li
173.662 441.694 li
173.662 442.025 li
173.662 442.357 li
173.329 442.688 li
173.329 443.02 li
173.329 443.351 li
173.329 443.683 li
173.329 444.014 li
173.329 444.346 li
173.329 444.677 li
173.329 445.009 li
173.329 445.34 li
173.329 446.004 li
173.662 446.004 li
173.662 446.335 li
173.662 446.667 li
173.994 446.998 li
173.994 447.33 li
174.327 447.33 li
174.327 447.661 li
174.659 447.661 li
174.659 447.993 li
174.992 447.993 li
175.324 447.993 li
175.657 447.993 li
175.657 448.324 li
175.989 448.324 li
176.322 448.324 li
176.655 448.324 li
176.987 448.324 li
176.987 447.993 li
177.32 447.993 li
177.652 447.993 li
177.985 447.993 li
178.317 447.661 li
178.65 447.661 li
178.982 447.661 li
cp
f
187.961 446.667 mo
187.961 446.667 li
187.961 446.998 li
187.961 447.33 li
187.961 447.661 li
187.628 447.661 li
187.628 447.993 li
187.628 448.324 li
187.296 448.656 li
186.963 448.987 li
186.963 449.319 li
186.63 449.319 li
186.298 449.65 li
185.965 449.65 li
185.633 449.982 li
185.3 449.982 li
184.968 449.982 li
184.635 449.982 li
184.303 449.982 li
183.97 450.314 li
183.638 449.982 li
183.305 449.982 li
182.64 449.982 li
182.308 449.982 li
181.975 449.65 li
181.643 449.65 li
181.643 447.33 li
181.643 447.661 li
181.975 447.661 li
181.975 447.993 li
182.308 447.993 li
182.64 447.993 li
182.64 448.324 li
182.973 448.324 li
183.305 448.324 li
183.638 448.324 li
183.97 448.324 li
184.303 448.324 li
184.635 448.324 li
184.968 448.324 li
184.968 447.993 li
185.3 447.993 li
185.3 447.661 li
185.633 447.33 li
185.633 446.998 li
185.633 446.667 li
185.633 446.335 li
185.633 440.367 li
181.643 440.367 li
181.643 438.71 li
187.961 438.71 li
cp
f
191.618 449.982 mo
191.618 438.71 li
193.946 438.71 li
193.946 447.993 li
198.602 447.993 li
198.602 449.982 li
cp
f
208.578 449.65 mo
208.578 449.65 li
208.245 449.65 li
207.913 449.65 li
207.58 449.982 li
206.915 449.982 li
206.582 449.982 li
206.25 449.982 li
205.917 449.982 li
205.585 449.982 li
205.252 449.982 li
204.92 449.982 li
204.587 449.982 li
203.922 449.982 li
203.59 449.982 li
203.257 449.65 li
202.925 449.65 li
202.592 449.319 li
202.26 449.319 li
201.927 448.987 li
201.594 448.656 li
201.594 448.324 li
201.262 448.324 li
201.262 447.993 li
200.929 447.661 li
200.929 447.33 li
200.597 446.998 li
200.597 446.667 li
200.597 446.335 li
200.597 446.004 li
200.597 445.34 li
200.597 445.009 li
200.264 444.346 li
200.597 444.014 li
200.597 443.683 li
200.597 443.351 li
200.597 442.688 li
200.597 442.357 li
200.929 442.025 li
200.929 441.694 li
200.929 441.362 li
201.262 441.03 li
201.262 440.699 li
201.594 440.367 li
201.927 440.036 li
201.927 439.704 li
202.26 439.704 li
202.592 439.373 li
202.925 439.041 li
203.257 439.041 li
203.59 438.71 li
203.922 438.71 li
204.255 438.71 li
204.587 438.71 li
204.92 438.378 li
205.252 438.378 li
205.585 438.378 li
205.917 438.378 li
206.25 438.378 li
206.582 438.378 li
206.915 438.378 li
207.248 438.378 li
207.248 438.71 li
207.58 438.71 li
207.913 438.71 li
208.245 438.71 li
208.578 438.71 li
208.578 441.03 li
208.245 441.03 li
208.245 440.699 li
207.913 440.699 li
207.58 440.699 li
206.915 440.367 li
206.582 440.367 li
206.25 440.367 li
205.917 440.367 li
205.585 440.367 li
205.252 440.367 li
204.92 440.367 li
204.587 440.699 li
204.255 440.699 li
203.922 441.03 li
203.59 441.362 li
203.257 441.694 li
203.257 442.025 li
203.257 442.357 li
202.925 442.357 li
202.925 442.688 li
202.925 443.02 li
202.925 443.351 li
202.925 443.683 li
202.925 444.014 li
202.925 444.346 li
202.925 444.677 li
202.925 445.009 li
202.925 445.34 li
202.925 446.004 li
202.925 446.335 li
203.257 446.335 li
203.257 446.667 li
203.257 446.998 li
203.59 447.33 li
203.922 447.33 li
203.922 447.661 li
204.255 447.993 li
204.587 447.993 li
204.92 447.993 li
205.252 448.324 li
205.585 448.324 li
205.917 448.324 li
206.25 448.324 li
206.582 448.324 li
206.582 447.993 li
206.915 447.993 li
207.248 447.993 li
207.58 447.993 li
207.913 447.661 li
208.245 447.661 li
208.578 447.661 li
cp
f
217.556 446.667 mo
217.556 446.667 li
217.556 446.998 li
217.224 447.33 li
217.224 447.661 li
217.224 447.993 li
217.224 448.324 li
216.891 448.324 li
216.891 448.656 li
216.558 448.987 li
216.558 449.319 li
216.226 449.319 li
215.893 449.65 li
215.561 449.65 li
215.228 449.982 li
214.896 449.982 li
214.563 449.982 li
214.231 449.982 li
213.898 449.982 li
213.566 450.314 li
213.233 449.982 li
212.901 449.982 li
212.568 449.982 li
212.236 449.982 li
211.903 449.982 li
211.57 449.65 li
210.905 449.65 li
210.905 447.33 li
210.905 447.661 li
211.238 447.661 li
211.57 447.993 li
211.903 447.993 li
212.236 447.993 li
212.236 448.324 li
212.568 448.324 li
212.901 448.324 li
213.233 448.324 li
213.566 448.324 li
213.898 448.324 li
214.231 448.324 li
214.563 447.993 li
214.896 447.993 li
214.896 447.661 li
215.228 447.33 li
215.228 446.998 li
215.228 446.667 li
215.228 446.335 li
215.228 440.367 li
211.238 440.367 li
211.238 438.71 li
217.556 438.71 li
cp
f
221.214 449.982 mo
221.214 438.71 li
223.209 438.71 li
223.209 447.993 li
228.197 447.993 li
228.197 449.982 li
cp
f
237.841 449.65 mo
237.841 449.65 li
237.508 449.65 li
237.175 449.65 li
236.843 449.982 li
236.51 449.982 li
236.178 449.982 li
235.845 449.982 li
235.513 449.982 li
235.18 449.982 li
234.848 449.982 li
234.515 449.982 li
234.183 449.982 li
233.85 449.982 li
233.518 449.982 li
233.185 449.982 li
232.853 449.65 li
232.52 449.65 li
232.187 449.65 li
231.855 449.319 li
231.522 448.987 li
231.19 448.656 li
230.857 448.324 li
230.525 447.993 li
230.525 447.661 li
230.525 447.33 li
230.192 446.998 li
230.192 446.667 li
230.192 446.335 li
229.86 446.004 li
229.86 445.34 li
229.86 445.009 li
229.86 444.346 li
229.86 444.014 li
229.86 443.683 li
229.86 443.351 li
230.192 442.688 li
230.192 442.357 li
230.192 442.025 li
230.192 441.694 li
230.525 441.694 li
230.525 441.362 li
230.525 441.03 li
230.857 440.699 li
231.19 440.367 li
231.19 440.036 li
231.522 440.036 li
231.522 439.704 li
231.855 439.704 li
231.855 439.373 li
232.187 439.041 li
232.52 439.041 li
232.853 438.71 li
233.185 438.71 li
233.518 438.71 li
233.85 438.71 li
234.183 438.378 li
234.848 438.378 li
235.18 438.378 li
235.513 438.378 li
235.845 438.378 li
236.178 438.378 li
236.51 438.378 li
236.51 438.71 li
236.843 438.71 li
237.175 438.71 li
237.508 438.71 li
237.841 438.71 li
237.841 441.03 li
237.841 440.699 li
237.508 440.699 li
237.175 440.699 li
236.51 440.367 li
236.178 440.367 li
235.845 440.367 li
235.18 440.367 li
234.848 440.367 li
234.515 440.367 li
234.183 440.699 li
233.85 440.699 li
233.518 440.699 li
233.518 441.03 li
233.185 441.03 li
233.185 441.362 li
232.853 441.362 li
232.853 441.694 li
232.52 442.025 li
232.52 442.357 li
232.52 442.688 li
232.52 443.02 li
232.187 443.02 li
232.187 443.351 li
232.187 443.683 li
232.187 444.014 li
232.187 444.346 li
232.187 444.677 li
232.187 445.009 li
232.187 445.34 li
232.52 446.004 li
232.52 446.335 li
232.52 446.667 li
232.853 446.667 li
232.853 446.998 li
232.853 447.33 li
233.185 447.33 li
233.518 447.661 li
233.85 447.993 li
234.183 447.993 li
234.515 447.993 li
234.848 448.324 li
235.18 448.324 li
235.513 448.324 li
235.845 448.324 li
235.845 447.993 li
236.178 447.993 li
236.51 447.993 li
236.843 447.993 li
237.175 447.993 li
237.175 447.661 li
237.508 447.661 li
237.841 447.661 li
cp
f
246.819 446.667 mo
246.819 446.667 li
246.819 446.998 li
246.819 447.33 li
246.819 447.661 li
246.819 447.993 li
246.486 447.993 li
246.486 448.324 li
246.486 448.656 li
246.154 448.656 li
246.154 448.987 li
245.821 449.319 li
245.489 449.319 li
245.489 449.65 li
245.156 449.65 li
244.824 449.65 li
244.824 449.982 li
244.491 449.982 li
244.159 449.982 li
243.826 449.982 li
243.494 449.982 li
243.161 450.314 li
242.828 450.314 li
242.828 449.982 li
242.496 449.982 li
242.163 449.982 li
241.498 449.982 li
241.166 449.982 li
241.166 449.65 li
240.833 449.65 li
240.501 449.65 li
240.501 447.33 li
240.501 447.661 li
240.833 447.661 li
241.166 447.993 li
241.498 447.993 li
241.831 447.993 li
241.831 448.324 li
242.163 448.324 li
242.496 448.324 li
242.828 448.324 li
243.161 448.324 li
243.494 448.324 li
243.826 448.324 li
243.826 447.993 li
244.159 447.993 li
244.159 447.661 li
244.491 447.661 li
244.491 447.33 li
244.491 446.998 li
244.824 446.998 li
244.824 446.667 li
244.824 446.335 li
244.824 440.367 li
240.501 440.367 li
240.501 438.71 li
246.819 438.71 li
cp
f
250.477 449.982 mo
250.477 438.71 li
252.805 438.71 li
252.805 447.993 li
257.46 447.993 li
257.46 449.982 li
cp
f
267.436 449.65 mo
267.436 449.65 li
267.103 449.65 li
266.771 449.65 li
266.438 449.982 li
266.106 449.982 li
265.773 449.982 li
265.441 449.982 li
265.108 449.982 li
264.776 449.982 li
264.443 449.982 li
264.111 449.982 li
263.778 449.982 li
263.446 449.982 li
263.113 449.982 li
262.78 449.982 li
262.448 449.65 li
262.115 449.65 li
261.783 449.65 li
261.45 449.319 li
261.118 449.319 li
260.785 448.987 li
260.785 448.656 li
260.453 448.656 li
260.453 448.324 li
260.12 447.993 li
260.12 447.661 li
259.788 447.33 li
259.788 446.998 li
259.788 446.667 li
259.455 446.335 li
259.455 446.004 li
259.455 445.34 li
259.455 445.009 li
259.455 444.346 li
259.455 444.014 li
259.455 443.683 li
259.455 443.351 li
259.455 442.688 li
259.788 442.357 li
259.788 442.025 li
259.788 441.694 li
260.12 441.362 li
260.12 441.03 li
260.453 440.699 li
260.453 440.367 li
260.785 440.036 li
261.118 439.704 li
261.45 439.373 li
261.783 439.041 li
262.115 439.041 li
262.448 438.71 li
262.78 438.71 li
263.113 438.71 li
263.446 438.71 li
263.778 438.378 li
264.111 438.378 li
264.776 438.378 li
265.108 438.378 li
265.441 438.378 li
265.773 438.378 li
266.106 438.378 li
266.106 438.71 li
266.438 438.71 li
266.771 438.71 li
267.103 438.71 li
267.436 438.71 li
267.436 441.03 li
267.103 440.699 li
266.771 440.699 li
266.438 440.699 li
266.106 440.367 li
265.773 440.367 li
265.441 440.367 li
265.108 440.367 li
264.776 440.367 li
264.443 440.367 li
264.111 440.367 li
263.778 440.367 li
263.778 440.699 li
263.446 440.699 li
263.113 440.699 li
262.78 441.03 li
262.448 441.362 li
262.448 441.694 li
262.115 441.694 li
262.115 442.025 li
262.115 442.357 li
261.783 442.688 li
261.783 443.02 li
261.783 443.351 li
261.783 443.683 li
261.783 444.014 li
261.783 444.346 li
261.783 444.677 li
261.783 445.009 li
261.783 445.34 li
261.783 446.004 li
262.115 446.004 li
262.115 446.335 li
262.115 446.667 li
262.448 446.998 li
262.448 447.33 li
262.78 447.33 li
262.78 447.661 li
263.113 447.661 li
263.113 447.993 li
263.446 447.993 li
263.778 447.993 li
264.111 447.993 li
264.111 448.324 li
264.443 448.324 li
264.776 448.324 li
265.108 448.324 li
265.441 448.324 li
265.441 447.993 li
265.773 447.993 li
266.106 447.993 li
266.438 447.993 li
266.771 447.661 li
267.103 447.661 li
267.436 447.661 li
cp
f
342.256 126.734 mo
341.591 124.413 li
337.6 124.413 li
336.935 126.734 li
334.94 126.734 li
338.265 115.461 li
341.258 115.461 li
344.584 126.734 li
cp
339.596 117.451 mo
338.265 122.755 li
341.258 122.755 li
cp
f
354.227 120.766 mo
354.227 121.098 li
354.227 121.429 li
353.894 121.761 li
353.894 122.092 li
353.894 122.424 li
353.894 122.755 li
353.894 123.418 li
353.562 123.418 li
353.562 123.75 li
353.562 124.081 li
353.229 124.081 li
353.229 124.413 li
352.897 124.744 li
352.897 125.076 li
352.564 125.076 li
352.564 125.408 li
352.232 125.739 li
351.899 125.739 li
351.567 126.071 li
351.234 126.071 li
350.902 126.402 li
350.569 126.402 li
350.237 126.402 li
349.904 126.734 li
349.572 126.734 li
348.906 126.734 li
348.241 126.734 li
345.581 126.734 li
345.581 115.461 li
348.906 115.461 li
349.239 115.461 li
349.572 115.461 li
349.904 115.461 li
350.237 115.461 li
350.902 115.461 li
351.234 115.793 li
351.567 115.793 li
351.899 116.124 li
352.232 116.124 li
352.564 116.456 li
352.897 116.788 li
352.897 117.119 li
353.229 117.119 li
353.229 117.451 li
353.562 117.782 li
353.562 118.114 li
353.894 118.445 li
353.894 118.777 li
353.894 119.108 li
353.894 119.44 li
353.894 119.771 li
354.227 120.434 li
354.227 120.766 li
cp
351.899 121.098 mo
351.899 121.098 li
351.899 120.766 li
351.899 120.434 li
351.899 120.103 li
351.567 120.103 li
351.567 119.44 li
351.567 119.108 li
351.567 118.777 li
351.234 118.445 li
351.234 118.114 li
350.902 118.114 li
350.902 117.782 li
350.569 117.782 li
350.237 117.451 li
349.904 117.451 li
349.572 117.119 li
349.239 117.119 li
348.906 117.119 li
348.574 117.119 li
347.576 117.119 li
347.576 125.076 li
348.574 125.076 li
348.906 125.076 li
349.239 124.744 li
349.572 124.744 li
349.904 124.744 li
350.237 124.413 li
350.569 124.413 li
350.902 124.081 li
350.902 123.75 li
351.234 123.75 li
351.234 123.418 li
351.567 123.087 li
351.567 122.755 li
351.567 122.424 li
351.567 122.092 li
351.899 121.761 li
351.899 121.429 li
351.899 121.098 li
cp
f
358.882 126.734 mo
356.555 126.734 li
360.878 117.451 li
355.557 117.451 li
355.557 115.461 li
363.538 115.461 li
363.538 117.119 li
cp
f
368.526 126.734 mo
366.198 126.734 li
370.854 117.451 li
365.201 117.451 li
365.201 115.461 li
373.181 115.461 li
373.181 117.119 li
cp
f
383.157 123.418 mo
383.157 123.418 li
383.157 123.75 li
383.157 124.081 li
382.825 124.413 li
382.825 124.744 li
382.492 125.076 li
382.492 125.408 li
382.16 125.408 li
382.16 125.739 li
381.827 126.071 li
381.495 126.071 li
381.162 126.402 li
380.83 126.402 li
380.497 126.402 li
380.165 126.734 li
379.832 126.734 li
379.499 126.734 li
379.167 126.734 li
378.834 126.734 li
378.502 126.734 li
377.837 127.065 li
377.504 127.065 li
377.172 126.734 li
376.839 126.734 li
376.507 126.734 li
376.174 126.734 li
375.842 126.734 li
375.509 126.734 li
375.509 124.744 li
375.509 125.076 li
375.842 125.076 li
376.174 125.076 li
376.507 125.076 li
376.839 125.076 li
377.172 125.076 li
377.504 125.076 li
377.837 125.076 li
378.169 125.076 li
378.502 125.076 li
378.834 125.076 li
379.499 125.076 li
379.832 124.744 li
380.165 124.744 li
380.165 124.413 li
380.497 124.413 li
380.83 124.081 li
380.83 123.75 li
380.83 123.418 li
380.83 123.087 li
380.83 122.755 li
380.497 122.755 li
380.497 122.424 li
380.165 122.092 li
379.832 122.092 li
379.499 121.761 li
379.167 121.761 li
378.834 121.761 li
378.502 121.761 li
378.169 121.761 li
376.839 121.761 li
376.839 120.103 li
377.837 120.103 li
378.169 120.103 li
378.502 120.103 li
378.834 120.103 li
379.167 119.771 li
379.499 119.771 li
379.832 119.44 li
380.165 119.108 li
380.165 118.777 li
380.165 118.445 li
380.165 118.114 li
380.165 117.782 li
380.165 117.451 li
379.832 117.451 li
379.832 117.119 li
379.499 117.119 li
379.167 117.119 li
378.834 117.119 li
378.502 116.788 li
378.169 116.788 li
378.169 117.119 li
377.837 117.119 li
377.504 117.119 li
377.172 117.119 li
376.839 117.119 li
376.507 117.119 li
376.174 117.451 li
375.842 117.451 li
375.842 115.793 li
375.842 115.461 li
376.174 115.461 li
376.507 115.461 li
376.839 115.461 li
377.172 115.461 li
377.172 115.13 li
377.504 115.13 li
377.837 115.13 li
378.169 115.13 li
378.502 115.13 li
378.834 115.13 li
379.167 115.13 li
379.499 115.13 li
379.832 115.13 li
380.165 115.461 li
380.497 115.461 li
380.83 115.461 li
381.162 115.793 li
381.495 115.793 li
381.495 116.124 li
381.827 116.124 li
381.827 116.456 li
382.16 116.456 li
382.16 116.788 li
382.492 117.119 li
382.492 117.451 li
382.492 117.782 li
382.492 118.114 li
382.492 118.445 li
382.492 118.777 li
382.16 119.108 li
382.16 119.44 li
382.16 119.771 li
381.827 119.771 li
381.827 120.103 li
381.495 120.103 li
381.162 120.434 li
380.83 120.766 li
381.162 120.766 li
381.495 120.766 li
381.827 121.098 li
382.16 121.429 li
382.492 121.429 li
382.492 121.761 li
382.825 121.761 li
382.825 122.092 li
382.825 122.424 li
383.157 122.424 li
383.157 122.755 li
383.157 123.418 li
cp
f
393.466 121.098 mo
393.466 121.098 li
393.466 121.429 li
393.466 121.761 li
393.466 122.092 li
393.133 122.755 li
393.133 123.087 li
393.133 123.418 li
393.133 123.75 li
392.801 123.75 li
392.801 124.081 li
392.801 124.413 li
392.468 124.744 li
392.468 125.076 li
392.136 125.408 li
391.803 125.739 li
391.471 126.071 li
391.138 126.402 li
390.806 126.402 li
390.473 126.734 li
390.14 126.734 li
389.808 126.734 li
389.475 126.734 li
389.143 127.065 li
388.81 127.065 li
388.478 127.065 li
388.145 126.734 li
387.813 126.734 li
387.48 126.734 li
387.148 126.734 li
386.815 126.402 li
386.483 126.402 li
386.483 126.071 li
386.15 126.071 li
385.818 125.739 li
385.818 125.408 li
385.485 125.408 li
385.485 125.076 li
385.152 124.744 li
385.152 124.413 li
384.82 124.081 li
384.82 123.75 li
384.82 123.418 li
384.82 123.087 li
384.487 122.755 li
384.487 122.092 li
384.487 121.761 li
384.487 121.098 li
384.487 120.766 li
384.487 120.434 li
384.487 119.771 li
384.487 119.44 li
384.82 119.108 li
384.82 118.777 li
384.82 118.445 li
384.82 118.114 li
385.152 118.114 li
385.152 117.782 li
385.152 117.451 li
385.485 117.119 li
385.818 116.788 li
385.818 116.456 li
386.15 116.456 li
386.15 116.124 li
386.483 115.793 li
386.815 115.793 li
387.148 115.461 li
387.48 115.461 li
387.813 115.461 li
388.145 115.461 li
388.478 115.13 li
388.81 115.13 li
389.143 115.13 li
389.475 115.13 li
389.808 115.13 li
390.14 115.461 li
390.473 115.461 li
390.806 115.461 li
391.138 115.793 li
391.471 115.793 li
391.803 116.124 li
391.803 116.456 li
392.136 116.456 li
392.136 116.788 li
392.468 116.788 li
392.468 117.119 li
392.801 117.451 li
392.801 118.114 li
393.133 118.445 li
393.133 118.777 li
393.133 119.108 li
393.466 119.44 li
393.466 120.103 li
393.466 120.434 li
393.466 121.098 li
cp
386.815 121.098 mo
386.815 121.098 li
386.815 121.429 li
386.815 121.761 li
390.806 118.445 li
390.806 118.114 li
390.473 117.782 li
390.473 117.451 li
390.14 117.451 li
390.14 117.119 li
389.808 117.119 li
389.475 117.119 li
389.143 116.788 li
388.81 116.788 li
388.478 117.119 li
388.145 117.119 li
387.813 117.119 li
387.813 117.451 li
387.48 117.451 li
387.48 117.782 li
387.148 118.114 li
387.148 118.445 li
387.148 118.777 li
386.815 119.108 li
386.815 119.44 li
386.815 119.771 li
386.815 120.103 li
386.815 120.434 li
386.815 120.766 li
386.815 121.098 li
cp
391.138 121.098 mo
391.138 121.098 li
391.138 120.766 li
391.138 120.434 li
387.148 123.418 li
387.148 123.75 li
387.148 124.081 li
387.48 124.413 li
387.48 124.744 li
387.813 124.744 li
387.813 125.076 li
388.145 125.076 li
388.478 125.076 li
388.81 125.076 li
389.143 125.076 li
389.475 125.076 li
389.808 125.076 li
390.14 124.744 li
390.473 124.413 li
390.473 124.081 li
390.806 124.081 li
390.806 123.75 li
390.806 123.418 li
391.138 123.087 li
391.138 122.755 li
391.138 122.424 li
391.138 122.092 li
391.138 121.761 li
391.138 121.429 li
391.138 121.098 li
cp
f
137.083 99.5476 mo
137.083 99.5476 li
137.083 99.8792 li
137.083 100.211 li
137.083 100.542 li
137.083 100.874 li
136.751 101.205 li
136.751 101.537 li
136.751 101.868 li
136.418 102.2 li
136.418 102.531 li
136.086 102.863 li
135.753 103.195 li
135.421 103.195 li
135.421 103.526 li
135.088 103.526 li
134.755 103.526 li
134.755 103.858 li
134.423 103.858 li
134.09 103.858 li
133.758 103.858 li
133.425 103.858 li
133.093 104.189 li
132.76 104.189 li
132.428 104.189 li
132.095 103.858 li
131.763 103.858 li
131.43 103.858 li
131.098 103.858 li
130.765 103.858 li
130.765 103.526 li
130.432 103.526 li
130.1 103.195 li
129.767 103.195 li
129.767 102.863 li
129.435 102.863 li
129.435 102.531 li
129.102 102.2 li
129.102 101.868 li
129.102 101.537 li
128.77 101.537 li
128.77 101.205 li
128.77 100.874 li
128.77 100.542 li
128.77 100.211 li
128.77 99.8792 li
128.77 92.5854 li
130.765 92.5854 li
130.765 99.8792 li
130.765 100.211 li
131.098 100.211 li
131.098 100.542 li
131.098 100.874 li
131.098 101.205 li
131.098 101.537 li
131.43 101.537 li
131.43 101.868 li
131.763 101.868 li
132.095 102.2 li
132.428 102.2 li
132.76 102.2 li
133.093 102.2 li
133.425 102.2 li
133.758 102.2 li
134.09 102.2 li
134.09 101.868 li
134.423 101.868 li
134.423 101.537 li
134.755 101.537 li
134.755 101.205 li
134.755 100.874 li
134.755 100.542 li
134.755 100.211 li
135.088 100.211 li
135.088 99.8792 li
135.088 92.5854 li
137.083 92.5854 li
cp
f
139.078 103.858 mo
139.078 101.868 li
142.071 101.868 li
142.071 94.5746 li
139.411 95.9007 li
138.746 94.243 li
142.404 92.2538 li
144.399 92.2538 li
144.399 101.868 li
146.727 101.868 li
146.727 103.858 li
cp
f
7.98081 lw
183.97 129.054 mo
183.97 126.857 182.184 125.076 179.98 125.076 cv
177.776 125.076 175.989 126.857 175.989 129.054 cv
175.989 131.252 177.776 133.033 179.98 133.033 cv
182.184 133.033 183.97 131.252 183.97 129.054 cv
@
3.3253 lw
148.057 115.793 mo
148.057 114.877 147.312 114.135 146.394 114.135 cv
145.476 114.135 144.731 114.877 144.731 115.793 cv
144.731 116.708 145.476 117.451 146.394 117.451 cv
147.312 117.451 148.057 116.708 148.057 115.793 cv
@
333.61 268.631 mo
333.61 267.716 332.866 266.974 331.947 266.974 cv
331.029 266.974 330.285 267.716 330.285 268.631 cv
330.285 269.547 331.029 270.289 331.947 270.289 cv
332.866 270.289 333.61 269.547 333.61 268.631 cv
@
2.66029 lw
116.134 196.356 mo
116.134 213.202 102.437 226.858 85.5405 226.858 cv
68.6445 226.858 54.9475 213.202 54.9475 196.356 cv
@
54.9475 106.841 mo
54.9475 89.996 68.6445 76.3401 85.5405 76.3401 cv
102.437 76.3401 116.134 89.996 116.134 106.841 cv
@
grestore
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
