%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: ctrl__intf__opto.pdf
%%Creator: Adobe Acrobat 11.0.7
%%For: Yin
%%CreationDate: 2014/06/17, 20:37:20
%%BoundingBox: -81 80 122 202
%%HiResBoundingBox: -80.2928 80.2929 121.0042 201.2970
%%CropBox: -80.2928 80.2929 121.0042 201.2970
%%LanguageLevel: 3
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 0 -1 1 0
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1072 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:ModifyDate="2014-06-06T00:58:33+08:00"
   xmp:CreateDate="2014-06-06T00:55:48+08:00"
   xmp:MetadataDate="2014-06-06T00:58:33+08:00"
   xmp:CreatorTool="PScript5.dll Version 5.2.2"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:5391122a-b0b3-4c7f-a18a-ecb3b8d3d0ae"
   xmpMM:InstanceID="uuid:0db18c57-b7a6-41dd-93ad-de389421f5fb"
   pdf:Producer="Acrobat Distiller 11.0 (Windows)">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Design1.ms11</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Yin</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -201.297 translate
pgsv
[0 1 -1 0 121.004 0 ]ct
gsave
np
gsave
0 0 mo
0 201.297 li
121.004 201.297 li
121.004 0 li
cp
clp
false sop
.883665 .769161 0 0 cmyk
%ADOBeginSubsetFont: OQOAAA+Arial-BoldMT Initial
ct_T42Dict begin
-0.625 -0.375 2 1.055
 256 array 0 1 255 {1 index exch /.notdef put} for  /OQOAAA+Arial-BoldMT
Type42DictBegin
[<00010000000c000c000c000c4f532f32115d5eaf000000cc000000606376
7420ffc3ad470000012c000007606670676dba2711a60000088c0000063e
676c796612822b1a0000a1640000206c68656164e1c5d6ed00000ecc0000
003668686561127e17ee00000f0400000024686d7478fdcf4b1500000f28
00003e506c6f636101f2446a00004d7800003e546d617870177e065b0000
8bcc000000206e616d6554facfc400008bec0000037f70726570034f36ae
00008f6c000011f567646972000000000000000000000000000303d402bc
00050008059a05330000011b059a0533000003d1006602120805020b0704
020202020204e0002affc00078430000000900000000544d432000200020
fffc05d3fe510133073e01b2400001ffffff0000042605ba000000200014
05ba001c05ba001c05a7001c0426001c0000ffe40000ffe40000ffe4fe69
ffe405ba001cfe69ffe402ea0000011d0000011d000000000000000000b2
00ac00d70128012000b301fa001700f8011901310049000400f7000300af
00fd00950014005400960112002400160055004901040119012b008c019b
ff76ffe9003d009200a2ffb70182ffaa0016008f00c600f8001c00de0401
0037004e00550055006500e903e50059ff9a00080087000b003b00520116
006100d600d600f500000093009400be017cfff80004001400820092003c
00410041ffc1fffc002a008c049005d809b5009100bb0106ff63ff69001e
0022008a022bffd6ffdf0026005900a300ac0104012b01c004480021006b
00850098011903c6006b009500a400fe010c025d034305bf000000490056
006e0077008a00aa00ca0112015005d805f0ff7bffe70006001300280061
006900e90135014d02a5040cff3effda005b00b900c801190119011901c0
045b04a7055bfe3fff9dffc2001500b7010a01bc01c10532058efd81ffa1
ffae000c00260031003d004e00560062008300c100c900f100f2027fff7f
00480053007700c5011d01200126012801d60219027e027e03d3002e0041
005d006b0075009f00b000b200ba00bb00bd00d600db00e000e50114011b
014a0162019101f2020c026402cf039b03b403d4040104a9001600230025
002a007400a500b600cc00cd00cf0105012001300150016a016f0197019d
01e002b002ec02f70408048304fb04fd0526fee0fefbff4efff50018001a
004c007a007f009100a300b300b400ce00d500f200f300f6011001380168
01a101b001e001ec02090222024f0270029602a502ad034e039103c10435
0442046b04cd04da0586058b076107fefca6fe93feadfed1ffb7ffd10003
000e00180026004600690081008f00a500bf00d300d500d900dd00e20119
012b0138013b015a015e016801730188019401ad01c501d101ea01f20200
020002000222023b0244024f026f0272027e02820293029402a502cf02cf
02d002da02dd02eb02f5030503220336037103a103b003b803d003e60410
0426042e0431044f045a04ff053205320547055305a805ab05c205f0063c
0664067006e80782078408ccfd2afddefe00fe68feb0feb3ffaa00080059
007a0091009e00a200af00b400bb00ca00cc00ce00d900e000f40114011a
01210127012b01390146014b014d0157015c01650182018701920198019b
01a201ae01c501c501d102070222022b024102530261026502840287028d
02b402b402ba02c902d602d802ed02f503170323032b03310349035a035b
036e03710374037e03840391039103aa03cf03d303e703e803ed04080417
041e0475047a049904a704b404d1054c056d056d05a205bf05c005d105fc
05fc0602061a061c062f066a06a806e2070607360750078907d407f30870
011c012a011a01200000000000000000000000000219000b001e02aa0214
047f01ed0000001d0104000f0091002b01880153011201f3003f03fe0168
010e047f01ed036e03150219041300000000064004b00000027401bb0035
01c5007f06020301000004e000b201dc02e004c3023d00d50160011904a7
036e05ca022100ab0426009002bc02bb014200b4023c0256029c030001e5
01a800e5006b00780094016b017300ab01ed013a017d0137017f00d40216
03530184003cffa202040109014901f0006e031500810464005e00000000
0000000000000000000000000000000000000000000000000000013900dc
00e9fe9e040d047c012b00b80096005900ac00df01a900fa0105ffec0017
0003005500610004008c00a3008500280120005d00d6007f012601190104
016c06cf00b4010600000737063e047a00f000f900e905ba042604420000
ffe7fe69049e04e3ff37ff2d01200105012000a800740068004700f200e5
00d900bd00a800680047005c0048000a0028003200410050005a0064007d
00870091ffb0ff9cff83ff79ff6f00cb012000fa012c01fa01a000d500b8
005c003c00c800c8008f00d9018b00b30047000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000fe6400c000ea01180125013203b003ed0576
059005aa05b405be05cd063100780084009b00cc00e200f4010a01200163
00d100ea00f7010801420019002c00340041003800480058006c025903bd
0043011a007000d30028003700420050005a0064007300780082008c009c
00a500bd00ce00f00110015c00be00d801020117012c016300ea01080041
004b0055005f007300a60109018301b300410064001e002a00eb00fa010e
01380274002c00400082009600b600c000cc00dc00e600f000ff010a0120
012c013b01440156016300f70057006401100136005001b10000ffb60039
004e004403cc00e5002401100042012201a400f0006000e0000e001d0039
05e30102002cfe4eff38026903bd011600ff000e00a00054001b003d0171
0041000f005000fd0015014f0035fe52002c00d3010304b001d200b600c0
00990265ff870377fe6c00cb00a9005c0040047607440472048504fb4042
5554403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524
232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09080706
0504030201002c4523466020b02660b004262348482d2c452346236120b0
2661b004262348482d2c45234660b0206120b04660b004262348482d2c45
23462361b0206020b02661b02061b004262348482d2c45234660b0406120
b06660b004262348482d2c4523462361b0406020b02661b04061b0042623
48482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d
44235920b0ed51582320b04d44235920b09051582320b00d44235921212d
2c20204518684420b001602045b04676688a4560442d2c01b10b0a432343
650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b102
17453ab10200080d2d2c45b01a234445b01923442d2c2045b00325456164
b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0
004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a
8cb8100062602b0c642364615c58b00361592d2c45b0112bb0172344b017
7ae4182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b017
7ae41b038a45186920b01723448a8a8720b0c05158b0112bb0172344b017
7ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c482d2c4b
53205c58b002855958b00185592d2c20b0032545b019234445b01a234445
65234520b00325606a20b009234223688a6a606120b01a8ab000527921b2
1a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a5279b3
1940201945208a54582321b03f1b235961442d2cb110114323430b2d2cb1
0e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f
432343650b2d2cb11011432343650b2d2c4b525845441b2121592d2c0120
b003252349b04060b0206320b000525823b002253823b002256538008a63
381b212121212159012d2c4bb06451584569b00943608a103a1b21212159
2d2c01b005251023208af500b0016023edec2d2c01b005251023208af500
b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d
2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d
2c3eb02a2a2d2c352d2c76b8023623701020b802364520b0005058b00161
593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423648bb8
2000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621b
b200802f2b59b002602d2c0c6423648bb84000626023212d2cb400010000
0015b00826b00826b00826b008260f10161345683ab001162d2cb4000100
000015b00826b00826b00826b008260f1016134568653ab001162d2c4b53
234b515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c
4b53234b515a58381b2121592d2c4b5458381b2121592d2cb0134358031b
02592d2cb0134358021b03592d2c4b54b012435c5a58381b2121592d2cb0
12435c580cb00425b00425060c6423646164b0035158b00425b004250120
46b01060482046b0106048590a21211b2121592d2cb012435c580cb00425
b00425060c6423646164b807085158b00425b00425012046b8fff0604820
46b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b1b212159
2d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58
381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b
2121592d2c462346608a8a462320468a608a61b8ff8062232010238ab902
a702a78a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a
2d2cb1020042b123018851b1400188535a58b910000020885458b2020102
43604259b12401885158b920000040885458b2020202436042b124018854
58b2022002436042004b014b5258b2020802436042591bb9400000808854
58b202040243604259b94000008063b80100885458b202080243604259b9
4000010063b80200885458b202100243604259b12601885158b940000200
63b80400885458b202400243604259b94000040063b80800885458b20280
0243604259b12801885158b94000080063b81000885458ba000201000002
436042595959595959592d2cb0024354584b53234b515a58381b2121591b
21212121592d0000000100000006cf5cfec9dbf95f0f3cf5081908000000
0000a2e33c1d00000000ccb58106fafafcfd100008720000000900010001
0000000000010000073efe4e00431000fafafa0b10000001000000000000
00000000000000000f940600010000000000023900000239000002aa00b8
03cb00700473001204730046071d005905c7005a01e7005c02aa006b02aa
0043031d001c04ac00550239007502aa0073023900930239fffd04730056
047300a2047300330473004d047300260473005b04730057047300570473
00530473004102aa00c902aa00aa04ac005f04ac005504ac005f04e3006a
07cd003d05c7000005c7009605c7006105c700940556009504e300970639
006205c700960239008c0473002305c7009904e3009d06aa009105c70098
06390059055600950639005905c700960556004a04e3002c05c700930556
ffff078d0007055600000556fffd04e3001602aa00920239fffd02aa0026
04ac00730473ffed02aa002a0473004904e300870473005504e300540473
004102aa001804e3005404e30092023900930239ffa20473008902390093
071d007e04e3009104e3005204e3008b04e3005b031d00870473003002aa
001f04e3008d0473000b063900090473000c0473000e04000022031d003c
023d00b0031d002d04ac004305c7000005c7000005c700610556009505c7
00980639005905c700930473004904730049047300490473004904730049
047300490473005504730041047300410473004104730041023900920239
ffe90239ffcd0239ffd004e3009104e3005204e3005204e3005204e30052
04e3005204e3008d04e3008d04e3008d04e3008d04730044033300560473
00540473000d0473003b02cd00420473fffe04e3008b05e5fff705e5fff7
080000d802aa00bb02aa0005046400310800ffaa0639003f05b400980464
00320464003c0464003c04730001049c006f03f4002c05b4007a069600a1
046400000231000002f6002502ec001a06250037071d005804e3005704e3
006502aa00c304ac0055046400540473ffec0464001f04e5001a04730060
0473006a080000c905c7000005c700000639005908000048078d00580473
fffc08000000040000840400006902390098023900720464003103f4002f
0473000e0556fff70156fea90473ffe002aa004b02aa004b04e3001f04e3
001f047300440239009302390075040000710800000105c7000005560095
05c7000005560095055600950239006a0239ffae0239ffbf0239ffc10639
0059063900590639005905c7009305c7009305c700930239009302aa0003
02aafff302aa001302aa001a02aa00cd02aa009102aa002602aa006002aa
003902aa000304e3000a0239000a0556004a0473003004e3001604000022
023d00b005c7fffd04e300530556fff70473000e0556009504e3008b04ac
005504ac006d02aa005b02aa001902aa002806ac005c06ac005c06ac0028
047300000639006204e300540239008c0556004a0473003005c700610473
005505c700610473005504e30054046bffed02aa00c805c7000004730049
05c700000473004905c7009405c0005105c7fffd05560095047300410556
00950473004104e3009d0239007904e3009d0315009504e3009a03d50093
05c7009804e3009105c7009804e300910639005904e3005205c70096031d
008705c70096031d00500556004a0473003004e3002c02aa001f04e3002c
03d5001e05c7009304e3008d05c7009304e3008d04e300160400002204e3
00160400002204cf009a063900560691005604eb004e04da004e03cc004e
0579004e0392003005b9004e046bffed04d500b8032b004f08c000290800
004f040000990800004f040000990800004f040000980400009807d5016a
05c7008f04ab005504d5009d04ac005504d5022204d5010505abffe90500
01c905ab027e05abffe905ab027e05abffe905ab027e05abffe905abffe9
05abffe905abffe905abffe905ab01c005ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe9
05abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905ab02d605ab006605ab
ffea05d5ffff04d500920800000007eb013007eb012007eb013007eb0120
04d500b204d5008004d5002a082b0198086b01b807550010060000f40600
006f0440003a0540003704c0003f0415004004000025060000550647008c
0473009005abffc701eb008d03d500860715002303e9001804d5009202d6
005c02d6005c04d500b202d6004d05c700000473004905c7006104730055
05c700610473005505560095047300410556009504730041055600950473
00410639006204e300540639006204e300540639006204e3005405c70096
04e3009205c7000504e300190239ffba0239ffbb0239ffda0239ffda0239
ffe10239ffe20239004802390047047300230239ffa205c7009904730089
0473008d04e3009d0239ffed05c7009804e3009105c9009c04e3008e0639
005904e300520639005904e3005205c70096031d002a0556004a04730030
04e3002c02aa000705c7009304e3008d05c7009304e3008d05c7009304e3
008d05c7009304e3008d078d0007063900090556fffd0473000e0239008d
05c70000047300490800ffaa071d00580639003f04e3005702aa00c9078d
000706390009078d000706390009078d0007063900090556fffd0473000e
0239009502aaffd70473000d04cd005a06ac005c06ac002906ac003006ac
002f02aa00bc02aa002602aa00bb03b8fff405c7ffe806d3ffbb073fffbb
03caffbb0699ffa6076bffc806b4ff9c0239ff2905c7000005c7009605c0
00000556009504e3001605c700960239008c05c700990556000006aa0091
05c70098052600660639005905c7009a0556009504cd005a04e3002c0556
fffd0556000006790056066a00620239ffcc0556ffff04eb004e039c004e
04e3008e0239008204a8006c04e200900473000f03af004e04e3008e0453
004e023900930476008e0473000f04e500900473000b0390004e04e30052
04f300760429004e04a80076049b00110607007606c2004e0239ffcd04a8
007604e3004e04a8007606c2004e055a00970715002f048900a405b10058
0556004a0239008c0235ffca0473002308c0001a0880009d0700003704e2
009a04fa000005c0009905c7000005c0009b05c70096048900a405b3fffa
05560095073b00170503002c05c0009905c0009904e2009a059d002006aa
009105c700960639005905c000990556009505c7006104e3002c04fa0000
06d400590556000005d8009a059f007d080a009a0827009a06f5001a07d5
009d05c0009b05b100570840009605c000040473004904f1005c04eb0096
035500880514fff90473004105acffff03fa001804eb008c04eb008c0401
00880515001905eb009b04d5008804e3005204d5008804e3008b04730055
03eb00150473000e070000540473000c04eb008904a5007206ab008c06c0
008d05d5002806d5009504eb0099046b003806d5009104abfffb04730045
04e3000003550088046b005104730030023900930240ffd00239ffa207c0
00180740008c04e30000040100880473001204d5008803e5009603930088
0800004108eb00a306200030000001010000001e00000031000000310000
01010000007f0000007e0000008c0000008c000001010000001000000101
000001210393007d0000008c026500c8000003020000ff0102aa00c904a9
0059049b004103a7000a0466003204ea0082022f0087034e005a04ed0087
0503007d022f0087042c002803ed004b03f8004104e30087050a0037022f
00870316004b04e800500459000a04c0006404b2006403ff000a0418000a
04950082042c002805b8005a0563002d045e0087045e0087045e00870236
005004090050068b0087022fffac042c0028042c002803f8ff1603f8ff16
0479003205b8005a05b8005a05b8005a05b8005a04a9005904a9005904a9
0059049b004103a2000a0466003204ea008202950000038100000503007d
02950000042c002803ed004b03f80041050a00370316004b04e8005004c0
006404b200640418000a04950082042c002805b8005a0563002d022f0087
049b004103ed004b04b2006404db00410000ffdc0000ff250000ffdc0000
fe51028d00ab028d00a002da004303c0007e0196ffba0000004600000046
000000460000004600000048000000460000004600000046047e0188047e
0150047e0104047e009e047e012d047e00ea047e00d5047e009c047e00bc
047e00ee04350085028d00c1043500b3060001000600010002be00580600
0100047e00a5047e00bd047e00de06000100060001000600010006000100
060001000000004606000100060001000600010006000100060001000600
0100060001000600010004e6ffba06000100060001000600010005320039
05320039022cffba022cffba06000100060001000600010006000100049e
0034047800300430ffba0430ffba0376000a0376000a060e002907080029
02e2ffba0456ffba060e00290708002902e2ffba0456ffba05280097046f
000a03520003060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100000000300000004600000046000000400000004606000100
060001000000ffdc0000fe510000ff160000ff160000ff160000ff160000
ff160000ff160000ff160000ff160000ff160000ffdc0000ff160000ffdc
0000ff200000ffdc0473002d080000000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100028d007f028d00670600010005a0002e03c0007e01e8
00060207ffcf01bc005e01e0fffa039c0006039c000601bc005e01e0001a
05280097049e0011022cffba022cffba01bc008801e0001a053200390532
0039022cffba022cffba02be0036035200030532003905320039022cffba
022cffba0532003c0532003c022cffba022cffba049e0034047800300430
ffba0430ffba049e0034047800300430ffba0430ffba049e003404780030
0430ffba0430ffba02be006902be006902be006902be00690376000a0376
000a0376000a0376000a073200400732004004deffba04deffba07320040
0732004004deffba04deffba0880004008800040062cffba062cffba0880
004008800040062cffba062cffba0430ffba0430ffba0430ffba0430ffba
0430ffba0430ffba0430ffba0430ffba0454003403c000460454ffba02e2
ffba0454003403c000460454ffba02e2ffba0610002f0610002f0270ffba
0298ffba04e6002704e600270270ffba0298ffba045400290454002902e2
ffba02e2ffba039c0023039c002301e0ffba01e0ffba02e2002102e20021
0352ffba0352ffba0454003e0454003e022cffba022cffba02be00580352
000303c0ffba039cffba039c0006039c000605280097046f000a05280097
049e0011022cffba022cffba0454001004c4001003e400220454001a03e4
00220454001a03e400220454001a06000100060001000000004600000046
060001000600010006000100000000460000004606000100060001000000
004800000046060001000600010006000100000000460000004600000046
000000460000004000000030060001000000004600000046060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
028d00ca028d00c7028d00c6060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010002be00690100ffba0800ffba1000ffbb
06d3005905b0005206a3009305cb008d0000fd880000fbc10000fc5f0000
fe310000fcad0000fd550000fe260000fdf10000fd180000fc690000fd95
0000fbe00000fc700000fed40000fecd0000fea0041b007806ac005c06ac
00190000fe450000fd550000fda60000fc5f0000fe250000fd180000fbe0
0000fafa0000fb360000fc700000fb870000fb9b0000fcce0000fc540000
fbc30000fc940000fbf50000fdb00000fe590000fd7e0000fc820000fd34
0000fe500000fe460000fcd10000fd3e0000fd020000fc3a0000fce90000
fc260000fc070000fc2f0000fb9e0000fb760239009305c7000004730049
05c700000473004905c700000473004905c700000473004905c700000473
004905c700000473004905c700000473004905c700000473004905c70000
0473004905c700000473004905c700000473004905c70000047300490556
009504730041055600950473004105560095047300410556009504730041
055600950473004105560095047300410556009504730041055600950473
00410239006a0239005d0239008c023900930639005904e3005206390059
04e300520639005904e300520639005904e300520639005904e300520639
005904e300520639005904e3005206d3005905b0005206d3005905b00052
06d3005905b0005206d3005905b0005206d3005905b0005205c7009304e3
008d05c7009304e3008d06a3009305cb008d06a3009305cb008d06a30093
05cb008d06a3009305cb008d06a3009305cb008d0556fffd0473000e0556
fffd0473000e0556fffd0473000e05c70000047300490239ffca0239ffca
0639005904e3005205c7009304e3008d05c7009304e3008d05c7009304e3
008d05c7009304e3008d05c7009304e3008d0000fef90000fef90000fef4
0000feef0489fffd03550007073b001705acffff04e2009a0401008804e2
009a0401008805c7009604d5008804730001047300120473000104730012
055600000473000c059f007d04a50072059f009c04e3009205cf00590473
004c0639005604e3005205320039022cffba0270ffba0298ffba04e60027
022c0065022c0016022c0016022c0011022c0043022cffd20000fef00000
000f0000fff502aa009002aa0090000000060000005e0000005e0000ffcb
01bc000f01e0ffbf01bcfff501e0ffcd01bc001d01e0000901bc008801e0
001a039c0006039c0006039c0006039c000605280097046f000a05320039
05320039022cffba022cffba0532003905320039022cffba022cffba0532
003905320039022cffba022cffba0532003905320039022cffba022cffba
0532003905320039022cffba022cffba0532003905320039022cffba022c
ffba0532003905320039022cffba022cffba049e0034047800300430ffba
0430ffba049e0034047800300430ffba0430ffba049e0034047800300430
ffba0430ffba049e0034047800300430ffba0430ffba049e003404780030
0430ffba0430ffba049e0034047800300430ffba0430ffba02be004f02be
004f02be006902be006902be006902be006902be004f02be004f02be0066
02be006602be006902be006902be006902be006902be002f02be002f02be
002202be00220376000a0376000a0376000a0376000a0376000a0376000a
0376000a0376000a0376000a0376000a0376000a0376000a0376000a0376
000a0376000a0376000a073200400732004004deffba04deffba07320040
0732004004deffba04deffba073200400732004004deffba04deffba0880
004008800040062cffba062cffba0880004008800040062cffba062cffba
0430ffba0430ffba0454003403c000460454ffba02e2ffba0610002f0610
002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298ffba
0610002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298
ffba0610002f0610002f0270ffba0298ffba04e6002704e6002704e60027
04e60027093e0032093e00320740ffba0740ffba060e00290708002902e2
ffba0456ffba045400290454002902e2ffba02e2ffba0454002904540029
02e2ffba02e2ffba045400290454002902e2ffba02e2ffba060e00290708
002902e2ffba0456ffba060e00290708002902e2ffba0456ffba060e0029
0708002902e2ffba0456ffba060e00290708002902e2ffba0456ffba060e
00290708002902e2ffba0456ffba039c0023039c002301e0ffba01e0ffba
039c0023039c002301e0ffb101e0ffb1039c0023039c002301e0ffba01e0
ffba039c0023039c002301e0ffba01e0ffba0454003e0454003e022cffba
022cffba0454003e0454003e0454003e0454003e0454003e0454003e022c
ffba022cffba0454003e0454003e049e0034047800300430ffba0430ffba
02be005803520003031a001a031a001a031a001a039c0006039c0006039c
0006039c0006039c0006039c0006039c0006039c0006039c0006039c0006
039c0006039c0006039c0006039c0006039c0006039c000605280042046f
ffd905280097046f000a022cffba022cffba039c0006039c000605280097
046f000a022cffba022cffba05280097046f000a067f0044067f0045067f
0044067f004501a800280000fe290000fe8c0000ff250000ff230000fefa
0000ff7a0000fe5908fc003208ad00320000ffb50000ffb60000fef00000
ff590000fe590000ff8c01b4000002f700000000fe850000ff0704cd0032
0000ff580000ff580000ff59073200400732004004deffba04deffba0880
004008800040062cffba062cffba0454003403c000460454ffba02e2ffba
03c0007e02e2002102be0058022cffba0290ffba01f4002f01f4003b01f4
001201f400b101f4006d060e002907080029022f00870000fec803500000
045e008703e4fff50454fff503e400220454001a03e400220454001a03e4
00220454001a03e400220454001a03e400220454001a03e400220454001a
047e0072047e00bd03e4000f0454000f04e3001b06b1001e05c0009b04e3
008705c0000a04e3000a05c7006905c700610473005505c7fffd06b3001e
05c0005c04e3005404da004e055600660503006f04e3ffac063900620518
000207720092023900930239000705c70099047300890239001b0473000f
07ef009605c7ffad04e3008e063900560718005905f300550641001e04e3
008b05560095055600640473006304cd005a02e1001e02aa001f04e30018
02aa001f04e3002d066a006205c70093062900000473000e04e300160400
002204e3003a04e300590436002a04360039047300330473005b03fa001e
04a2001f04e3008b023d00b003fb00b004ad005602aa00b80aaa009409c7
009408e300540956009d071c009d047200930a3a009808000098071c0091
0473004c05c70000047300490000fefe05c70000047300490800ffaa071d
00580639006204e300240639006204e3005405c700990473008906390059
04e300520639005904e3005204e3003a043600220239ffa20aaa009409c7
009408e300540639006204e30054084300960552009505c7009804e30091
05c700000473004905c70000047300490556009504730041055600950473
00410239ff370239ff2d0239fff40239ffe60639005904e3005206390059
04e3005205c70096031dffcd05c70096031d008005c7009304e3006705c7
009304e3008d0556004a0473003004e3002c02aa001f049e002e04290049
05c7009604e30092059f009c050c0052050c005204e300160400002205c7
00000473004905560095047300410639005904e300520000fefd06390059
04e300520639005904e300520639005904e300520556fffd0473000e0473
004504e3005404e3008204e30087047300340473001404e3005404e30054
0473004c0641004c03fa004f03fa001805870018048a005202aaffc404e3
005404e3005404b000520473000f04ce000f04e3008a04e3009204e30092
0239001b0239006b033e004402a8000002d900140239009304d40093071d
0085071d0085071d007e04e3ffa604e3009104eb008c04e3005206ab0052
06c2004e05ff0052031dffe6031dffe6031dffe6031d0087031d0087031d
0087031dffe604ab008a04ab008a0473003002aaffc402aaffc402aaff9b
0451001e02aa001902aa001f04e3001b04f8004b04a80091047300120639
00090473000f0491000f0400002205700022043600220436002204730042
0473005504730042047300550639005904eb0096048a004f04b0005204d5
008803ab001e04730014039e008804e3005b0473004204730055083f0054
0789005409af00540682001f0446001f0698001f06f4001806350093058a
00930445001e0482008802f1003202f10032018effe20204003202040000
0204000003000032042f000002e2000001e7005c03cb0070023900980239
00750239009402aa00f302aa00f3030000320300003204ac005f04ac005f
04ac002a04ac002a02aa012102aa00bb02aa002a02aa012102aa001302aa
002a02aa00bb02aa00ca02aa00ca02aa00f302aa00f302aa00a602aa00a6
02aa00a602aa001302aaffe102aafffb02ed0000012100320302003202ee
000003000032031000960310009603100096031000960310009602aa0062
02aa006202aa000302aa001d040000690457009604570096045700960457
00960457004304570043045700430457004304570043031000430457002f
0457002f0457002f0457002f0457002f0310002f04570025045700250457
002504570025045700250310002f0457001a0457001a0457001a0457001a
0457001a0310001a04570042045700420457004204570042045700420310
004204570096045700960457009604570096045700420457004204570042
0457004204570042031000420457002f0457002f0457002f0457002f0457
002f0310002f0457002f0457002f0457002f0457002f0457002f0310002f
045700260457002604570026045700260457002603100026045700420457
004204570042045700420457004203100042045700960457009604570096
045700960457004204570042045700420457004204570042031000420457
002604570026045700260457002604570026031000260457002304570023
045700230457002304570023031000230457002f0457002f0457002f0457
002f0457002f0310002f0457004b0457004b0457004b0457004b0457004b
0310004b0457009604570096045700960457009604570042045700420457
00420457004204570042031000420457001a0457001a0457001a0457001a
0457001a0310001a04570024045700240457002404570024045700240310
00240457002f0457002f0457002f0457002f0457002f0310002f0457004e
0457004e0457004e0457004e0457004e0310004e04570096045700960457
0096045700960000feaf0000febf0000fdb50000fec80000ff780000feb1
0000ff3d0000fe6f0000feae0000ffce0000ff660000fe6f0000fec80000
fec80000ff680000ff680000ff68000000000000ff1f0000ff1f0000ff44
0000ff5f0000fe870000ffec0000ff9c0000ff510000ff510000ff510000
febf0000ff15000000000000feb10000ff3d0000ff6b0000fef20000ff47
0000ffce0000fe870000febb0000feae0000feae0000fec80000fec80000
fea60000febf0000fdb70000febe0000fea60000febf0000fdb50000fe1f
0000fee20000ff9c0000fe870000ff440000feba0000ff230000ff9a0000
fdb90000fe3b000000000000fea70000ff680000fe170000ff740000fe87
0000fe000000ff660000ff440000fea70000fea70000fea70000ff030000
ff520000fd1f0000ff530000ff530000ff530000feb10000feb00000ffa1
0000fe8c0000feb80000feaf0000fea20000feba0000fdf40000ff190000
ff2d0000fe8c0000fe8802aa00bb02aa002a02aa00c804e2006704a8000a
06290000080200000629000005ff005206c2004e056900140639005904e3
005205c700770473005504e30097039e008806030000043c001d066f000a
04e2000a07ef0096071d0085059f007d04e3008a059f009c04d7000a0556
0064055600640524001404d4000a05e1005504a0004b040e001403840028
0569001404f1005c047300550239ffa20639005603d4005103d400510556
009505c000990473004104eb008c0a3d0059063a001406f4001a059f001b
07ce008c065e0093055600000473000b0768008c06670093067900560607
0076089e008c07d800930503004603fa0043067900560607007606390056
04e300520685ffff052c000b0685ffff052c000b08f6005907cb00520684
0023051a00230a3d0059073500550000fe370a3d0059063a001405c70061
0473005504ac000f0000fea60000feb10000ff8d0000ff8d0000fc2b0000
fc4c05c0009904eb008c05c0001104eb001b0556009504e3008b059f009c
04c900880503002c03fa001804e200110401000d0617001a04fc00280709
009605b6008809020099075f008805c7003b049f003405c7006104730055
04e3002d03eb001506d2002c05830015059f007d04a5007206da000a056d
000a06da000a056d000a0239008c073b001705acffff059d009a04c80088
059d00200515001905c7009604d5008805c7009604d50088059f007d04a5
007206aa009105eb009b02aa001a05c700000473004905c7000004730049
0800ffaa071d0058055600950473004105cf00590473004c073b001705ac
ffff0503002c03fa00180503002c0436002205c0009904eb008c05c00099
04eb008c0639005904e300520639005604e3005205b10057046b003804fa
00000473000e04fa00000473000e04fa00000473000e059f007d04a50072
07d5009d06d5009505c0005e04e30054083e005e077a005407ad004606c4
004305430046044a0043081a002007a50019084300960766008806390062
04b000520620002d059b00150000ff430000fec90000ff770000ffb00000
ff470000ff560000ff740000fed70000feac000000000000ff520000ff56
000000000000feac0000fd9a000000000000ff6a0000ff7c0000ff690000
ff560000feac0000ff7f0000ff560000fdef0000ff430000ff690000ff7c
000000000000fdae0000ff8c000001020000feef0000feef0000fefd0000
fef90000ff530000fef80000fef905c700000473004905c7009604e30087
05c7009604e3008705c7009604e3008705c700610473005505c7009404e3
005405c7009404e3005405c7009404e3005405c7009404e3005405c70094
04e300540556009504730041055600950473004105560095047300410556
009504730041055600950473004104e3009702aa00180639006204e30054
05c7009604e3009205c7009604e3009205c7009604e3009205c7004e04e3
003b05c7009604e300920239ffd20239ffd20239001b0239ffce05c70099
0473008905c700990473008905c700990473008904e3009d0239009304e3
009d0239ffeb04e3009d0239ffdd04e3009d0239ffcb06aa0091071d007e
06aa0091071d007e06aa0091071d007e05c7009804e3009105c7009804e3
009105c7009804e3009105c7009804e300910639005904e3005206390059
04e300520639005904e300520639005904e300520556009504e3008b0556
009504e3008b05c70096031d008705c70096031d008705c70096031d0087
05c70096031d00590556004a047300300556004a047300300556004a0473
00300556004a047300300556004a0473003004e3002c02aa001f04e3002c
02aa001f04e3002c02aa001f04e3002c02aa001f05c7009304e3008d05c7
009304e3008d05c7009304e3008d05c7009304e3008d05c7009304e3008d
0556ffff0473000b0556ffff0473000b078d000706390009078d00070639
0009055600000473000c055600000473000c0556fffd0473000e04e30016
0400002204e300160400002204e300160400002204e3009202aaffde0639
00090473000e047300490239008d04eb004e04eb004e04eb004e04eb004e
04eb004e04eb004e04eb004e04eb004e05c7000005c7000006f3fff206f3
000006f3fff206f3000006f3004306f3004303cc004e03cc004e03cc004e
03cc004e03cc004e03cc004e061efff2061e000007aefff207ae000007ae
fff207ae000004e3008e04e3008e04e3008e04e3008e04e3008e04e3008e
04e3008e04e3008e068ffff2068f0000081ffff2081f0000081ffff2081f
0000081f0014081f001402390090023900900239ffb60239ffc40239ffde
0239ffec0239ffb30239ffc00301fff2030100000491fff2049100000491
fff204910000049100140491001404e3005204e3005204e3005204e30052
04e3005204e30052069dfff2069d00000855fff20855000007c9fff207c9
000004a8007604a8007604a8007604a8007604a8007604a8007604a80076
04a800760682000007fe00000862000007aefff306c2004e06c2004e06c2
004e06c2004e06c2004e06c2004e06c2004e06c2004e06cefff206ce0000
0886fff20886000007fafff207fa000007fafff307fafff304eb004e04eb
004e03cc004e03cc004e04e3008e04e3008e0239ffe70239008d04e30052
04e3005204a8007604a8007606c2004e06c2004e04eb004e04eb004e04eb
004e04eb004e04eb004e04eb004e04eb004e04eb004e05c7000005c70000
06f3fff206f3000006f3fff206f3000006f3004306f3004304e3008c04e3
008c04e3008c04e3008c04e3008c04e3008c04e3008c04e3008c068ffff2
068f0000081ffff2081f0000081ffff2081f0000081ffff3081ffff306c2
004e06c2004e06c2004e06c2004e06c2004e06c2004e06c2004e06c2004e
06cefff206ce00000886fff20886000007fafff207fa000007fafff307fa
fff304eb004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e
05c7000005c7000005c7ffd105c7ffdd05c7000002aa00dc02aa00ca02aa
00dc02aafff302aafff304e3008c04e3008c04e3008c04e3008e04e3008c
06e6000006e60000075700000757000005c7009602aafff202aafff202aa
fff30239ffe50239ffdb0239ffce0239ffce0239ffc20239ffbb0239ffe8
0239ffde03c9000003c9000002aa000002aa000002aafff304a8007604a8
007604a8007604a8007604f3007604f3007604a8007604a800760556fffd
0556fffd06e6ffd8074affdd061e000003b8fff403b8fff402aa002a06c2
004e06c2004e06c2004e06c2004e06c2004e0765ffd1069dffdd0796ffd1
06ceffdd066a006202aa00bb02aa00dc0473000a05c7006105c70061071d
007e05c7002109cd0096078d000705c7002004e3002d08b0001404000030
04c100660000ff530000ff530000ff530000ff530239001b0239ffa20473
00000556001206b3005403fe005706ab0091040c001f05d6ffe605d6ffe6
02aa008402aa008402aa00c902aa00c902aa009102aa002a02aaffc502aa
ffc302aafff302aa00c902aa00a902aa00a902aa00a902aa00a9032e001e
032e001e02aa003a0000ff730000ff9d0000fec80000ff230000ff720000
ff720000fee70000ff9d0000ff530000ff530000ff530556009504e3008b
04b5000006350000071d006104eb000f04730055049900910499001b0401
008c03fa001802390093040f00490476008e039e000e05eb009b04eb008c
04e300520473003404f1005204f1005204f10021078d00540492004b04e3
005304e3005304e9008c04abfffb04abfffb03eb001504a8007604e30051
0624005104e000510473000b063900090400002203df002203f2004b04ec
0014035500880473001204d5008804e9008c060700760515001903e30000
0591000003a2003203a2000003a30032035500320355003204030032037c
00320172005502de003203b00032031e0032042200320377003203780032
04260032037a0032035b003203ac003203770032037b0032051400000305
0032030500320321003204b6003203210032032100320302003203020032
02cf003202cf0032032000320121003202ca00320484003402f200320348
0032030a003203490032034900320320003201bc000a02f2003203420032
0484003202e90000034c000a031b003202e900000343003203da00320308
0000012100320204003202f2003202e90000031b003202e9000003420032
03da003203080000077d00460a98004602a700460a7800460541ffba01e9
001e045400100000ff0d0000ff350000fece0000feb70000fec90000ffc7
0000ff4f0000ff9e0000fef002be006902be00690376000a0376000a03c0
ffba039cffba03c0ffba039cffba05c8003905920032061600820519004b
05240041060f008705580028068f002d04ac00550000fe3b0000fe660000
fe680473fffc0400008403d5ffba01e0ffba01e0ffb101e0ffba01e0ffba
06d0002e098400230400000008000000040000000800000002ab00000200
0000015500000473000002390000019a000000ab00000000000005e5fff7
05c7006106aa009105eb009b0760008d07a1005407a1005b05c7000005c7
00610473001404e3001104e3002c04730039040000220529004200000101
0000ff420000fead0000ff3a0000ff5304f3000a05c7006905c7006105c7
0069048900a4035500880000ff430000ff010000ffac0316007d0000ff37
0298ffba033d001e0000ff3a0000ff480000ff490000ff7e0000ff4f0000
ff4a0000fe9e0532003905320039022cffb6022cffb60532003c0532003c
022cffba022cffba0532003905320039022cffba022cffba053200390532
0039022cffba022cffba0532003905320039022cffba022cffba05320039
05320039022cffba022cffba0532003905320039022cffba022cffba049e
0034047800300430ffba0430ffba049e0034047800300430ffba0430ffba
02be004f02be004f02be006902be00690376000a0376000a073200400732
004004deffba04deffba0454003403c000460454ffba02e2ffba04540034
03c000460454ffba02e2ffba0454003403c000460454ffba02e2ffba0610
002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298ffba
060e00290708002902e2ffba0456ffba060e00290708002902e2ffba0456
ffba060e00290708002902e2ffba0456ffba02e2002102e200210352ffba
0352ffba02e2002102e200210352ffba0352ffba0454003e0454003e022c
ffba022cffba0454003e0454003e022cffba022cffba0454003e0454003e
022cffba022cffba039c0023039c002301e0ffba01e0ffba0376000a0376
000a0376000a0376000a073200400732004004deffba04deffba04e3ffc1
04e3005402aafff3071dffc104e3ffd504e3ffc5031dffc1031dffc10473
ffff02aaffda0400002104e3008302f0003204dc004e06fb001f0239001b
0239001b04e3001404a8001404f8001404e3008704e3005402aa00180625
00540473008902390070071d007e04e3009104e3008b031d006604730030
03baffc40473000b0473000c040000220473004904e3005404e300540473
004103fa004f03fa0018053e0051023900930473003402aaffc404e3008d
0436002203210032030a0032030a00060348003202cf003201f0000a01f0
00000320003202f100320174000a01210032012100320174000a02760000
018e003201500032024900320484003404840032035f0000035f003202fa
00320348003204030032030200320239000001bc000a0340000a035e0032
02ea003202ea003202e9000002e4003202e4003203be0032030a003202e8
00320000fe920000fe920000ff730000fe9f02aa00c90305003203020032
0348003202ee0000030200320639006205c700000556001e05c7006102aa
004104eb004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e
04eb004e0239ffb60239ffb60239ffc40239ffc40239ffb60239ffb60239
ffc40239ffc404a8007604a8007604a8007604a8007604a8007604a80076
04a8007604a800760239ffc90239ffc90239ffc90239ffc904a8007604a8
007604a8007604a8007603e400220454001a03df003005c7fffd05c70016
055600000556009504730041047300230239ffa20633005904e3005b05c7
0000031d001b0556fffd0473000e04730034047300550473003402390093
048900110355001b055600000473000c055600000473000c0503006f03fa
004f059d0020051500190000fec60000fed40000fec60000fed40000fe5f
0000fe5f0000ff720000ff730000fee7080000000401005d0473003404e3
00110239001b04e300060556fffd05c700960473004902aaffcd05c70096
04e3009205c700990473008904e30016040000220473002804540096037c
008805b9004e0000ff530000ffbc0000fefe0000fefe0000fea40000fea4
0239009305c9009c05c7009805c9009c0000fee00000ff300000fed40000
fed50000fec00000fed00000fed80000fed80000fed80000fed80000fdc6
0639005904e3005b078d00070639000905b900910000fe9b061b005904d9
0006085b000706de000602aa00c9031c005501e7005c01e7005c04000099
0400009902aa00b802aa00b802aa00b802aa000300000046000000360000
00310000005600000044000000560000004a0000004904e3002c0473002b
04a3005c0379003f048800480453003e04870031045f003e048b005c0433
004004730053048f005c046f00560381003b0481003c04810056049b0032
0481005004890062043b004b04730053048a005505a3005005d3005905d9
0096092a009605d9008c0316003b059800990639005904e30054021d0082
047000820277008204e300540250000f04e3008a0473005c047300620316
003b027700820239009304d0000004ee009804c7005c04f1009804860098
04290098053d005c051200980250009803d0002904f40098042c00980628
0098050c0098054a005c048c00980553005c04f60098047b004a04190029
04eb00900492000a0651001404a2001204a600080429001f06cc000006b9
005c042c00380548003e048d009804f10024050f008e04d0000004d00000
04d0000004d0000004d0000004d0000004c7005c04860098048600980486
0098048600980250fff9025000900250ffd70250ffde050c0098054a005c
054a005c054a005c054a005c054a005c04eb009004eb009004eb009004eb
009004a6000804d0000004d0000004d0000004c7005c04c7005c053d005c
04f1009804f100240486009804860098048600980486009804860098053d
005c053d005c04c7005c05120098051200360250ffd00250ffe50250fff1
025000570250009805d8009803d0002904f40098042c0098042c0098042c
0098042c0098050c0098050c0098050c009805000098054a005c054a005c
054a005c04f6009804f6009804f60098047b004a047b004a047b004a047b
004a0419002904190029041900290419002904eb009004eb009004eb0090
04eb009004eb009004eb00900651001406510014065100140651001404a6
000804a6000804a600080429001f0429001f0429001f04d0000006cc0000
0548003e04d0000004ee00980417009804d00000048600980429001f0512
00980549005c0250009804f40098047afffb06280098050c0098043a004c
054a005c05000098048c0098041e00430419002904a600080583004c04a2
0012056f004c055c005c04d00000048600980512009802500090054a005c
04a60008055c005c0250ffde04a600080486009805d500290417009804ca
005c047b004a025000980250ffde03d00029072c0003074b0098058a0029
047b00980455001904fc009804d0000004ed009804ee00980417009804e1
000f048600980699002304560046050c0098050c0098047b009804b50001
0628009805120098054a005c05000098048c009804c7005c041900290455
0019059e004c04a200120507009804bf006406c2009806d6009805c00028
06b2009804bb009804cb004906e1009804f600090364009802aa003502aa
005b02aa001902aa002802aa001202aa002202aa003502aa003302aa002c
02aa002f02aa003502aa002f02aa003505a3005005a3005005a3005005a3
005005a3005005a3005005a3005005a3005005a3005005a3005005a30050
05d3005905d3005905d3005905d3005905d3005905d3005905d3005905d3
005905d3005905d3005905d3005905d9009605d9009605d9009605d90096
05d9008c05d9008c05d9008c05d9008c05d9008c05d9008c05d9008c05d9
008c05d9008c0316003b0316003b031600390316003b031600310316003b
0316003b0316003b0316003b044dff890316003b0316003b0316003b0277
00820277000903070082032600820277fff90316003b0316003b03160039
0316003b031600310316003b0316003b0316003b0598009904e3005404e3
005404e3005404e3005404e3005404e3005404e3005404e3005404e30054
021dffbc04700082027700820277000903070082032600820277fff90250
000402500008037a000f0250000f04e3008a04e3008a04e3008a04e3008a
04d60049047b004a04c7005c053d005c02aa001202aa002202aa003302aa
002c05a0002e04ed009d04ed009d069b002a04d5008505e30085023200a3
023200960232004e023200200232006702320031023200390232001e0232
001e023200420232001c023200250232002e023200170232000b0d650046
0e3200460000ffba0f6200460000ff640000ff9a0000ffb40000ff9c049e
0034047800300430ffba0430ffba049e0034047800300430ffba0430ffba
073200400732004004deffba04deffba0376000a0376000a049e00340478
00300430ffba0430ffba01bcffcc01e0ff6801bcffe601e0ff8205280097
046f000a022cffba022cffba05280097046f000a022cffba022cffba0528
0097046f000a022cffba022cffba039c0006039c0006039c0006039c0006
067f0044067f0045067f0044067f0045049e0034047800300430ffba0430
ffba073200400732004004deffba04deffba073200400732004004deffba
04deffba045400290454002902e2ffba02e2ffba044dffcb04a5ffcc043e
ffd504a2ffcd07b9003205ef003207230032051700350bdefeed0000fe2c
0000fffc0000006b000000730000006b05280097046f000a022cffba022c
ffba060e00290708002902e2ffba0456ffba060e00290708002902e2ffba
0456ffba05280097046f000a022cffba022cffba05280097046f000a022c
ffba022cffba05280097046f000a022cffba022cffba0000fff504540096
03b3000a04e3002c04ae001405c000990513008c05c7009904e3006a0a66
00440476001f0556001c0826002006e9001906780095066b008b07f90004
06e9fffb05c700990476008e08dc002007940019090500960753008805c0
009904d50088059f009c04e3009202aa001802aa001804da004e06b9008c
041a00180514005904da005305a300280538000006aa009105c70004061b
009d059a0041031dffe604e3005204010049018effe202e900000556004a
04e3001602390047079300ec0b3dffaa08d200000b4700380f6200440196
ffba0196ffba0196ffba01e0000201a8003201a800460196ffba01a8001a
0251003a01a8002901a800460196ffba01a800480196ffba01a800290196
ffba01a800460196ffba01a8006e0196ffba01f4006501f4001601f40016
01f4001101f4ffd2022e008d01f400430199004602bf004d02bf005504c3
000a00>
<000000000000006c0000006c0000006c0000006c0000006c0000006c0000
006c0000006c0000006c0000006c0000006c0000006c0000006c0000006c
0000006c0000006c0000006c000000aa000000aa000001ae000002300000
03d60000052e000006480000064800000648000006480000064800000648
000006480000064800000648000006ca000006ca000006ca000006ca0000
06ca000006ca00000804000008ee000008ee000008ee00000a3400000a34
00000a3400000ad200000c9c00000c9c00000c9c00000e9a00000e9a0000
0e9a00000e9a00000ffe0000125e0000125e0000133e0000147800001478
000014780000147800001478000014780000147800001478000014780000
1478000014780000168600001686000017c2000017c2000019ce000019ce
000019ce000019ce000019ce000019ce00001afa00001afa00001afa0000
1afa00001bea00001ce600001ce600001ce600001ce600001e0600001eee
00001eee00001eee00001eee0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c0000206c
0000206c0000206c0000206c0000206c0000206c0000206c0000206c0000
206c0000206c0000206c0000206c0000206c0000206c0000206c00010000
0f9402d2003c0094000600020010002f00560000073c02c2000500020000
000e00ae0000000300000000006a000000000003000000070064006a0001
000000000000003500ce0001000000000003001301030001000000000004
0013011600010000000000060013012900010000000000070031013c0003
000104090000006a016d0003000104090001001801d70003000104090002
000e01ef0003000104090003002601fd0003000104090004002602230003
0001040900060026024900030001040900070062026f00a9002000320030
0031003200200054006800650020004d006f006e006f0074007900700065
00200043006f00720070006f0072006100740069006f006e002e00200041
006c006c0020005200690067006800740073002000520065007300650072
007600650064002e0041007200690061006c002000200069007300200061
002000740072006100640065006d00610072006b0020006f006600200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e002ea9203230313220546865204d
6f6e6f7479706520436f72706f726174696f6e2e20416c6c205269676874
732052657365727665642e47504a5047422b417269616c2d426f6c644d54
47504a5047422b417269616c2d426f6c644d5447504a5047422b41726961
6c2d426f6c644d54417269616c20697320612074726164656d61726b206f
6620546865204d6f6e6f7479706520436f72706f726174696f6e2e00a900
20003200300031003200200054006800650020004d006f006e006f007400
790070006500200043006f00720070006f0072006100740069006f006e00
2e00200041006c006c002000520069006700680074007300200052006500
7300650072007600650064002e00470050004a005000470042002b004100
7200690061006c0052006500670075006c0061007200470050004a005000
470042002b0041007200690061006c002d0042006f006c0064004d005400
470050004a005000470042002b0041007200690061006c002d0042006f00
6c0064004d005400470050004a005000470042002b004100720069006100
6c002d0042006f006c0064004d00540041007200690061006c0020006900
7300200061002000740072006100640065006d00610072006b0020006f00
6600200054006800650020004d006f006e006f0074007900700065002000
43006f00720070006f0072006100740069006f006e002e00410c005403af
03af03af0235001d001f03ae03ad003c001f03adb3061d1f80410d03ac00
af03ac0002001003ac002003ac00a003ac0003004003acb3070d3240b803
acb312143240b803acb2162b32b9ffc003acb23a3340b803acb32d943280
bc03ab005f0033ffc003abb2553340b803abb340443240b803abb3333b32
40b803abb32f313240b803abb2083340b803abb30714321f411a03ab002f
03ab0002000f03ab002f03ab004f03ab008f03ab009f03ab00bf03ab0006
001003ab00df03ab00ff03ab000303a803a2b2461f40b803a5b208330f41
1403a50001004003a500cf03a500ff03a50003002003a500af03a500ef03
a500ff03a50004ffc003a3b3090c3240b803a3b208330f411b03a3000100
0f03a3001003a3008003a300af03a300cf03a30005006f03a3009f03a300
ff03a30003009f03a200af03a2000203a203a1b2101f10410a039e007f03
9e0002039a000f0101001fffc00398b310143240b80399b30f1332404110
039500500395000200b0034d00c0034d0002006f0391007f03910002ffc0
034bb22d3132b9ffc0034bb30a0e32104110038b0020038b0080038b0003
00a0038b00010020038b0040038b0002ffc0038bb313163240b80383b20f
1132b9ffc0037bb2303432b9ffc0037bb310183250411403780001036503
6e0023001f037e036e001e001f0363036e001d001f03620364000d001fff
c00340b30f1032804110033f0001033f03150029001f034103160032001f
0344031a001b001fffc00375b20e1132b9ffc00375b2282a32410a034303
180032001f030f030d0034001f03080307b2321f20bb0340000100400388
b3090b3240b80388b2101532bd038503070014001f03800307b2171f0fbd
030a002f030a0002ffc00354b3090d3290410c035400a003540002001f03
6e0001009f036e00010040036eb2090b3241110345031c0016001f036b03
1d0015001f0346031e0015001f03a703a10046001f039db3261c1fc0bb03
93000100400392b3090d3240b8033eb2083340b8033eb30d0e32c0410903
3e000100b0038e00c0038e0002ffc00390b3263832004126032800300328
00020020037f0030037f00020010038a0030038a0050038a006f038a007f
038a009f038a000600000389003003890002002f037a0070037700900377
009f037a0004ffc00315b20f1032b9ffc00315b2242832b903190318b232
1f10bb031a0001ffc0031ab3090e3240b80318b2121332b9ffc00318b30c
0e323fbd0373004f0373000200400374b31718326fbb032a00010040032c
b3181b3240b80370b2090c32bd031703160032001fffc00316b20e1132bd
031c031e0016001f031d031eb2151fb0411f031e0001000f031f000102ca
02d00015001f02d302d5000d001f02cf02d0000d001f02cb02d0000d001f
02cd02d0000d001f02ce02d0000d001fffc002d0b3090c3240b802d2b309
0c32e0411c02e50001005f02dd009f02e5000202bb02c30030001f02da02
b80032001f02d902b9003f001f02d802b80064001f02b902b80033001f02
bab221c81fb802b8b321c81f40b8039bb20d1632b9ffc002c3b22b2f32b9
ffc002c3b21f2532b9ffc002c3b2171b32b9ffc002c3b2121632412502c2
02c1001c001f02d702c10024001f02c102c00022001f02bf02c00018001f
02c0027400c8001f02b50235003b001f02b40235003b001f02c402bc001e
001f02b702b60038001f02b3b20ec81fb802b0b207c81fb802afb206c81f
b802aeb200c81fb802afb2502f1fbc02ae02ab001a001f02adb2261a1fb8
02a8b326241f0fbb0235000102a50274b21d1f12410a02a1015801f4001f
02a000d801f4001f001202a2b237c81fb80290b2bc201fb9029002904018
374025402d40a6033025302d30a6032025202d203720a6204110028e0005
009f028b0001028b028b003700200289003002890040028900900289b204
37b041fd027400c0027400020080027400a0027400020060027400700274
0002000002740010027400020080027400f002740002003f0285004f0285
00020090027e0090027f009002800090028100040090027a0090027b0090
027c0090027d000400900274009002750090027700030070027e0070027f
007002800070028100040070027a0070027b0070027c0070027d00040070
0274007002750070027700030060027e0060027f00600280006002810004
0060027a0060027b0060027c0060027d0004006002740060027500600277
00030050027e0050027f005002800050028100040050027a0050027b0050
027c0050027d000400500274005002750050027700030040027e0040027f
004002800040028100040040027a0040027b0040027c0040027d00040040
0274004002750040027700030030027e0030027f00300280003002810004
0030027a0030027b0030027c0030027d0004003002740030027500300277
00030020027e0020027f002002800020028100040020027a0020027b0020
027c0020027d000400200274002002750020027700030010027e0010027f
001002800010028100040010027a0010027b0010027c0010027d00040010
02740010027500100277000300e0027e00e0027f00e0028000e002810004
00e0027a00e0027b00e0027c00e0027d000400e0027400e0027500e00277
b103d041c5027e00d0027f00d0028000d00281000400d0027a00d0027b00
d0027c00d0027d000400d0027400d0027500d00277000300300274004002
74000200c0027e00c0027f00c0028000c00281000400c0027a00c0027b00
c0027c00c0027d000400c0027400c0027500c00277000300b0027e00b002
7f00b0028000b00281000400b0027a00b0027b00b0027c00b0027d000400
b0027400b0027500b00277000300a0027e00a0027f00a0028000a0028100
0400a0027a00a0027b00a0027c00a0027d000400a0027400a0027500a002
7700030090027e0090027f009002800090028100040090027a0090027b00
90027c0090027d000400900274009002750090027700030020027e002002
7f002002800020028100040020027a0020027b0020027c0020027d000400
20027400200275002002770003028101580801001f028001290801001f02
7f00ec0801001f027e00d80801001f027d00b10801001f027c00a6080100
1f027b00820801001f027a00370801001f027700260801001f0275002008
01001f0274001f0801b21f370f41160235004f0235005f0235006f023500
9f023500af023500bf0235000700af023500cf023500df023500ff023540
22040f074f079f07af07bf0705af07e007020f064f069f06af06bf0605af
06e0060220411b020d0001005f02350001008f02350001007f023500ef02
350002002f0235003f02350002003f0234004f0234000202350235023402
344011ed20ef2a01cf2a01bf2a01af2a018f2a01410902470104001e001f
022000370201001f0158400c263e1fd8263e1f3726273e1fb8028eb6ec17
1fb226361fb801bcb226361fb80129402b26361fec26361fb126361fa626
361f8226361f3726361f3226361f2d26361f2526361f1f26361f37262a1f
b801584022263e1fd8263e1fbc263e1f27263e1f21263e1f20263e1f3700
161600000012110840b9020d01a6b3c50d0009b801bcb227281fb801bbb2
27301fb801b8b2274f1fb801b7b227621f410901b600270101001f01b500
2002ab001f01afb21fe41fb801adb21fe41fb801acb21fbb1fb801a8b21f
341fb8015db2272e1fb8015bb227cd1f410d0155001f0401001f0154001f
0401001f0153001f0201001f0152b21f561fb80151b21f291fb8012bb227
261f410d012a00270125001f0129015800e4001f0125001f0401001f0124
b21fe41fb80123b21f3b1fb80122b21f391f410d010800270801001f0106
002d0101001f0105001f0101001f0103b31fbb1fefb901580401400b1fed
1f931fec1fe41feb1fb80201b21fd920b80401b21fcf25b80156400a1fbc
2d9e1fbb1f411fb2410a01580401001f00b101580401001f00b001580401
b51fa625891f9bb901580125b61f991f2e1f8e2db80801b51f8d1f291f89
b901580401b21f8220b802ab40131f801f301f742de41f731f4a1f611f52
1f5d25b802abb21f5c1fbc0801001f0059015802abb61f5025891f491fb8
0125b21f4725b80401400b1f461f791f401f271f3920bc02ab001f003801
580401b21f372dbc0125001f003201580125b61f2c1f341f2a25b80801b2
1f5537b80111402a07f00790075b0742073b07230722071e071d07140812
0810080e080c080a080808060804080208000814b8ffe0402b0000010014
061000000100060400000100041000000100100200000100020000000100
0002010802004a00b013034b024b5342014bb0c063004b6220b0f65323b8
010a515ab005234201b0124b004b5442b0382b4bb807ff52b0372b4bb007
505b58b101018e59b0382bb00288b801005458b801ffb101018e851bb012
4358b10100858d1bb900010119858d5959001816763f183f123e11394644
3e113946443e113946443e113946443e11394660443e11394660442b2b2b
2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d
59b0324b5358b0ff1d594bb08153205c58b9020f020d4544b9020e020d45
445958b90470020f455258b9020f04704459594bb0e453205c58b9002002
0e4544b90027020e45445958b908420020455258b9002008424459594bb8
012553205c58b90026020f4544b90021020f45445958b90a0d0026455258
b900260a0d4459594bb8040153205c58b1d8204544b1202045445958b925
0000d8455258b900d825004459594bb8040153205c58b9015800264544b1
262645445958b923200158455258b9015823204459594bb02953205c58b1
1f1f4544b12d1f45445958b9010d001f455258b9001f010d4459594bb02f
53205c58b11f1f4544b1251f45445958b90135001f455258b9001f013544
59594bb8030153205c58b11f1f4544b11f1f45445958b91428001f455258
b9001f14284459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b65422b01b331757ec3456523456023456560
234560b08b766818b080622020b17e754565234520b003266062636820b0
03266165b075236544b07e234420b131c34565234520b003266062636820
b003266165b0c3236544b0312344b100c3455458b1c3406544b231403145
23614459b33f3c5841456523456023456560234560b089766818b0806220
20b1583c4565234520b003266062636820b003266165b03c236544b05823
4420b13f414565234520b003266062636820b003266165b041236544b03f
2344b10041455458b141406544b23f403f452361445945695342014b5058
b108004259435c58b108004259b3020b0a124358601b2159421610703eb0
124358b93b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358
b92d412d411bba04000400000b2b59b00e2342b00f2342b0124358b9187e
3b211bba01a80400000b2b59b0102342b0112342002b2b2b2b2b2b2b2b00
b01243584bb035514bb021535a58b1262645b040614459592b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b737373737345b040614418004569444569
447373737473737374737473742b2b2b2b2b2b2b2b2b2b2b2b0073737373
737373737373737373737373737373737373747474747474747474747474
7474747474747474747575757374757575752b7300004bb02a534bb03651
5a58b1070745b040604459004bb02e534bb036515a58b1030345b0406044
b1090945b8ffc06044592b4569440174007373732b4569442b012b435c58
400a0006000702a006a00702b9ffc00274b31a1d326fbd0277007f027700
02ffc00277b22f3132b9ffc00277b322253240b80274b32f353240b80274
b3282a3240b80274b21a2132b8ffc0b3371a1d32b8ffc0b3251a1d32b8ff
c040112d1a1d329025902d9037a025a02da03706b8ffc0b6a61a1d321fa6
1fb8028eb22fa60300742b732b2b2b2b2b2b2b2b742b737459002b2b435c
58b9ffc002a1b21c1d32b9ffc002a0b21c1d322b2b592b73012b2b2b2b00
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b73742b2b
2b2b2b2b2b2b73732b2b2b2b2b2b732b732b2b2b742b2b2b73737373732b
73732b2b2b732b2b002b2b2b2b7374732b732b2b2b2b752b2b2b2b2b2b2b
2b752b2b2b2b2b732b2b2b2b7374752b2b7373732b2b2b732b737374752b
2b7374752b2b7374752b2b2b2b2b2b2b2b2b2b2b2b7475002b2b2b456944
2b00000000>
[8301 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 560 21 <000100330000040c05c0001d013f405fb518b61ab91bca04c718d018d019
d01a08431b431c431d56199b049518aa04a61c08061a20002806371a4804
43184319431a0824182419241a03162604560488189c1b9c1c9c1daa1caa
1d0812001d101d201d311d761d841d901dd61d081db8ffc040161415341d
02100c0f1d10002000022000300040000300b8ffc0b312163400b802a1b3
02010c0fb8015640231f0c2f0c020c401216340ca6130509d81616014f00
01001a1f0fd8107702191ed3c2182b4e10f44df4ed4e10f6713c3c4d10ed
003ffd2b71e43f3cfd2b5d713c1112390111332b5d435c58b9001dffc0b2
11391db8ffc0b20f391db8ffc0400e10390408103905081139040811392b
2b2b2b2b2b59b10602435458400b091b191b021b13010413000011123911
12395d593130015d4b5158bd001bffe0001cffe0001dffe0383838590171
5d5d5d011121361237363736353426232206072536243332161514060706
040607040cfc2710a0ecbe2b3a6559586808fee8190108c6d9f8474d33fe
f647160105fefb940109dbb13f57555e656a7b1ce8caeaae63b36241f450
2600>OQOAAA+Arial-BoldMT AddT42Char 
2 4702 56 <00010093ffe7052405ba0019008a40380708070907101708160947084709
07570956109610971198159b16a710b716d715e506f6060b0d0c0c010002
072513090c0b200dcf0e010eb8028b4022401b501b601b03701b801b0220
1b301ba01bc01b041b0102200020193019c0190319b8028bb31a3175182b
4e10f45d3c4dfd3c4d105d7172f65d3c4dfd3c003fed3f3c3c103c313001
5d71132111141716163332363635112111100e0223222626272635930128
0b138f7c7e801a01283081d8aed2d97e141d05bafce6bd385a6d6796ae03
2bfcfefef8da9659619b557ef600>OQOAAA+Arial-BoldMT AddT42Char 
2 0 0 <00020100000005000500000300070042b40201fe0607b8023f4013000504
fe03000a0704fe010019080605fe0203bc0126000901b0011800182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>OQOAAA+Arial-BoldMT AddT42Char 
OQOAAA+Arial-BoldMT /CharStrings get begin
/two 21 def
/U 56 def
end
OQOAAA+Arial-BoldMT /Encoding get
dup 50 /two put
dup 85 /U put
pop
end
%ADOEndSubsetFont
/XGDLXA+Arial-BoldMT /OQOAAA+Arial-BoldMT findfont ct_VMDictPut
/XGDLXA+Arial-BoldMT*1 
[50{/.notdef}rp /two 34{/.notdef}rp /U 170{/.notdef}rp]
XGDLXA+Arial-BoldMT nf
XGDLXA+Arial-BoldMT*1 [0 -9.7495 -9.7495 0 0 0 ]msf
69.4691 96.5955 mo
(U2)
[-7.03914 0 ]ysh
81.4091 98.095 mo
81.4091 110.095 li
91.1291 104.095 li
81.4091 98.095 li
cp
ef
.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
false sadj
81.4091 98.095 mo
81.4091 110.095 li
91.1291 104.095 li
81.4091 98.095 li
cp
@
1.5 lw
91.1291 98.815 mo
91.1291 110.095 li
@
.75 lw
75.4091 83.815 mo
95.6291 83.815 li
@
74.6291 77.095 mo
72.4091 77.095 li
@
97.1291 77.095 mo
99.4091 77.095 li
@
74.6291 77.095 mo
81.4091 83.815 li
@
72.4091 104.095 mo
81.4091 104.095 li
@
90.4091 104.095 mo
99.4091 104.095 li
@
90.4091 83.815 mo
97.1291 77.095 li
@
83.6291 95.095 mo
90.4091 88.315 li
@
88.1291 97.315 mo
94.9091 90.595 li
@
94.9091 92.815 mo
92.6291 90.595 li
94.9091 90.595 li
94.9091 92.815 li
cp
ef
94.9091 92.815 mo
92.6291 90.595 li
94.9091 90.595 li
94.9091 92.815 li
cp
@
90.4091 90.595 mo
88.1291 88.315 li
90.4091 88.315 li
90.4091 90.595 li
cp
ef
90.4091 90.595 mo
88.1291 88.315 li
90.4091 88.315 li
90.4091 90.595 li
cp
@
97.1291 79.315 mo
94.9091 77.095 li
97.1291 77.095 li
97.1291 79.315 li
cp
ef
97.1291 79.315 mo
94.9091 77.095 li
97.1291 77.095 li
97.1291 79.315 li
cp
@
72.4091 104.095 mo
72.4091 110.815 li
@
72.4091 77.095 mo
72.4091 70.315 li
@
99.4091 77.095 mo
99.4091 70.315 li
@
99.4091 104.095 mo
99.4091 110.815 li
@
%ADOBeginSubsetFont: CourierNewPSMT Initial
ct_T42Dict begin
-0.121 -0.68 0.621 1.02
 256 array 0 1 255 {1 index exch /.notdef put} for  /CourierNewPSMT
Type42DictBegin
[<00010000000c000c000c000c4f532f320f2d5aa1000000cc000000606376
7420aa0e65140000012c0000078c6670676d379d41d9000008b80000063f
676c7966afba7d24000074e80009c53868656164dad08a2200000ef80000
0036686865610aae023c00000f3000000024686d74787741584e00000f54
00001b0a6c6f63614288513400002a600000360c6d6178701225099e0000
606c000000206e616d656a0699770000608c0000099770726570afc0175c
00006a2400000ac367646972000000000000000000000000000304cd0190
00050008059a05330000011d059a05330000036100660212050502070309
020205020404e0002affc00078430000000900000000544d432000400020
fffc04e7fe7e000006a90267400001ffffff000003620492000000200014
04e700000492001b04e7001e0362001e0000ffdf0000ffdf0000ffe2fe7e
000004e70000fefdffff02d7000000540000005400000000000000000054
00540095005400540054014d005400540054006400d4006d009100970054
013301ce00a90040000f005400d4000301000158003c0093007700d50055
fff10054002100a300ef002c00390068fffe0011007f00fe017d00a30102
0002000f003800d300650090023c032b04eb0001002a013003ab0182002d
003c00540096001700cf0158002aff0a003c00b3021d023c0002005400cb
035f082cff30fff201c004c9ff6200a2013c02d604ae00cc00ed01220400
fe83ff8bff9bff9c000e00f4031dfdc3ff31ff6d0054005500600075007c
007f0080009e00cd0159023d02bfff89001100580065007f00b700cb012b
040004600012005200550084009800b900be00cf00d800e50101010f0128
018001d301d40500fdc4fec4ff49ff62ff6f0045004e00500080010f011d
01250141025a035a03ad03d7fde3fee0ff1e0011005400760078007b008f
009000ab00d700d900db0103020a0254025503ad001b003d005a00620091
0093009e00a900c900df01080134013a0140018601ac02760403fdc40003
0004001500390048005400640091009b00a300a500af00c400d000d100d7
00f100fe01030119012b0155015c017d0185018e019401a501ac01ae01eb
020502d80303038104c604ebfed6ff0aff9affa9001b001b001c00200029
002c0038004c006d00cd00ea0128012a012c013f01d2022b022c0301040c
fdfefe33ff47ff7fffc5ffd7002300270038003d00440045004d00570062
0079008300bb00c600cd00cd00ce00e600f701010103010a0112011d0120
012301520153017501ac01ad01ef01fd0216021d0238026c02b202d4032b
03cd045704aefdb4fe15feb2feeffeffffabffb0ffc3ffcc000200540036
003800430055005d00700073007c007f00b500bb00c500e400e900f50101
0106011f01280148014b0155019801ac01df01fc02000208027e02ac02ff
033d039003c904190498fe4efe6dfe98feb3ff34ff4d0001000300050019
00340034003a003c0055005900730082009100a300aa00ab00b300cc00d6
00ee0118011e013001490156015801600168016f01700171017b017c0185
01a901b401bb01d601db01ee020402060215022b022b02630282029302b4
02c402d602e40300035303580371037b039303b403d003e80410042c0430
044d04600479047a05000503061608ccfc17fc6dfd62fd9afdc3fe2efe44
fe6bfe8bfec1fed6fee2ff0bffbfffe500060030003c005900670073007d
007f0086008e009f00a900aa00d600e100e700eb00f100f200f501030109
011a011e011f012c013f01430149014d015601570159016601660168016a
0175018001ab01b201bc01c001c101c901cb01d201dc01ef02010215022e
022e023b023d025502660282029a02ab02b002d902d902f502f90326032c
03320333033e03600371038703880393039703dc03e50402041504310453
047f04c7050305640596059b05c405c805ea0610065b0054005400540054
00000000000000000000000003cc02c1043e036c00a00050020303ea02d2
023c017d02fb01a7021d01c102f5021d035003500243023b000201bb0048
006d0014079b06210621021400100760000000000299022d03570426030c
007400500000025a0286026000a601bc00fb02480152017603cd02a0025f
039b0492043e01d7007f02c10400020d01f600410041013e01a901d30071
02d6022d03af04ce00000000050803fc056d020dff8704e7050203d20000
043d010203ca015a01ed0150021601c1013b028e0023015a011001ed0023
0149003900d9004d00b90157003804e0038c024a02db0039006c009301c1
03cc02bb006c02bb01a200f2003800fe01720150019c0331007e01710054
0039006a0294002202700222007c005500f30182011500d700fb01ab0124
02660004030d026300d40259003c00d00112022e017e0034006d008b018a
002c01fd01c000cc02910036016503befc19fd280201fced01b1034800b1
01fb04c904c9020400fb01c1021d01300108014000e100a3009b005500c6
0021032600a900380005022c0003005d0060004c001102f5017c026c0069
019803e901a50241004f0065037302460196fef504410333004100ba0119
014306390800053c051d0434041504e7003e006700670000066804df0582
0067006703d303f4ff59ff21fe5f050efedc007a00d9004800db018b00b3
004800da0116015e015104ff024b04ffff5600ab02af04dcff17010c0121
00d1ff300149feb5013c0124ff200171ff0b01510086005e06a9fd99048b
04850475047c0000fffb007b00860092009a00c200d500a4001e00270039
004c0054005c00620069002d0030003200350038003e004200440049004c
00500056005a006000640066006e00710078009d00ac00b10040004b0055
005e00620066006a007100730077007b007e00820087008c0091009600a6
00d102aa029f0321028802c50276026900da00da03c70340015600d40489
047f005300240051011300690037003c001f008c008cffd3005a0029001b
010f0134007f00540054ffebffd6ffa8fdcf00a600a600920092064200eb
06430028004f01f6041a010540425554403f3e3d3c3b3a39383735343332
31302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a191817161514
131211100f0e0d0c0b0a090807060504030201002c4523466020b02660b0
04262348482d2c452346236120b02661b004262348482d2c45234660b020
6120b04660b004262348482d2c4523462361b0206020b02661b02061b004
262348482d2c45234660b0406120b06660b004262348482d2c4523462361
b0406020b02661b04061b004262348482d2c0110203c003c2d2c20452320
b0cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920
b09051582320b00d44235921212d2c20204518684420b001602045b04676
688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0
172370b101173e01b0172370b10217453ab10200080d2d2c45b01a234445
b01923442d2c2045b00325456164b050515845441b2121592d2cb0014363
2362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d
2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b003
61592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb0
1243588745b0112bb0172344b0177ae41b038a45186920b01723448a8a87
20b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2cb0
022546608a46b040618c482d2c4b53205c58b002855958b00185592d2c20
b0032545b019234445b01a23444565234520b00325606a20b00923422368
8a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b0
3f1b235961441cb114008a5279b31940201945208a54582321b03f1b2359
61442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d
2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d
2c4b525845441b2121592d2c0120b003252349b04060b0206320b0005258
23b002253823b002256538008a63381b212121212159012d2c4bb0645158
4569b00943608a103a1b212121592d2c01b005251023208af500b0016023
edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500ed
ec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2cb02b2b
b02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802692370
1020b802694520b0005058b00161593a2f182d2c21210c6423648bb84000
622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c21
b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c6423648b
b84000626023212d2cb4000100000015b00826b00826b00826b008260f10
161345683ab001162d2cb4000100000015b00826b00826b00826b008260f
1016134568653ab001162d2c4b53234b515a5820458a60441b2121592d2c
4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b54
58381b2121592d2cb0134358031b02592d2cb0134358021b03592d2c4b54
b012435c5a58381b2121592d2cb012435c580cb00425b00425060c642364
6164b807085158b00425b00425012046b01060482046b0106048590a2121
1b2121592d2cb012435c580cb00425b00425060c6423646164b807085158
b00425b00425012046b8fff060482046b8fff06048590a21211b2121592d
2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121
592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426
024b545a8a8a0ab012435c5a58381b2121592d2c462346608a8a46232046
8a608a61b8ff8062232010238ab9032603268a70456020b0005058b00161
b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b1400188
535a58b910000020885458b202010243604259b12401885158b920000040
885458b2020202436042b12401885458b2022002436042004b014b5258b2
020802436042591bb940000080885458b202040243604259b94000008063
b80100885458b202080243604259b94000010063b80200885458b2021002
43604259b12601885158b94000020063b80400885458b202400243604259
b94000040063b80800885458b202800243604259b12801885158b9400008
0063b81000885458ba000201000002436042595959595959592d2cb00243
54584b53234b515a58381b2121591b21212121592d00000100000006cf5c
226bc4af5f0f3cf50809080000000000a325516100000000cc8721abff07
fa9004fb082b0000000900010001000000000001000006a9fd99000004cd
ff07ffd204fb00010000000000000000000000000000000304cd00670000
000004cd0000000001eb010a00bb00e400bb00fe01e1025d012d00e20090
012b00ba01cd00e600e500e400ab00c300d600c4011200d300e7011301cd
0138006200650094011300d700110057007f009e0058009f0080006b00e5
00ab005900800018002e006800b30068005800b9008f0053001000250050
006300d5023d00e3013c00e4000001bc0090002d00ab007e008000d7007d
005500bd00b400bf00bb0015006c0091002d008000ab00cf0092005b003b
00380065009500ed0195023c019400bb00110011007f0058002e00680053
00900090009000900090009000ab008000800080008000ba00ba00ba00ba
006c00910091009100910091005b005b005b005b00fc015100e4007c008f
016f00ab005900000000000401bb013f006500120050006d009000620094
0062005a00b0002b003600a700e101280126003d0010007000e601eb0018
008900b100bb00530063007f0065001100110068001100120091fff100b3
00db01fd01250090009b0095006300670007006b0254000e001300fb01cd
012b00e0003d0011005800110058005800e500e500e500e5006800680068
00530053005300ba013c0128013c013a020001b101ba013b01d4013c0056
00bb00b900cf00d500ed023cfffd00810063009500b3002d0090010e0176
01550163000000000000009f0080007d00e500b900cf007f00ab007f00ab
007effe502c40011009000110090009e007efffd00580080005800800080
00bb008000bb008000bb002e006c002e006c00680091005800ab005800ab
00b900cf008f0092008f00920053005b0053005b00d500ed00d500ed007f
0067005a006200b5011b009800d0007bffe50112011b000e0002017d0002
017d0002017d017d000200a9006500990090021d01000000021d021d0000
021d0000021d00000000000000000000017d021d017d017d000000000000
021d017d017d000000000000021d017d017d000000000000000000000000
000000000000000000000000000000000000000002670000000000000002
0002000f0002000f000200ae007c0026000300030002014100b800800002
006c009f010f005a0009001300000201012500bb014100020169016900ae
016f00110090007f00ab007f00ab0058008000580080005800800080007d
0080007d0080007d006b0055006b003e00e500bb00e500bb00e500bb00e5
00bd00ab00b4005900bf0092008000bb002e006c0080006c006800910068
0091005800ab00b900cf008f007a0053005b0053005b0053005b0053005b
002500380063009500d700110090001200100050007001cd002500380025
0038002500380063009501fd013c0088005a000c0011000b001b020801d4
01bb01080040fffc00130041fff6002affd400f2001100570065005800d5
006b00e50059000f0018002e00930068006400b300c4008f00630050001d
003c00e500630062011b008b01bb0057010400460156008b00b3020f009e
00410054004a0145009100ca00cf00570099004500750128005700910057
007500580011007f007f00b900e500e500ab0023000000110077002c0064
001100570057007f004a0058fffb007200280028007700230018006b0068
006400b3007f008f002c0063005000590029000400040002000200570081
0016000f00900080007b0098005a008000140090003a003a00780033001f
006b0091006b002d00ab00a6003c00770065004d004600210021004b0018
00a60082002400830080008e009800ab00cf00bd00ba00b40033ffee003e
0078003c006b007f0098002b003100680225014a01490149022401b701b7
019801980224014b0224023600b50198023c038b00b901cc00d0009e0115
00a300a001770149009200680173009500b400c0006d00850176011c004f
00c000f200fa00de00a200c500ac00cc00a0007a0085008501bf00f7005b
00e8009500950000000000c000cc00b900cc00b900d000d000d0009e0115
00a300a00165013800680173009500b400c00085011c004f00f200fa00a2
00c500ac00cc00a00177009e00b400fa00ac0243018c0160012401c701c7
00fb0201000001dc019701dc01dc01a301dc01ca01db01d90164013f00f4
017f01540137010801070127009601c700e6024a01d101f3010d01270111
01450000000000000000000001ca02030201020301a201a401ab016d0152
0000019c016201600025002500000000000b0006000000000110009e0000
0000009000650003000300000000000a000a0000000000aa007000f00097
00f000f0009e009e00bf00bf00bf013f0090009000f0009700f000970183
01d501c701a801ca0000001d002b002b0000001d002b002b002b002b0000
001d00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000019c019c025d012d000000140201010a00cb0197
019700c400c001bc01f800aa007000000000020001f80025002500000000
01c80184002500250000000000250025000000000110009e000000000110
009e000000000110009e00000000019e0151019e01510090006500900065
000600060000000000060006000000000000000000000000000000000000
0000000c000a00000000000c000a00000000011a011c00000000011a011c
00000000000b00060000000000a600d60000000000b40038000000000108
00710000000001b201b20000000000fe008e0000000001f3018400000000
00c400c000aa007000aa00760000000000670099008200a1009c00d7009c
00d7021901d101dc01dc0061004c019c01db01ca010d024a01a30197005d
0020000501c701ca01ca01d501a8018301db01b201b2009c009c01ea01f5
01f50075006b01b501f401e30126026301bc01b0007f0041002601e001e3
01e301ee01c1019c01c7019e019e00d700d700c300ce00cd016a0174008e
00cd00bc0000013c00950089017f011100ee00b900bc00bc00c7009a0075
0186015d015d01be01be01bc019a01df00000025002500000000000b0006
0000000000f00097009e0000001d002b0000000001470147015800f300da
01f801f800ce0000006800910053005b01c10199019801c401cb01c001bb
01c501ab01b9012b01240118015e0144037d00c800000000019f01bd01a5
01c301b701b7012b012b012b01280128012801ff01ff01ff01ff01ff01c4
01a8012801ff01ff01ff01ff01ff01ff01ff01ff01ff01ff0142012b0142
012b00110090001100900011009000110090001100900011009000110090
001100900011009000110090001100900011009000580080005800800058
0080005800800058008000580080005800800058008000e500ba00e500bd
006800910068009100680091006800910068009100680091006800910068
0091006800910068009100680091006800910053005b0053005b0053005b
0053005b0053005b0053005b0053005b0063009500630095006300950011
009000e500ba006800910053005b0053005b0053005b0053005b0053005b
012f011400f50114007f0098fffb00140077007800770078006b006b0062
0095006200950050006500290046006b0055004200800068009101f4018c
015b014801bf01bf0148014801480177020001f800c400c000c400c000aa
007000250025000000000025002500000000002500250000000000250025
000000000025002500000000002500250000000000250025000000000110
009e000000000110009e000000000110009e000000000110009e00000000
0110009e000000000110009e00000000019e0151019e0151019e0151019e
0151019e0151019e0151019e015101970151019b01510090006500900065
009000650090006500900065009000650090006500900065000600060000
000000060006000000000006000600000000000000000000000000000000
00000000000c000a00000000011a011c00000000000b000600000000000b
000600000000000b000600000000000b000600000000000b000600000000
00a600d600a600d600a600d60005000500000000000300030000000000b4
00380000000000b400380000000000b4003800000000000a000a00000000
000a000a00000000000a000a00000000000a000a00000000000a000a0000
000001080071000000000108007100000000010800710000000001080071
0000000000fe008e0000000000fe008e0000000000fe008e0000000000fe
008e0000000000fe008e000000000110009e0000000001f3018401b101f3
0000000001b101f301b101c800c400c000c400c000c400c000c400c000c4
00c000c400c000c400c000c400c0000f001d00aa00700000000000c400c0
00aa00760000000000aa0076005a005a005a005a01d101f300e70158016d
01c001a0020a01730014000a021b021c016b01c0017301cc0174017401ad
003101be01be021b01c000060006000000000000000000000000011a011c
00000000020101b20003000300030018009c00b7009c00d7009c00d7009c
00d7009c00d7009c00d70173013a016900850212021b0076008e00f9010d
005700570097007f007f0015002e001200250051008f0004008f00b3002d
00160057002d0057002d007f007f00abfffd00160057008000b500580072
00000080003b001500e500e3005900bf00bb004100150000006c0068003c
00910016002d00b300b900cf00c401560092005d0092008f003c0053003d
000000d500ed00a100a100a100db00ab00c400900092002d023c01e70065
01eb00080008000a00120008001100070007000a008000110090012f0011
0090001200100080007d0080007d005900bf006800910068009100a1008c
00b400080008000a0080007d000a002d002e006c00110090001100900058
00800058008000e500ba00e500ba0068009100680091005800ab005800ab
0053005b0053005b00b900cf008f009200ab00ab006b0055006b008600e7
00d500ed0011009000580080006800910128006800910068009100680091
006300950068007e002a002d00ab006a007e007e0080004e009000900068
00870087007d007d00ab00a4009100550067006700bd020f00e500bb00bb
011200110015001500150000006c003a0091004e00750091007300730073
00ab00db00dc00ab008e008e00cf00b100b100b100d100920092005b00b8
0057003b00380041009200ed00a7008c00ad00aa00b400aa00ab0068007b
008700ab006b00b9006e0098008000aa00b4000a000a000a000a0062000a
000a000a000a00a900ed01120112016d012d012a012a012d00e8010d0201
010701fd012501fd020e020e013b014000620094007a007a023601bb01bc
0236013c01bc01bc01ff01ff020e020e019801980198013c01a0010e0133
014d015901350140013c013c00db013c013cffe5013a0200013f01b1013b
013c023601d5013b013a013a01fd01250125031901bc01bc01980198013c
01e7020e019801980198013c00b100b1013f01b1020801ba01d40236013c
0121013c013c013a013a0128013c0000013c0128013c000000a700e6020e
013c01aa011e01c30200ffe501bc01bb0128012501080236013c006501d5
0198012801280128016a01b7000000000000002701280130015001260117
01390103011200d1012d013b00f5013501bb01bc023600b30047006d0000
006d0091003200bc00680091008c00cf009f009f0040008b008c00f00015
001500ab00ab006b007500b900b9008800c3008000ab008100e700bc0080
00ab00b4006800ab00f9005800280080003a00140096002100390000000c
0011001300000005002900500000000500790097001d004500680091001a
003b001a003b001e001f0040005f0014001400a700140096007f00b400b4
0159013c020d020d000100010028003a0057006600b3002d002500340072
0090007700780017002400110011000a000700570051007f00ab008f00a6
000c000c002900460005000f0005000f00e5fffb00140077007800230033
006b006b006b006b002900460018001f013a001100900011009000120010
0058008000420080fffb00140072009000c3008c0028003a0028003a0068
00910068009100810082002c0095002c0095002c00950029004600020018
0074007e0010001e0007000a0051005a000a0008000a0014008000ab008f
00a601ab014b01dc022501b801a501d8013d01a501e401a501a5034900e2
00140156017e019801e401a500e101e301a5015601ab01e4019801a50000
01f00224012f012f0128012801dd017b012f001100900057002d0057002d
0057002d007f00ab009e007e009e007e009e007e009e007e009e007e0058
008000580080005800800058008000580080009f00d70080007d006b0055
006b0055006b0055006b0055006b005500e500bd00e500ba005900bf0059
00bf005900bf008000bb008000bb008000bb008000bb0018001500180015
00180015002e006c002e006c002e006c002e006c00680091006800910068
00910068009100b3002d00b3002d005800ab005800ab005800ab005800ab
00b900cf00b900cf00b900cf00b900cf00b900cf008f0092008f0092008f
0092008f00920053005b0053005b0053005b0053005b0053005b0010003b
0010003b002500380025003800500065005000650063009500d500ed00d5
00ed00d500ed0055009200380095009000d7006200620062006200620062
00620062000000000000000000000000ff1bff1b011b011b011b011b011b
011b000000000000000000000000008b008b008b008b008b008b008b008b
000000000000000000000000ff1bff1b020d01e501a0019601a00196010a
010000000000000000000000000000010001009100910091009100910091
00000000ff9cff9cffc4ffc4005700570057005700570057005700570000
ff74ff74ff1b007500750075007500750075007500750000ffecff56ff56
ff7eff7eff1bff0700620062011b011b008b008b018001ab009100910057
005700750075006200620062006200620062006200620000000000000000
00000000ff1bff1b008b008b008b008b008b008b008b008b000000000000
000000000000ff1bff1b007500750075007500750075007500750000ffec
ff56ff56ff7eff7eff1bff07006200620062006200620062006200110011
000200020011020d0236020d01280128008b008b008b008b008b00020002
00020002006b01be01be012801120114011b011b0100010000e500e50002
000201be01be0128005700570057005700ca00ca00570057006300630002
00020000010801080228007500750075007500750002000200020002003c
0228020d0099006b000000000000000000bd00b400260112003a00e60021
002101a201a201e401e401b101bc013b013b012801cd01e901e901e901e9
013c013c014901e4020e013a01bd01e401e40118020e00000000000000b3
002d003b002b002500cf00ab00cf00cf00cf009000b70101009e00cf001f
003a00910082009100ab0065002301240091009100a60083008300a60056
0099001800aa003b003800ed009000b000910098003b006b00a6001d0033
00e100d601110111011601170117010801070166011400fb011700d400f1
00e70112014b014c01360123010b00dd01280128010300d200fe01030130
01350131013101030150012800d1013b0126013c0126012600fe013b0117
014c00d700f50136015900fd01480120012a0150012d011700f5015900fd
01310120012a000000000000000000000320011a018601920179013b015d
024a01be021a015b019e0151009000650000000000000000003a000d000a
001e002a001d0016001e009000df00b20103002b00b3003f000000000000
000000140000007f0018001f000b004700470011007f00ab0080008f00cf
00ed0078038b01a2011b01a000000023007f007f007f007f009801ab00b9
02240177019800dc019a01e201bf01bf01cd01be01da012a002500250000
000000250025000000000025002500000000002500250000000000250025
00000000002500250000000000250025000000000110009e000000000110
009e00000000019e0151019e0151009000650006000600000000011a011c
00000000011a011c00000000011a011c00000000000b000600000000000b
000600000000000300030000000000030003000000000003000300000000
01b201b20000000001b201b20000000000fe008e0000000000fe008e0000
000000fe008e000000000108007100000000009000650090006500060006
000000000000004500be0000003c0000009b005f0059005700ed004e0119
00b5000000e300e4002d00560036002d007e00d7000f00bf00bb0015006c
002d00ab00cf00b1003b006500ed005a002a007e003f00380090000700bd
00ab00b10000008c01030139010f01240131016401640103011e01500230
0175017501620173013c00df00c400d100d5011e0114012601140154014e
013b011701480113011100f5017101710171013401430126012601ec013c
01cd01280130012601350135008000100058007f00ba0062006200620062
00620062006200620114011401140114010c010c010c010c005700570057
0057005700570057005701050105010c010c0057005700570057009c00d7
00bd00b0002a0053000f0058008000ab00b400540080000f00ab00630095
00ab00ab00ab00bb007f0098005000650050006500720090002300330157
01570157015700c100c1019e01e40118000000cf00ab007400bb00700088
005800900092006b0055005900bf00d500ed0078006b006b007b01c601e0
016b013c013c013c0080002e0080017f0176015501630178016801800178
0178018001250068008000250038007500e20068003b0005001a01cd012d
01e101e1017d017d01eb01eb01eb013c001401c701b601b80178016601ad
01ba01ba009000e40079007900090030000f021401f801cc01f501e901d2
01d501d101d101da01e601db01d601d901db01b5021201ff01fa0110009e
000000000110009e000000000006000600000000009000650110009e0000
000001140102010100ef00aa00700000000000aa00700000000000aa0070
0000000000c400c000c400c0002f005a002f005a0110009e000000000006
000600000000000600060000000000b400380000000000470016003e0017
0150004d002c002a00450155018401f701c401f700aa0076000000000003
000300000000000300030000000000aa00700000000000aa007000000000
00aa007000000000019800b1005f008f00a00052003a00590113000000b7
0064000b0009001d000e000b000e0059009e000f00070008000b0064006b
006b005500d700d700b50031007500e200e20032000400180011001f0012
00730091012a016d00f500b900d500000000000001bb01a001dc00000197
016701dc01dc000001a3000001dc000001ca000001db000001f901910191
0191018c01e801f401e90170017000a80000000000000000006e0000006e
0000006e0000006e00000122000001ca000003f2000006460000084c0000
09fe00000a5200000b0000000bae00000d6c00000e2800000e8800000ebc
00000f0800000fb4000011f600001300000014b2000016600000179a0000
18f800001b3000001bf800001e1000001ff80000207e0000212a000021f0
000022800000234a00002496000026c00000290400002b0000002c800000
2e1000002fb60000313a0000330c00003580000036b80000381e00003b3c
00003c0c00003ee2000040d00000432c000044a400004722000049620000
4b0000004bf800004da200004fa00000532c000056200000584c000059be
00005a4200005aca00005b4400005c0c00005c4c00005ca800005ea40000
6042000061b00000630c0000644a000065a6000067560000696400006a3e
00006b3c00006e8e00006f3a0000722000007442000075de0000779a0000
796e00007b0000007db000007ef80000807c000082680000863000008986
00008bf800008d3000008e5c00008eb20000901c00009108000091520000
91a8000091d60000920c0000924e00009282000092be000092f00000932a
00009368000093a8000093e80000943800009468000094a0000094d40000
9504000095360000956600009594000095c4000095f4000096320000966a
000096a0000096d0000097080000974400009776000097a6000097d60000
9808000098bc0000995400009ac000009c6a00009e4a00009eaa0000a04a
0000a1fc0000a44c0000a6260000a8c60000a9260000a9a60000aad80000
adcc0000afaa0000b0f60000b2060000b31e0000b4380000b6ea0000b7e2
0000b8ba0000b9d00000baca0000bc220000bd7c0000be9c0000bfa80000
c1100000c3b00000c5380000c6700000c7240000c7980000c83a0000c958
0000cb3a0000cbfe0000cd720000ceb40000cf880000cfc20000d0040000
d0340000d1d00000d4380000d4860000d4d40000d55e0000d5e80000d64e
0000d6b40000d79a0000d8420000d87c0000d8b00000d8fc0000dac20000
db480000dbce0000ddaa0000df680000e07a0000e0cc0000e11e0000e1b2
0000e4340000e4860000e4c60000e4fa0000e5400000e5740000e5aa0000
e5dc0000e6140000e6520000e6820000e6b20000e6ec0000e7200000e756
0000e79e0000e84e0000e8ee0000e9b80000ea0a0000ea800000eacc0000
eb6a0000ec3e0000ed300000edde0000ee840000f0760000f1fa0000f234
0000f26a0000f2a00000f2de0000f3ce0000f5780000f7400000f7740000
f7a80000f93a0000fa800000fafe0000fc540000fd4e0000fe960000ffb0
0001016a000103ba0001060c0001076000010794000107ca000107fc0001
082c0001085a0001088e000108c0000108f60001092a00010b2200010b72
00010bbc00010bf600010c3200010c8600010cd800010d1800010ec00001
0ed000010f2400010fa800010fe8000110180001104a0001107c000110b4
000110f60001112e000111680001119c000111d200011216000112500001
1284000112be000112f0000113200001136200011392000113c6000113f8
0001141c0001144000011472000116160001165800011692000116c60001
170000011730000117680001179c000117d2000118cc00011a7600011c24
00011da200011ed60001204200012120000121c600012342000123c80001
24040001256000012836000128da0001298e00012a3000012ad200012bba
00012c9c00012da200012df000012e9400012f6200012fde000130460001
30ae0001311e0001314800013178000131b0000131e80001322000013258
0001329e000132e6000133280001336c000133cc00013412000134660001
34b8000135100001357c000135ce0001362600013692000136e40001373e
000137aa000137fe00013856000138c2000139220001398c00013a140001
3a7600013ae000013b6c00013bd000013c3200013cb600013d1400013d78
00013dfc00013e8e00013f2800013fe800014014000140400001406e0001
409c000140cc0001451e00014daa000155ec000156160001564e00015692
000156ce0001571c0001575800015832000158a00001598600015ae20001
5be400015d8c00015ea40001605600016186000162e6000163920001640c
000164ce00016566000167ce000169bc000169e800016a3e00016a720001
6c2600016d3600016d6000016d7c00016dea00016e2200016e9c00016ed0
00016f0400016f4200016f7c00016fb000016fe4000170160001704e0001
7096000170ca000171020001713600017178000171ac000171e20001721a
000172440001727a000172ba000174b8000177580001796a0001799c0001
79d000017a0600017a3a00017a7000017aa000017c1200017d6800017da2
00017ea600017ed000017ef400018096000180ba000180de000181020001
81320001829c000184480001847a000184ae000184e00001851000018534
000185580001858e000185c200018760000188de000189140001894a0001
897c000189b0000189e000018a1000018bf800018db800018df000018e26
00018e6200018e9200018fc0000190120001906800019098000190c60001
90f600019124000191340001916c000191a4000191d40001920200019236
00019268000192a0000192d6000192e6000192f6000194800001955a0001
97d600019ab400019d4e00019fa40001a02e0001a0c20001a0d20001a1a2
0001a4060001a62c0001a8b40001a9e20001ab240001ad0e0001aed80001
af0e0001af1e0001af2e0001afe20001aff20001b0020001b0120001b022
0001b0320001b1ee0001b1fe0001b20e0001b3d60001b3e60001b5780001
b5880001b6c00001b6d00001b6e00001b6f00001b9160001baac0001bae4
0001bb220001bb500001bb840001bbb80001bbec0001bc2e0001bd4e0001
be720001bf740001c0e60001c2040001c2740001c49c0001c64c0001c7a0
0001c8900001ca320001ca420001cb060001cc260001cd780001cf500001
d0860001d1c00001d2020001d2440001d2780001d2a60001d2e00001d330
0001d4ba0001d4ec0001d6420001d6520001d6620001d6a40001d6b40001
d84a0001dac00001dca80001dce80001dd380001def00001df000001e026
0001e0360001e14c0001e2860001e2960001e6aa0001e8300001e9f60001
ea3c0001ec680001edd00001ede00001edf00001ee000001ef920001efa2
0001efb20001efc20001f19e0001f3560001f3660001f4dc0001f69e0001
f9bc0001fcc00001fde80002002e000201620002019400020368000203a8
000203b8000204de00020628000207380002088c0002089c00020c180002
0d6a00020f4200020f8400021192000212f2000215680002177400021784
0002190a0002191a0002192a00021a0000021bd600021d8600021d960002
1f2c0002210400022364000225bc000226ec0002291800022a5200022a86
00022c6800022e3600022e680002305800023088000231ac000231bc0002
31cc0002320600023216000233a20002360c000237fc0002383600023874
00023a0c00023af800023be200023c1600023e9400024054000240b40002
41b6000242540002430a00024348000243bc00024466000244aa0002450a
00024554000245e4000246280002466e000246aa000246fa000247420002
477a000247b2000248280002499400024a0c00024ae600024b5200024bd6
00024c2800024ca000024d2c00024e0800024e5400024ed200024f680002
5056000250ee000251e20002524a000252a60002536200025426000254d6
0002559c000256600002577600025858000258b8000259a000025a320002
5ac800025b5c00025bf200025c3e00025cd000025dc200025e3a00025e80
00025ec800025f0e00025f9a0002605600026086000260b6000260e60002
61160002613a0002615e0002631400026340000263700002639e000263c2
000263f60002643000026556000265d0000266020002662a000266860002
66aa000266d8000267d6000268d6000269cc00026b4200026c8e00026cb8
00026dd400026e0600026e2a00026e5800026e8600026eb800026ffc0002
70380002718400027246000272fa00027392000274720002758000027662
0002769000027752000278f4000279360002799e00027a9200027aba0002
7bba00027c9000027d1000027d8e00027e6c00027f94000280aa00028150
0002820a000282c200028366000284300002850a00028590000286740002
86d400028804000288d40002896600028a8400028b8600028c8800028ca0
00028cd400028cfa0002904a000290aa0002914600029166000292f80002
94ea000296960002988a00029a7200029ad000029da800029db800029e98
00029ed600029f0c00029f3200029f4800029f7c00029f9200029fe60002
a0400002a0960002a0e80002a1440002a3740002a38a0002a3b00002a3e4
0002a4200002a5620002a6bc0002a7ea0002a9100002aaa00002ac580002
adae0002af220002b02a0002b14a0002b1620002b19a0002b1d40002b202
0002b2440002b2a80002b2ec0002b4640002b4bc0002b63c0002b7740002
b7b00002b7dc0002b8100002b8420002b8840002bb220002bcee0002be4e
0002c0380002c1920002c1b80002c1f00002c2200002c4580002c4840002
c4ea0002c5440002c7d00002c7fa0002ca380002ca900002cacc0002caec
0002cb040002cb440002cb680002cba00002cbee0002cc340002cc940002
ccf40002cd240002cd680002cda20002cefa0002cf320002d0c20002d0da
0002d1fc0002d2280002d2e20002d4ee0002d5140002d6260002d6700002
d7420002d7760002d7a20002d7e60002d8160002d9e40002da6c0002dac4
0002db380002db640002dbba0002dbf00002dc320002dcac0002dd2c0002
de8e0002e1e00002e1f00002e22a0002e2720002e2a20002e2ce0002e314
0002e35a0002e3a40002e3e40002e4160002e4360002e46c0002e4ae0002
e5220002e5b80002e5d00002e5e80002e6000002e6180002e6660002e6b0
0002e6d80002e70c0002e7480002e7860002e7aa0002e7da0002e81e0002
e8520002e8ac0002e9000002e9180002e9300002ea2a0002ebaa0002ec7e
0002edb60002ede40002ee120002ee2a0002ee520002ef060002efac0002
efe00002f00a0002f0ba0002f19c0002f1ca0002f1ee0002f3820002f502
0002f6480002f79c0002f7cc0002f7fc0002f8300002f8640002f99e0002
fb240002fc260002fd6c0002fd9c0002fdd40002fe000002fe2c0002ff1c
0003003c0003012a0003024a00030294000302dc0003031c0003035e0003
04ae00030606000306f80003080e0003083c00030880000308b6000308f2
0003092a00030966000309a8000309ee00030b6a00030d1400030d680003
0dba00030f560003111800031128000311380003121e0003131e0003139c
00031468000315680003157800031648000317320003183e0003196a0003
199c000319d0000319e000031aca00031c3200031df800031f060003202e
0003203e0003204e0003208800032264000322a4000322dc0003230a0003
23460003237a000323ac000323e40003241c0003255200032674000326b4
000326c6000326d8000326ea00032720000327580003276a0003277c0003
278e000327a0000327be000327dc000327fc0003283a00032880000328f0
000329020003291400032926000329380003294a0003295c0003296e0003
298000032992000329c6000329fe00032a1000032a2200032a3400032a68
00032aac00032aca00032adc00032aee00032b0000032b1e00032b300003
2b4200032b7800032bae00032c0600032c2600032c3800032c4a00032c5c
00032c6e00032c8000032c9200032cbc00032cce00032d0c00032d500003
2d6a00032d7c00032d8e00032f72000331c2000331d4000331e6000331f8
0003320a0003321c0003322e00033240000334900003370200033a300003
3a4200033a5400033a6600033a7800033a8a00033ab800033ad800033b06
00033b4800033b7a00033bae00033c5200033d2c00033dec0003400a0003
40f0000341ec00034280000343340003447e000345c4000346d0000347e2
0003493600034a4c00034bf800034d5000034e8c00034fe8000351140003
51f80003540800035668000358e400035b8200035ecc00035ee200035ef8
000360980003632a00036554000366de00036852000369d200036a420003
6ab200036b2600036b9a00036c0e00036c7800036d3000036de400036e96
00036f4a00037004000370be0003718000037226000372b2000372f00003
747e0003752a000375f40003765c000376c400037734000377a40003785c
00037914000379ce00037a8800037b4200037c0000037cbe00037d7c0003
7d8e00037da000037db200037dc400037dd600037e4a00037eb400037f72
00037f8400037f9600037fa800037fba00037fcc00037fde00037ff00003
80020003801400038026000380e00003819a000382540003830e00038338
0003835e0003839c000383c80003842e00038488000384f00003854e0003
85a4000385f20003864800038696000386f800038748000387ac0003880a
0003886c000388bc0003892400038996000389f400038a4000038aa60003
8af400038b2200038b4a00038b7200038b9600038bd000038bfe00038c42
00038c8e00038cd400038d2400038d5800038d9800038dcc00038e0c0003
8e5400038e9800038ebc00038ee000038f0600038f2c00038f5200038f78
00038f9c00038fc0000390040003905000039096000390e60003911a0003
915e00039192000391d2000392120003925400039286000392b4000392ea
0003931c000393400003936400039394000393c2000393ee000394140003
943a000394600003948a000394c6000394f6000395240003956800039596
000395c0000395f800039628000396560003967c000396a2000396c80003
96ec00039710000397360003976600039794000397d00003980a0003983a
0003986a0003989a000398c8000398f80003994e00039974000399e40003
9a0600039a9600039ac000039b4a00039b6000039bfa00039d7800039f70
0003a1100003a30a0003a3d20003a4940003a6f00003a9340003aa980003
abfe0003ad880003af200003b01e0003b1120003b1f00003b2d60003b3e4
0003b5000003b6380003b7e00003b98a0003babe0003bb9c0003bbac0003
bcc00003bd9e0003becc0003bfce0003c03c0003c0f00003c1ca0003c340
0003c3da0003c4720003c4d20003c5200003c5620003c5c60003c6040003
c63c0003c6860003c6cc0003c75c0003c7ea0003c83c0003c86a0003c8b0
0003c8f40003c9280003c95a0003c9ae0003ca040003ca440003ca7e0003
caae0003cade0003cb120003cb4c0003cb9e0003cc040003cc680003ccd4
0003cd2c0003cd7e0003cdea0003ce3a0003ce9a0003cef80003cf500003
cfa00003cfd80003d0140003d04a0003d08c0003d0ca0003d10a0003d14e
0003d1920003d1d80003d2260003d2660003d2a80003d2dc0003d35c0003
d3aa0003d3f80003d44a0003d4ac0003d4ea0003d5200003d5820003d5da
0003d6280003d66e0003d6cc0003d77c0003d7bc0003d7fa0003d8320003
d86c0003d8aa0003d8ee0003d9160003d93e0003d98a0003d9d80003da2c
0003da7a0003dacc0003db1c0003db6c0003dbc80003dc040003dc400003
dc7e0003dcba0003dd020003dd480003dd8a0003ddd60003de4e0003ded8
0003df120003df4c0003dfaa0003dff80003e0660003e0ea0003e1300003
e1720003e1b00003e1ee0003e23e0003e28c0003e2ce0003e30c0003e346
0003e37c0003e3b00003e3e80003e43c0003e48c0003e4de0003e5340003
e5800003e5ca0003e6140003e6640003e6b60003e70c0003e75e0003e7b0
0003e8080003e8640003e8c00003e91c0003e95e0003e9aa0003e9fe0003
ea4c0003ea5c0003ea6c0003ea7c0003ea8c0003eaba0003eae80003eb1a
0003eb420003eb8c0003ebe20003ec420003eca60003ecee0003ed2c0003
ed740003edb40003edfe0003ee520003eea00003eef00003efde0003f106
0003f13e0003f1880003f1d00003f21e0003f2f80003f3f00003f4ae0003
f5900003f5ee0003f6500003f6a80003f7040003f7440003f77e0003f7d8
0003f8300003f8980003f9000003f9600003f9d60003fa0a0003fa3e0003
fa760003faac0003fb160003fb860003fbec0003fc520003fcbc0003fd3c
0003fda40003fe260003fe720003febe0003ff0c0003ff5a0003ff8a0003
ffbc0003fff000040022000400cc0004019e00040258000403120004035a
0004039a000403ea0004042e00040470000404b2000404f6000405420004
05e80004069400040736000407e2000408440004088e000408c800040900
00040968000409a8000409e200040a1e00040b1e00040c5c00040c6c0004
0c7c00040cbe00040d0000040d3a00040d7a00040df400040e5c00040eb4
00040f1600040f6000040faa00040fee0004102200041096000410c40004
10e20004111a00041162000411aa0004124a0004125a0004138c000414f0
000415260004156e000415b8000416060004166e000416de000418d80004
1af200041b3400041b7600041bd800041c3a00041c7c00041cbe00041d00
00041d4200041d8e00041dda00041e2a00041e7a00041fd2000421580004
2196000421d00004223e00042298000422de0004232400042374000423a8
000423dc00042416000424540004248a000425a00004263c000426860004
26c2000426f000042700000428c400042b1800042bca00042cde00042e14
00042ee800043060000432a6000434e600043526000435520004361e0004
37460004376800043862000438740004396400043a8e00043c9c00043cc4
00043d5a00043d6a00043d8e00043dd600043e1c00043e6800043eb20004
3f0e00043f7200043fd00004402e000440900004411a0004416a000441bc
000442ec0004445c000444bc0004453200044592000445ea000446240004
465a000446b0000446fa0004473e00044788000447cc00044814000448c4
0004496c000449a2000449e200044a3400044aaa00044b1e00044b420004
4bfa00044d2a00044e4200044f84000450b40004518c000451d60004522e
000454560004573c00045a1000045c6000045e4800046194000464940004
66be000468ba00046ac200046c9c00046e920004706a0004720200047316
000474b2000475b000047736000478e600047ab400047c4200047c520004
7db000047ec6000480600004825c0004832400048586000486760004886e
000489ca00048b1200048b2200048bca00048d9e00048f0e00048fa80004
9156000492bc000493d8000495020004951200049672000497ba00049922
00049b0600049d1400049f4c0004a15c0004a16c0004a22a0004a35c0004
a41a0004a5500004a5fe0004a8200004a9880004aaa40004abb00004ac8c
0004ad760004aee40004b0360004b1820004b3700004b54e0004b6ae0004
b8240004b9aa0004bb300004bb640004bbbc0004bc5c0004bc6c0004bea8
0004c0ec0004c3b80004c4f20004c5200004c55a0004c7880004c9780004
cb1e0004cb2e0004cb560004cbae0004cc180004cc4a0004cc7e0004ccae
0004ccdc0004cede0004d0ca0004d0fa0004d1280004d1580004d1880004
d4100004d5ea0004d61a0004d6480004d6780004d6a60004d6d40004d872
0004da180004dc2e0004dc600004dc900004dde00004dfbe0004dfee0004
e01c0004e0500004e0820004e0b20004e0e00004e1140004e1480004e178
0004e1a60004e1da0004e20c0004e23c0004e26a0004e29e0004e2d00004
e3000004e32e0004e3620004e3940004e3c40004e3f20004e4260004e458
0004e4880004e4b60004e4da0004e4fe0004e52e0004e55c0004e7840004
e9a20004e9d20004ea020004eb120004ed9c0004f0120004f0dc0004f19e
0004f1ce0004f1fc0004f35e0004f55e0004f5860004f5de0004f6fa0004
f72c0004f7600004f7900004f7be0004f7f00004f8240004f8540004f882
0004f9fa0004fb680004fcb00004fe800004ffe400050272000504040005
059600050726000509ba00050b7400050d2e00050f7e000511aa00051288
0005147e0005148e0005160200051772000518ae000519e600051b780005
1d2c00051de600051e5000051ebe00051fde000520ea000521780005230c
0005247c000525fe000527b80005290c00052a5400052b6800052b780005
2d2a00052f3e000530f40005320200053310000534520005355a00053694
0005375c00053828000539d400053b8000053dd200053ee4000540020005
410c0005427c0005435400054452000545a600054780000548bc00054996
00054afe00054be200054cf400054dc200054f360005508c000553560005
54b40005560e0005574e000558c000055adc00055aec00055d2600055ece
00055ede00055fde000560fe000561760005634e000564d2000566520005
682000056b0800056d6800056f9000057116000573ba0005757400057728
000577d800057b4a00057bd000057cc800057e0e00057e8c00057f440005
7ffc000580c6000582380005843800058580000585bc000586200005865e
0005869a000586d800058780000588300005896200058a9000058b260005
8bb400058c4400058cd600058d0a00058d7c00058dea00058e1e00058e52
00058ec400058f3200058f7c00058faa00059052000591000005914c0005
9198000591fa0005922e000592e8000593fc0005957c000595de000597a6
0005993400059a9800059b3800059b9000059bf600059ca000059cd60005
9d0e00059dbc00059df600059e5c00059f380005a00a0005a0aa0005a0de
0005a1360005a2020005a2ea0005a3980005a3d60005a4120005a4500005
a48c0005a4fe0005a56c0005a5b80005a6040005a6420005a6900005a740
0005a78c0005a7d80005a83a0005a86e0005a8fa0005a9840005a9ea0005
aaca0005ab1e0005abe40005ac680005ac9c0005ace40005ad600005ae00
0005aeaa0005af560005b0040005b0e60005b11a0005b1520005b1ac0005
b2920005b2ce0005b30c0005b38a0005b3f80005b4a00005b4e80005b52a
0005b5e60005b7200005b8060005b8600005b8ce0005b9400005ba260005
ba620005bb2e0005bb6e0005bbb60005bc100005bc680005bca40005be3e
0005bf860005c1780005c1cc0005c20c0005c51e0005c6020005c6560005
c6980005c7ee0005c91e0005c99c0005cac20005cb960005ccfc0005ce60
0005cf580005d0bc0005d1740005d24c0005d3840005d5120005d5840005
d5f20005d6320005d8d20005daf40005dbda0005dc020005dc360005ddcc
0005dfc80005e1880005e3d80005e5880005e71a0005e8f00005e9a20005
ea440005eba00005ec6c0005ee800005f0700005f23c0005f3fe0005f570
0005f7000005f9040005fb960005fe960006010c0006025e000603d00006
05ae000607f2000608e60006097200060b0800060d2800060e9800060ea8
00060eb800060fb6000610ac000610dc0006110c0006113a000611680006
13ec000615b60006173c0006188800061ad400061d0000061e6a00061fc6
000621ba00062384000625c8000627e2000629f000062c90000630280006
336e0006352c00063666000638a800063a8000063b9c00063cbe00063cf2
00063d2400063f960006423c0006449600064690000649d600064c6a0006
4cca00064cf800064d2800064ebc0006500e000651d600065234000652c6
0006531c00065372000654ea000656d6000658dc00065a9c00065bc20006
5cb200065eb60006614c0006633e000664fe000667c2000669f600066c48
00066e0e0006700c000671c2000672e4000673fa00067608000678000006
7a9e00067cf800067efe000680f200068186000682260006831800068414
0006855e0006868800068846000689f800068bea00068daa00068dba0006
8dea00068e18000690b0000692e40006943200069548000696c000069834
0006997200069a9a00069bdc00069cfc00069eb20006a01c0006a0ca0006
a0fa0006a1280006a15c0006a18e0006a19e0006a1ae0006a1de0006a20c
0006a2400006a2720006a2a60006a2d80006a30c0006a33e0006a4fa0006
a50a0006a53a0006a5680006a59c0006a5ce0006a6020006a6340006a668
0006a69a0006a6ce0006a7000006a7300006a75e0006a7920006a7c40006
a7f80006a82c0006a8600006a8920006a8c60006a8f80006aa040006aa14
0006ac0a0006ae740006b0700006b1fc0006b39a0006b4c40006b60e0006
b7440006b88e0006b9d20006bbb80006bd280006be0a0006bef00006bf62
0006bfe40006c0be0006c1180006c1940006c20a0006c27c0006c3940006
c3fe0006c4700006c50c0006c5700006c5d40006c6900006c8680006c964
0006c9e00006ca1c0006ca8e0006caf80006cbb40006cc3c0006cca60006
cd9e0006ce120006ce860006cec20006cf380006d0500006d0e80006d122
0006d1ac0006d2380006d3540006d4740006d50a0006d5a00006d62a0006
d6500006d6760006d6a60006d6d20006d6f80006d71e0006d7420006d766
0006d7a80006d7e80006d8180006d8440006d86a0006d8900006d8b40006
d8d80006d8fc0006d9200006d9440006d9680006d99a0006d9ce0006da00
0006da340006da580006da7c0006daa00006dac40006daf40006db220006
db520006db820006dbb20006dbe00006dc100006dc400006dc660006dc8c
0006dcc00006dcf40006dd1a0006dd400006dd640006dd880006ddac0006
ddd00006de040006de4a0006de7c0006deac0006ded20006def80006df1c
0006df400006df660006df8c0006dfce0006e0100006e0340006e0580006
e07c0006e0a00006e0d00006e0fe0006e12e0006e15c0006e1820006e1a8
0006e1d80006e2060006e22c0006e2520006e2760006e29a0006e2be0006
e2e20006e3140006e3480006e37c0006e3b20006e3e40006e4180006e44a
0006e47e0006e4ae0006e4dc0006e50c0006e53a0006e56a0006e5980006
e5be0006e5e40006e6260006e6660006e68a0006e6ae0006e6de0006e70c
0006e7320006e7580006e78a0006e7be0006e7f00006e8240006e8660006
e8a60006e8d60006e9060006e92c0006e9520006e9760006e99a0006e9be
0006e9e20006ea080006ea2e0006ea520006ea760006ea9a0006eabe0006
eaf00006eb240006eb580006eb8e0006ebbe0006ebec0006ec120006ec38
0006ec680006ec960006ecbc0006ece20006ed120006ed400006ed740006
eda60006edd60006ee040006ee340006ee620006ee880006eeae0006eed2
0006eef60006ef1a0006ef4e0006ef800006efb20006efe00006f0100006
f0400006f0700006f0a40006f0d80006f10c0006f1400006f1740006f1a8
0006f1d80006f2080006f2440006f2840006f2c00006f2fc0006f3300006
f3640006f3940006f3c40006f3f80006f42c0006f4600006f4940006f4c6
0006f4f80006f5400006f5880006f5d00006f6180006f6480006f6780006
f6ac0006f6e00006f7140006f7480006f77c0006f7b00006f7e00006f810
0006f8560006f89c0006f8e20006f9280006f95c0006f9900006f9c00006
f9f00006fa240006fa580006fa8c0006fac00006faf40006fb280006fb58
0006fb880006fbbe0006fbf40006fc2a0006fc600006fc960006fccc0006
fcfc0006fd2c0006fd600006fd940006fdc80006fdfc0006fe2c0006fe5c
0006fe8c0006febc0006feec0006ff1c0006ff4c0006ff7c0006ffb00006
ffe4000700180007004c00070080000700b4000700e4000701180007014c
00070180000701b0000701e000070214000702480007027c000702b00007
02e4000703180007034600070374000703a4000703d40007040400070434
0007046400070494000704c2000704f00007051e0007054c0007057a0007
05a8000705d60007060400070632000706600007068e000706bc000706ea
000707180007075a0007079c000707e00007082400070868000708ac0007
08f00007093400070974000709b400070a0000070a4c00070a9800070ae4
00070b2800070b6c00070bae00070bf000070c3400070c7800070cbc0007
0d0000070d4400070d8800070dc800070e0800070e5e00070eb400070f0a
00070f6000070fa400070fe80007102800071068000710aa000710ec0007
112e00071170000711b2000711f4000712300007126c000712ac000712ec
0007132c0007136c000713ac000713ec0007141a00071448000714880007
14ac000714ec0007151a0007155a0007158a000715ba000715ea0007161a
0007163c00071692000716d2000717280007180e00071988000719c80007
19ec00071a2c00071a5a00071a9a00071aca00071afa00071b2a00071b5a
00071b7c00071c1400071ca600071dca00071df800071e2600071e6c0007
1eb200071ee000071f1400071f4400071f7400071fa400071fd400072066
000720fe000722280007225600072284000722ca00072310000723400007
23700007239e000723d200072402000724320007246200072492000724c2
0007258c00072658000726d4000727120007273400072772000727a00007
27de0007280e0007283e0007286c0007289a000728bc000729080007295e
00072aa400072cba00072cf400072d2e00072da000072e0c00072ea40007
2f22000731580007324e000733f4000735160007365a000737bc00073828
00073894000739060007397200073a5200073ac800073b9400073c660007
3d4800073dbc00073dfa00073e3800073e7400073eb000073ef800073f36
00073f9e0007400a000740ba000741a2000742ac0007431e0007438a0007
4456000744fe000745520007458a000745c0000746fe000748ac000749ba
00074b7e00074e5800074fb200074fc2000750ca0007520a000752ec0007
52fc0007537400075422000754320007555e0007556e0007557e0007558e
000756f0000757000007587000075aac00075d2e00075ed200075fa20007
606000076160000761700007630200076312000764540007652c00076664
000767d6000767e6000767f6000768060007698a00076b3800076c6a0007
6c7a00076c8a00076c9a00076caa00076e0800076e1800076f7400077124
000772420007737e000774780007754e00077626000777a80007789a0007
790e000779d000077b6a00077bea00077d2800077e2600077f3000078042
000781fc000782fe00078454000784e0000785fa000787d80007892e0007
8a8600078bdc00078e1600078f76000790da0007920a00079322000794bc
00079656000797dc0007985a000799a200079b0600079c1e00079d440007
9e7800079f420007a00c0007a15c0007a2340007a3200007a3ec0007a530
0007a6860007a7620007a8ce0007a9960007ab900007acec0007ae640007
aee20007af960007b0860007b1dc0007b3640007b42a0007b5cc0007b74c
0007b8ee0007b9720007bab00007bb460007bc360007bcca0007bd1a0007
becc0007bf660007c0920007c2660007c4580007c5740007c5c60007c6f0
0007c75a0007c8320007c8660007c89a0007c8d00007c9060007c9460007
c97e0007c9be0007c9f60007cba80007cc000007cc880007cd720007ce9c
0007cfd00007d0380007d0c20007d1120007d2040007d2a80007d3620007
d39a0007d4240007d4440007d4940007d4d80007d57a0007d5b40007d5e4
0007d9340007dac20007dbcc0007dce20007defa0007e12e0007e3720007
e5fa0007e8ae0007eae40007ebbe0007ed360007f0360007f1940007f2ea
0007f3220007f4080007f53a0007f5cc0007f6340007f7e40007f9560007
fb2e0007fd200007fdb40007fe440007fec20007fefa0007ff340007ff98
00080014000801e0000802c400080308000803a20008043a000804980008
05b600080682000807380008076e000807a4000807d6000808140008085a
000808a80008090000080954000809b600080a1800080a8600080ae60008
0b6600080bf000080c8400080d0e00080d9600080dee00080e4400080e90
00080ec400080ef800080f2e00080f6200080f9200080fc60008100a0008
104000081088000810ba000810ea0008111e00081172000811da00081218
00081252000812a6000813020008133e0008137200081486000815ca0008
15fc0008162e00081664000816ba000816ee0008172400081762000817a2
000817e80008183800081886000818d20008191000081952000819920008
19ce000819fc00081a2a00081a5800081a8600081ac000081b0200081b40
00081b7c00081bd600081c3000081c8a00081ce200081d4c00081db60008
1e1600081e8c00081ec200081ef800081f3200081f6c00081f9c00081fcc
00081ffe0008203000082068000820a0000820d400082100000821660008
21a2000821fc0008224c000822a2000822ee00082374000823f40008242c
00082460000824b600082504000826220008277e0008284c0008292c0008
2972000829b6000829ee00082a2600082a5e00082a9c00082aca00082afe
00082dc0000830f2000832d60008359c0008380200083aca00083cda0008
3e8c000841760008437600084546000846fe0008485200084a6c00084cea
00084da600084e4a00085094000852060008542e0008563a000857f20008
592e00085b6800085d7000085e220008600c000861e00008644e000865b0
00086834000869c800086b3600086dcc00086f12000870dc000872a80008
7458000876040008782e00087a8400087c7800087d3400087f020008808e
000881e6000883c80008853400088544000886e800088952000889620008
8a4400088b2000088b3000088c7600088d5c00088dd200088e5200088f50
0008903a000890b8000891800008921e000893e000089564000896b40008
98040008992400089a5000089bf200089e1a00089ecc0008a0140008a16e
0008a31a0008a4160008a4f40008a6280008a7160008a8540008a9f20008
ab940008aca40008ad7e0008ae660008af660008afe20008b17a0008b2e2
0008b42c0008b57a0008b7520008b8960008bb820008bd8e0008c06e0008
c22c0008c2b20008c30c0008c3660008c3c40008c4220008c48a0008c4f2
0008c5660008c5d00008c6300008c68a0008c6ec0008c74a0008c7ae0008
c8160008c8860008c8f40008c9540008c9b40008ca200008ca840008caf8
0008cb6c0008cbe80008cc680008ccf80008cd880008ce760008cf640008
d0080008d0b20008d1b40008d2b40008d46c0008d5c60008d5ea0008d77e
0008d95e0008db0a0008db1a0008dcb40008df4a0008e0560008e13c0008
e2800008e4500008e61c0008e7520008e8aa0008ea020008eb8e0008ebba
0008ebe60008ebf60008ed200008ee3c0008efe40008f2040008f3760008
f5660008f5760008f5860008f6b00008f7bc0008f8220008f8940008f900
0008f9700008fa540008fb3e0008fbc80008fc3c0008fd180009002a0009
01060009011600090200000902c8000904000009057200090764000909c8
00090b6e00090c6c00090d9c00090f460009108200091114000911aa0009
1350000913ee0009149400091698000916f200091780000917dc00091818
0009186e000918c200091a9200091c0000091e1a00091ea000091f060009
1fae000920a000092138000921f4000922b00009232000092404000924ba
0009254e0009255e0009256e0009257e0009258e000927c8000927da0009
297800092a4200092ba800092d4000092db800092e1a00092e5c00092e94
00092ee400092f3400092fb80009303c000930c20009316c000933320009
340a0009341c0009342e00093446000934580009346a0009347c0009348e
000934e6000936a20009382c0009398000093b6600093c6000093ddc0009
3e2c00093e9000093f320009400a000940bc00094146000941e20009425e
000942da0009438c0009447600094542000945ec000946c80009474e0009
4830000948d20009499a00094a6600094a9c00094ad400094b0c00094b44
00094b9a00094bf000094c5800094cc000094d1000094d6000094db00009
4e0000094e5600094eac00094edc00094f0c00094f3c00094f6c00094f9a
00094fc800094ff6000950240009505600095088000950c6000951060009
51380009516a000951a8000951e80009521c0009525000095290000952d0
000952fe0009532c0009535a00095388000953b4000953e00009540c0009
54380009546400095490000954c4000954f8000955220009554c00095576
000955a0000955cc000955f8000956240009565000095682000956b40009
56e6000957180009574c00095780000957b4000957e80009585600095b98
0009636200096d160009714600097224000972c200097304000973aa0009
73ec000974240009746e000974a0000974d20009750a0009754200097580
000975be000975ec0009761c0009764a0009767a000976b8000976e40009
772a00097770000977a8000977d40009781a000978600009789a000978ca
000979140009795e00097970000979fc00097a9400097b3400097bc20009
7cb200097d780009800c000981720009832e000984400009874c00098962
00098b9600098dd4000990ac000992e6000995be0009982200099a840009
9c5400099e5c0009a0a20009a2900009a34c0009a4040009a5500009a6a2
0009a8000009a9320009a9420009a9f40009ab3a0009acc80009ae7c0009
affc0009b17a0009b3340009b4620009b5b00009b7a60009b8d00009badc
0009bbd20009bc5a0009bc740009bf580009c0800009c0980009c0b00009
c0c80009c0de0009c0f40009c1060009c11e0009c1300009c18e0009c1a0
0009c1b20009c1ca0009c1dc0009c1f40009c2060009c21e0009c2300009
c2480009c25a0009c2720009c2840009c2960009c2a80009c2ba0009c2cc
0009c3080009c31a0009c32c0009c33c0009c34e0009c538000100000d82
038400490090000500020010002f0056000003ea0557000400020000003a
02be0000000300000000006a000000000003000000010016006a00000003
00000002000e00d80000000300000003004000e600000003000000040016
006a0000000300000005001801260000000300000006001c013e00000003
00000007006e006a0000000300000008003000a60000000300000009001c
015a000000030000000d0298017600010000000000000035040e00010000
00000001000b044300010000000000020007047a00010000000000030020
04810001000000000004000b04430001000000000005000c04a100010000
00000006000e04ad00010000000000070037044300010000000000080018
04610001000000000009000e04bb000100000000000d014c04c900030001
04030002000c06150003000104050002001006250003000104060002000c
063500030001040700020010064100030001040800020010065100030001
04090000006a000000030001040900010016006a0003000104090002000e
00d80003000104090003004000e600030001040900040016006a00030001
04090005001801260003000104090006001c013e0003000104090007006e
006a0003000104090008003000a60003000104090009001c015a00030001
0409000d0298017600030001040a0002000c061500030001040b00020010
066100030001040c0002000c061500030001040e0002000c067100030001
04100002000e068100030001041300020012068f0003000104140002000c
06150003000104150002001006150003000104160002000c061500030001
04190002000e06a100030001041b00020010067100030001041d0002000c
061500030001041f0002000c06150003000104240002000e06af00030001
042a0002000e06bd00030001042d0002000e06cb00030001080a0002000c
06150003000108160002000c0615000300010c0a0002000c061500030001
0c0c0002000c061500a90020003200300031003200200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e002e00200041006c006c00200052006900670068
00740073002000520065007300650072007600650064002e0043006f0075
00720069006500720020004e006500770020006900730020006100200074
0072006100640065006d00610072006b0020006f00660020005400680065
0020004d006f006e006f007400790070006500200043006f00720070006f
0072006100740069006f006e002e0052006500670075006c00610072004d
006f006e006f0074007900700065003a0043006f00750072006900650072
0020004e0065007700200028004d006900630072006f0073006f00660074
002900560065007200730069006f006e00200036002e003800310043006f
00750072006900650072004e0065007700500053004d00540048006f0077
0061007200640020004b006500740074006c006500720059006f00750020
006d0061007900200075007300650020007400680069007300200066006f
006e00740020006100730020007000650072006d00690074007400650064
0020006200790020007400680065002000450055004c004100200066006f
00720020007400680065002000700072006f006400750063007400200069
006e0020007700680069006300680020007400680069007300200066006f
006e007400200069007300200069006e0063006c00750064006500640020
0074006f00200064006900730070006c0061007900200061006e00640020
007000720069006e007400200063006f006e00740065006e0074002e0020
0059006f00750020006d006100790020006f006e006c0079002000280069
002900200065006d0062006500640020007400680069007300200066006f
006e007400200069006e00200063006f006e00740065006e007400200061
00730020007000650072006d006900740074006500640020006200790020
00740068006500200065006d00620065006400640069006e006700200072
00650073007400720069006300740069006f006e007300200069006e0063
006c007500640065006400200069006e0020007400680069007300200066
006f006e0074003b00200061006e00640020002800690069002900200074
0065006d0070006f0072006100720069006c007900200064006f0077006e
006c006f006100640020007400680069007300200066006f006e00740020
0074006f002000610020007000720069006e0074006500720020006f0072
0020006f00740068006500720020006f0075007400700075007400200064
0065007600690063006500200074006f002000680065006c007000200070
00720069006e007400200063006f006e00740065006e0074002ea9203230
313220546865204d6f6e6f7479706520436f72706f726174696f6e2e2041
6c6c205269676874732052657365727665642e436f7572696572204e6577
20697320612074726164656d61726b206f6620546865204d6f6e6f747970
6520436f72706f726174696f6e2e526567756c61724d6f6e6f747970653a
436f7572696572204e657720284d6963726f736f66742956657273696f6e
20362e3831436f75726965724e657750534d54486f77617264204b657474
6c6572596f75206d617920757365207468697320666f6e74206173207065
726d6974746564206279207468652045554c4120666f7220746865207072
6f6475637420696e207768696368207468697320666f6e7420697320696e
636c7564656420746f20646973706c617920616e64207072696e7420636f
6e74656e742e20596f75206d6179206f6e6c792028692920656d62656420
7468697320666f6e7420696e20636f6e74656e74206173207065726d6974
7465642062792074686520656d62656464696e6720726573747269637469
6f6e7320696e636c7564656420696e207468697320666f6e743b20616e64
20286969292074656d706f726172696c7920646f776e6c6f616420746869
7320666f6e7420746f2061207072696e746572206f72206f74686572206f
75747075742064657669636520746f2068656c70207072696e7420636f6e
74656e742e004e006f0072006d0061006c006e0079006f00620079010d00
65006a006e00e9006e006f0072006d0061006c005300740061006e006400
6100720064039a03b103bd03bf03bd03b903ba03ac004e006f0072006d00
610061006c0069004e006f0072006d00e1006c006e0065004e006f007200
6d0061006c0065005300740061006e00640061006100720064041e043104
4b0447043d044b0439004e0061007600610064006e006f0074006801b001
a10300006e00670041007200720075006e0074006100ba0054ffc003c0b2
553340b803c0b23a3340b803c0b30e243280b803c0b30b0d3280b803c0b2
09333f412f03c0007003c000af03c000cf03c00004005f03c0007f03c000
af03c00003001f03c0003f03c0005f03c0008f03c0000400a003bb00b003
bb00c003bb00d003bb000400a003ba00b003ba00c003ba00d003ba000400
3f03b8000103b703b6b2241f40b803b4b3192432ef411a03b300ff03b300
020391038b0021001f035e038b0021001f035f038b0021001f038f038b00
2a001f0390038b002a001f038d038bb23b1f0f4109038b000100ef038b00
ff038b0002ffc0039cb2474f32b9ffc0039cb2373c32b9ffc0039bb2474f
32b9ffc0039bb3373c321f4119039c00b0039c00c0039c00d0039c000400
ef039c0001001f039b00b0039b00c0039b00d0039b000400ef039b0001ff
c0039cb2212932b9ffc0039bb2212932b9ffc0039cb20f1632b9ffc0039b
b20f1632410a035903560032001f035803560032001f03570356b2321fbf
41600355000100af0355000100a003540001008f03540001005f03540001
004f03540001007f03550001007f03540001006f03550001006f03540001
003f03550001003f03540001003f03540001002f03540001002f03540001
001f03540001000f03540001035203530029001f0351034a0029001f0350
03450025001f034f034a0025001f034e03490025001f034d03470025001f
034c034a0018001f034b03450012001f034a03460018001f034903450044
001f034803460044001f03470346b2441f3041700346005f03450002000f
0344001f0344002f0344003f03440004000f0344008f034400a0034400df
03440004005f0344007f034400cf03440003002f03440001034403440343
034303410341000f0340001f0340002f0340000303400340033f033f033e
033e000f033d0001033d033d0040033c0001001f033c002f033c003f033c
004f033c005f033c00c0033c00d0033c0007033c033c0020033500300335
0040033500500335006003350005000f032c002f032c008f032c0003032c
032d0024001f0321028c0014001f0320028c0014001f031f028b001e001f
031e028bb21e1f40410902b4005002b4006002b4007002b4008002b4b205
120f4114028b001f028b002f028b004f028b005f028b007f028b009f028b
00af028b0008003f028b004f028b400b023f023f034f024f030440b80329
b33c3c3240b80329b333363240b80329b31c1d3240b80329b30c1a320f41
720329007f0329009f03290003000f0329002f0329003f03290003000f03
29001f0329000200af032700bf032700cf032700df03270004000f032700
4f0327005f0327008f0327009f032700af0327000600bf032700ef032700
ff03270003006f0327007f0327008f0327009f032700af03270005000f03
27001f0327002f0327004f0327005f03270005000f0328002f0328005f03
28007f032800af0328000500df03280001000f0327000f03280050032800
8f032800bf0328000500df03220001008f03220001003f0322004f032200
02002f0322003f03220002000f0322001f0322b202090fb8028bb2013a0f
413f028c004f028c0002000f028d002f028d003f028d0003001f028b0001
000f028b0001002f028b0001000f028c002f028c003f028c004f028c008f
028c00af028c000603b903b9032903290327032703280328032203220321
032103200320031f031f031e031e02900290028f028f028e028e028d028d
028c028c028b028b4014af2bbf2b025f356f357f358f359f35af35bf3507
bb0261026102600260400a0016160000001211081a41100204005c000d01
fa005c000d01ad005c000d0172005c000d0140005c000d0117401a5c0de4
5c0dc85c0d995c0d955c0d585c0d4e5c0d465c0d2f5c0db8016240172b0d
db2b0d902b0d562b0d362b0d352b0d332b0d292b0d411101590157000d00
be0157000d00420157000d00320157000d00220157000d001d0157b20d00
09bc015b00210801001f0127b421811fe521b80401b21f8321b80801b21f
8221b80401b21f5b21b80401b21f3b21b80801b61f3021671f2c21b80401
b21f2621b80401b21f2421bd0401001f005501ac0007012b402c07c9075f
07400739072e072d072807270723071f071408120810080e080c080a0808
08060804080208000814b8ffe0402b000001001406100000010006040000
01000410000001001002000001000200000001000002010802004a00b013
034b024b5342014bb0c063004b6220b0f65323b8010a515ab005234201b0
124b004b544218b0372b4bb807ff52b0382b4bb009505b58b101018e59b0
382bb00288b801005458b801ffb101018e851bb0124358b90001012c858d
1bb90001012c858d59594bb0095058b104018d8d590016763f183f123e11
3946443e113946443e113946443e113946443e11394660443e1139466044
2b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b18b0372b1db0
964b5358b0aa1d59b0324b5358b0ff1d594bb8040153205c58b902380236
4544b90237023645445958b90a800238455258b902380a804459594bb804
0153205c58b9002002384544b90021023845445958b90a800020455258b9
00200a804459594bb8040153205c58b9001e02374544b900250237454459
58b90a80001e455258b9001e0a804459594bb8040153205c58b13d214544
b1212145445958b90a80003d455258b9003d0a804459594bb8040153205c
58b167214544b1212145445958b90a800067455258b900670a804459594b
b8030153205c58b121214544b1212145445958b907e00021455258b90021
07e04459594bb8030153205c58b121214544b11e2145445958b907e00021
455258b9002107e04459594bb8030153205c58b121214544b12521454459
58b907e00021455258b9002107e04459592b2b2b2b2b2b2b2b2b2b2b6542
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b9
004a01d6b1437a456523456023456560234560b08b766818b080622020b9
004301d64565234520b003266062636820b003266165b801d6236544b043
234420b14a7a4565234520b003266062636820b003266165b07a236544b0
4a2344b1007a455458b17a406544b24a404a4523614459b347612aad4565
23456023456560234560b089766818b080622020b12a614565234520b003
266062636820b003266165b061236544b02a234420b147ad4565234520b0
03266062636820b003266165b0ad236544b0472344b100ad455458b1ad40
6544b247404745236144594b5342014b5058b108004259435c58b1080042
59b3020b0a124358601b2159421610703eb0124358b93b21187e1bba0400
01a8000b2b59b00c2342b00d2342b0124358b92d412d411bba0400040000
0b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59
b0102342b011234200184569444569447373184569444569444569444569
444569444569444569444569444569444569444569444569444569444569
444569447373737373745e735e737373737473737473737374757373742b
2b2b2b007300737400435c58410c001f028b001f028d0002000f028b000f
028c000f028d000373735974002b2b2b2b2b737500456944737445694473
456944456944456944734569444569444569447574737301732b2b2b2b2b
2b2b2b2b2b2b2b0073737373737373737373737373737373732b2b2b012b
002b012b002b017375007375012b2b002b2b0073752b2b2b2b2b2b017301
2b012b73017300737374752b2b2b2b2b2b0000>
[15373 16117 16081 15833 16189 15829 14881 16169 15977 15717 16197 16369 16369
15461 16193 16377 16329 15681 16345 16349 15625 15517 16301 15085 15977 16177
16329 16213 16377 15401 15749 16333 15985 13429 16041 14073 15833 16233 10797
16109 10933 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 4864 21 <000100ab000003d70505002b0130b10602435458b71b0b2b0504140000b8
015bb50a0c143d2205003fed3ffd1112173931301bb90016ffde402c1b24
34480f7a0e862786288629a628a629bb0cb42a090d120a16350c382a0429
232a1e2b14271e28230c140bb8ffec4019ea12ed16fa12fd16042808282a
121842552b2a121842550802ba02a9000501dcb70105050201be0805bd01
e40009000b010d0001015bb409090a0c1ab801f9b4143d220500bb015b00
0b0002015bb408e1113d25410d026f002d0017015b001e010d000b026d00
2c019101060018012c852b10f6f4ed10f6edf4ed10ed003feded3f3c10fd
e410ed0110fd3d12392f180010f5f4c4012b2b3130004379401c1f241218
1625202615211840001323114001171f14400112241440012b2b012b2b2b
2b8181005d38383838383838007101712b59372135343633321615152135
24373e023534262322060706070623222635343636333216151406060700
07fd028518131218fcd40100f271541fae7b6eaa1906090c10111769b961
9de2265b76fed8ba54211e1a1a1e757ce6ee6f684f286ca67e5d18070a17
1030a45eda8a3a617374fedca100>CourierNewPSMT AddT42Char 
1 0 0 <00020067000004670500000300070046b10607b8010cb40201000504b801
0cb403000a0605b8010cb60303021a090704b8010cb6010019084f7b182b
4e10f43c4dfd3c4e10f63c4d10fd3c003f3cfd3c3f3cfd3c313033112111
25211121670400fc2003c0fc400500fb002004c0>CourierNewPSMT AddT42Char 
CourierNewPSMT /CharStrings get begin
/two 21 def
end
CourierNewPSMT /Encoding get
dup 50 /two put
pop
end
%ADOEndSubsetFont
/XGDLXB+CourierNewPSMT /CourierNewPSMT findfont ct_VMDictPut
/XGDLXB+CourierNewPSMT*1 
[50{/.notdef}rp /two 205{/.notdef}rp]
XGDLXB+CourierNewPSMT nf
XGDLXB+CourierNewPSMT*1 [0 -6.7498 -6.7498 0 0 0 ]msf
98.7491 121.316 mo
(2)sh
99.4091 110.815 mo
99.4091 117.595 li
@
%ADOBeginSubsetFont: CourierNewPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XGDLXB+CourierNewPSMT gcheck setglobal} if
1 4598 20 <000100e4000003e804f8001b00b1b212081bb8fff8400f11060008091b40
1b5012501b04090fba02a9000c019b4009100c0c0f10be090802ba02a900
05019b40120105050201be081918171615141307121b14ba02d700110267
b7000509080c190214bb02810011001702ce400a00671111016700100110
bd0270001c00a101ce0018012c852b10f65ded3c10fded10f4ed003f3c3f
eded01111217390010fd3d12392f180110f5f4c40010fd3d12392f180110
f5f4c43130005d3838383801112132161514062321222635343633211105
062322263534373637029001201e1a1a1efd6c1e1a1a1e0120feee14090f
190a081904f8fb5c17131218181213170430560619110f0d0809>XGDLXB+CourierNewPSMT AddT42Char 
XGDLXB+CourierNewPSMT /CharStrings get begin
/one 20 def
end
XGDLXB+CourierNewPSMT /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/XGDLXB+CourierNewPSMT*1 
[49{/.notdef}rp /one /two 205{/.notdef}rp]
XGDLXB+CourierNewPSMT nf
XGDLXB+CourierNewPSMT*1 [0 -6.7498 -6.7498 0 0 0 ]msf
71.7491 121.316 mo
(1)sh
72.4091 110.815 mo
72.4091 117.595 li
@
%ADOBeginSubsetFont: CourierNewPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XGDLXB+CourierNewPSMT gcheck setglobal} if
1 5298 22 <000100c3ffe20401050500380111b36c380100b8fff24033323235113a24
49244a2543387200067f218638950493359638a535a638b913ba17cb13cb
14cd17db13dd17ec13fa17ff2f1100b8fff2b514221b243411b8ffde401c
1b243429080f0b2b2811032f211e1a180005231c00191e2028262c19b801
5bb32020122cb8018db3263d330eb8018db5123d06233d36b8010d400a15
3d031c1c39031a3a2fba010d001c0281b70b19393305060decba01800018
012c852b003f3f014e10f44de4e44e10e612392f4d10edf4ed0010fde410
fde412392fed111239123911390111121739121739113931304379401c34
352425131404052534234001130515400124352640011404124000002b2b
012b2b81818181012b2b385d713800387101161615140623222627263534
363332171633323635342626232226353436331732363534262322060706
06232226353437363332161514060313747af5b86ce82e0f171010149bad
92c561b65d1e1a19194871939a7c57922c10110b111857799a9fcc6202ab
34b56297e75c30101210180f73b7704b905317131218018a5b5e903c3414
091710283d55bf845496>XGDLXB+CourierNewPSMT AddT42Char 
XGDLXB+CourierNewPSMT /CharStrings get begin
/three 22 def
end
XGDLXB+CourierNewPSMT /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/XGDLXB+CourierNewPSMT*1 
[49{/.notdef}rp /one /two /three 204{/.notdef}rp]
XGDLXB+CourierNewPSMT nf
XGDLXB+CourierNewPSMT*1 [0 -6.7498 -6.7498 0 0 0 ]msf
98.7491 67.3155 mo
(3)sh
99.4091 70.315 mo
99.4091 63.595 li
@
%ADOBeginSubsetFont: CourierNewPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XGDLXB+CourierNewPSMT gcheck setglobal} if
1 5728 23 <000200d6000003d704e7001d002100d1400d00030020021e21051d1f1c16
19b801e6b61d1dbe160f1512b8016040120e0ebe15202121670203140202
0302211f20b8015bb703030405211e0d1eb8015bb2000e00b802f2b21d1d
1cbb015b0016000f015bb2161503b80283400f01050e671d1d1f000f1e01
001e011eba026e0021015b400b0001010119220404150ca1ba01d2001801
24852b003f3f014e10f4714dfdf65d713c3c3c10fd3c10e400103ced10fd
3c10ee3c10ed3c103c3c103c10fd3c113905872e2b7d10c4180010ed0110
f5d43c0010ed0110f5d43c0f313071012135013311333216151406232311
333216151406232122263534363333111123010303fdd301d3af461f1a1a
1f46461f1a1a1ffec81f1a1a1f9d2cfe57015f610327fccc17131218fef5
1713121818121317015f02dffd21>XGDLXB+CourierNewPSMT AddT42Char 
XGDLXB+CourierNewPSMT /CharStrings get begin
/four 23 def
end
XGDLXB+CourierNewPSMT /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/XGDLXB+CourierNewPSMT*1 
[49{/.notdef}rp /one /two /three /four 203{/.notdef}rp]
XGDLXB+CourierNewPSMT nf
XGDLXB+CourierNewPSMT*1 [0 -6.7498 -6.7498 0 0 0 ]msf
71.7491 67.3155 mo
(4)sh
72.4091 70.315 mo
72.4091 63.595 li
@
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: OQOAAA+Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XGDLXA+Arial-BoldMT gcheck setglobal} if
2 1326 23 <000200260000044405c0000a000d00df40390c200d39090c190c2b0c530c
6b0ce20c06ed0d01060416042504280d480d5b0da70db70dc60d09010208
000c060d07050a0b0d07000c0c0d0db801ae401a03041403030403020c04
0d030d02040a0007400dc00dd00d030dbb01280008000201b4b600040400
0c0c00b80158b4058f0a010ab80102401210079f07bf0703071a0f3f027f
020202190eba014c014800182b4e10e47110f65d4df45d3cfd3c003f3f10
f43cfd5d3c0111123912393900111239123987052e2b047d10c40f0f0fb1
0602435458400b2d0c3d0c4d0ccd0cdd0c05005d593130015d5d005d2b21
11213501331133152311011101027efda8027cecb6b6fef0feaf0127f603
a3fc5ef7fed9021e01f5fe0b>XGDLXA+Arial-BoldMT AddT42Char 
2 1738 38 <00010061ffe7055e05d3001a00d6404e8609891489169f009806c709d403
d40bf503092509280c280d29142916750575098605080713071717131717
29022a03250507280599059709c903c50b053f014f01020152100001e000
f0000200b8ffc0b311183400b8ffc0b30a0d3400b8015a4017182d04080e
400e12340e4b5f0f014f0f010f401518340fb801284022122d0a030fef0e
5600ef00014f0102011a301c011c1527a007010f071f0730070307b8028c
b31b7e53182b4e10f45d714ded4e105df65d4dedf4ed003ffdf42b5d71e4
2b3ffdf42b2b5d71e45d3130005d015d5d5d010506042320001110002120
171617052626232206111016333236043f011f42fecdecfedcfe88017a01
34010da86432fedb1aa576a3cbc8a076aa021b5bf0e9018f015a016e0195
9f5eb0467284eafefafeeaec9600>XGDLXA+Arial-BoldMT AddT42Char 
2 4926 57 <0001ffff0000055405ba0006010eb300030108b8ff80b2123903b8ff8040
541a3a34c008d601d602d904d9050576027904780597019602990498059f
080803000b062f0867026804600877010719001606290026064900470657
00070003020220010014010100060304042005061405050603b80262400b
0600080504040202010205ba02610004ffc0400f12390b04017f048004df
04e0040404b8010b400a7f038003df03e0030403b8ffc0b512390b030103
ba010b0002026140093001010119075e63182b4e10f45d4dfd19f45d2b5d
f45d5d2b18ed003f3c103c103c3f3ced87052e2b877dc4872e182b877dc4
b10602435458b90003ffc0b310273403b8ffc0b5090d34540301005d2b2b
59313001715d5d5d002b012b005d21012101012101020bfdf40141017301
67013afdf305bafbc3043dfa4600>XGDLXA+Arial-BoldMT AddT42Char 
XGDLXA+Arial-BoldMT /CharStrings get begin
/four 23 def
/C 38 def
/V 57 def
end
XGDLXA+Arial-BoldMT /Encoding get
dup 52 /four put
dup 67 /C put
dup 86 /V put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/XGDLXA+Arial-BoldMT*1 
[50{/.notdef}rp /two /.notdef /four 14{/.notdef}rp /C 17{/.notdef}rp /U 
/V 169{/.notdef}rp]
XGDLXA+Arial-BoldMT nf
XGDLXA+Arial-BoldMT*1 [0 -9.7495 -9.7495 0 0 0 ]msf
8.7491 194.816 mo
(VCC)
[-6.50299 -7.03914 0 ]ysh
22.2522 183.594 mo
(24V)
[-5.42072 -5.42073 0 ]ysh
.06 lw
11.6891 198.595 mo
11.6891 171.595 li
@
.75 lw
11.6891 185.095 mo
25.1291 185.095 li
@
%ADOBeginSubsetFont: OQOAAA+Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XGDLXA+Arial-BoldMT gcheck setglobal} if
2 170 19 <00020056ffe7040e05c0000e00200093404b780a880aa701aa07aa09a70e
b709c8090856115916591a561f67116816681a671f08390239063609360d
490249064509460da709cb02c906c409c40dd902db06d409d40d11101820
180218b8ffc0402512163418a6080d1f0f2f0f020f401216340fa600051d
d84f0401041a2214d80b1921d3c2182b4e10f44ded4e10f6714ded003fed
2b713fed2b713130015d005d5d0132171611100706232200111037361722
060706111016163332363736111026260232d5788f9077d5d6fefa9077d5
3350161d344f333350161d344f05c098b4fe5ffe60b696014901a6019eb6
96e941546dfefefefec14041546c01020102c141>XGDLXA+Arial-BoldMT AddT42Char 
2 430 20 <000100a20000032605c00009005640096b027b028b02030204b80129b35f
050105b8025eb708090501000c0900bb015800020001025d400d0500041f
042004b0040404190aba01a701a000182b4e10f45d3c4df63cfd3c003f3c
3f3cf45ded393130005d212111060735362437330326fee79ad16e010230
e404239045ff24c98600>XGDLXA+Arial-BoldMT AddT42Char 
2 3738 53 <00020096000005bc05ba0015002100f84082390f490f57076a0b6a0caa09
a70ea023b60ed8090a0608060a1708160a360e460e460f0708100911140e
140f1410360e360f470f750e7910d30a0b78097819761d88098819861d06
091614090c0f0e530e750e840e940ea30e050e200d0c140d0d0c0f0c150d
171625131014016014a014021414002021250201020d0e0e1500080eb801
bc4027000d100d020dd41b27a006b006c006d00604068770230120233023
022321152001200030000200b8028bb3223163182b4e10f45d3c4dfd3c10
5d71f65dedf45ded003f3c3c103c3f3cfd3c12392f5d713cfd3c01111239
39872e2b5d0e7d10c4011139001112393130005d01715d5d331121321616
151406071616171321032e0223231111333236363534262726232396026f
ebd580c2c1607d6ab3fe9ed672545e663cdbd56a3c4f4824b4e705ba4fca
82a5d71c3886abfee2013fab5921fd9c034e2458424a5b0c0500>XGDLXA+Arial-BoldMT AddT42Char 
2 6606 78 <000100890000045f05ba000b00f3b90003ffddb30d113f03b8ffc0407d19
2d3407031003130627096606af0abf0ac809cb0ada0a0a53036003020d07
180946065708760605b609df04ed04fc04f506054e074e0866067d048c04
9b049c059a069a079a080a1f0412062b042b052a062a072a082f0d4b044b
050a060607090a09080a050a090306040b050406020100000b0b08070a03
0a0a0b04b8026d401a052f08391f070107650d020b26018000011f000100
190c3f7b182b4e10f45d713c4dfd3c1910f67118edf4ed103c103c003f3c
3c103c3f3c3f3c12173987087d10c4083cb10602435458b90003ffc8b209
2134002b593130015d5d5d7100725d2b2b33112111012101012101071189
01190149015afe950185fed1fef58305bafcf60176fe7cfd5e01dd89feac
>XGDLXA+Arial-BoldMT AddT42Char 
XGDLXA+Arial-BoldMT /CharStrings get begin
/zero 19 def
/one 20 def
/R 53 def
/k 78 def
end
XGDLXA+Arial-BoldMT /Encoding get
dup 48 /zero put
dup 49 /one put
dup 82 /R put
dup 107 /k put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/XGDLXA+Arial-BoldMT*1 
[48{/.notdef}rp /zero /one /two /.notdef /four 14{/.notdef}rp /C 
14{/.notdef}rp /R 2{/.notdef}rp /U /V 20{/.notdef}rp /k 148{/.notdef}rp]
XGDLXA+Arial-BoldMT nf
XGDLXA+Arial-BoldMT*1 [0 -9.7495 -9.7495 0 0 0 ]msf
41.6891 52.3155 mo
(R2)
[-7.03915 0 ]ysh
52.1893 52.3155 mo
(10k)
[-5.42072 -5.42072 0 ]ysh
%ADOBeginSubsetFont: ZLQBAA+Arial-BoldMT Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin
18 dict begin
/CIDFontName /ZLQBAA+Arial-BoldMT def
/PaintType 0 def
/FontType 42 def
/CIDFontType 2 def
/GDBytes 2 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontMatrix [1 0 0 1 0 0] def
/FontBBox [-5.023 -3.012 16 8.445] def
/CIDCount 3988 def
/CDevProc {pop pop pop pop pop 0 -1 7 index 2 div .88}bind def
/CharStrings 1 dict dup begin /.notdef 0 def end def
/Encoding 1 array dup 0 /.notdef put readonly def
/CIDMap [
<0000000100020003000400050006000700080009000a000b000c000d000e
000f0010001100120013001400150016001700180019001a001b001c001d
001e001f0020002100220023002400250026002700280029002a002b002c
002d002e002f0030003100320033003400350036003700380039003a003b
003c003d003e003f0040004100420043004400450046004700480049004a
004b004c004d004e004f0050005100520053005400550056005700580059
005a005b005c005d005e005f006000610062006300640065006600670068
0069006a006b006c006d006e006f00700071007200730074007500760077
00780079007a007b007c007d007e007f0080008100820083008400850086
008700880089008a008b008c008d008e008f009000910092009300940095
0096009700980099009a009b009c009d009e009f00a000a100a200a300a4
00a500a600a700a800a900aa00ab00ac00ad00ae00af00b000b100b200b3
00b400b500b600b700b800b900ba00bb00bc00bd00be00bf00c000c100c2
00c300c400c500c600c700c800c900ca00cb00cc00cd00ce00cf00d000d1
00d200d300d400d500d600d700d800d900da00db00dc00dd00de00df00e0
00e100e200e300e400e500e600e700e800e900ea00eb00ec00ed00ee00ef
00f000f100f200f300f400f500f600f700f800f900fa00fb00fc00fd00fe
00ff0100010101020103010401050106010701080109010a010b010c010d
010e010f0110011101120113011401150116011701180119011a011b011c
011d011e011f0120012101220123012401250126012701280129012a012b
012c012d012e012f0130013101320133013401350136013701380139013a
013b013c013d013e013f0140014101420143014401450146014701480149
014a014b014c014d014e014f015001510152015301540155015601570158
0159015a015b015c015d015e015f01600161016201630164016501660167
01680169016a016b016c016d016e016f0170017101720173017401750176
017701780179017a017b017c017d017e017f018001810182018301840185
0186018701880189018a018b018c018d018e018f01900191019201930194
01950196019701980199019a019b019c019d019e019f01a001a101a201a3
01a401a501a601a701a801a901aa01ab01ac01ad01ae01af01b001b101b2
01b301b401b501b601b701b801b901ba01bb01bc01bd01be01bf01c001c1
01c201c301c401c501c601c701c801c901ca01cb01cc01cd01ce01cf01d0
01d101d201d301d401d501d601d701d801d901da01db01dc01dd01de01df
01e001e101e201e301e401e501e601e701e801e901ea01eb01ec01ed01ee
01ef01f001f101f201f301f401f501f601f701f801f901fa01fb01fc01fd
01fe01ff0200020102020203020402050206020702080209020a020b020c
020d020e020f0210021102120213021402150216021702180219021a021b
021c021d021e021f0220022102220223022402250226022702280229022a
022b022c022d022e022f0230023102320233023402350236023702380239
023a023b023c023d023e023f024002410242024302440245024602470248
0249024a024b024c024d024e024f02500251025202530254025502560257
02580259025a025b025c025d025e025f0260026102620263026402650266
026702680269026a026b026c026d026e026f027002710272027302740275
0276027702780279027a027b027c027d027e027f02800281028202830284
02850286028702880289028a028b028c028d028e028f0290029102920293
029402950296029702980299029a029b029c029d029e029f02a002a102a2
02a302a402a502a602a702a802a902aa02ab02ac02ad02ae02af02b002b1
02b202b302b402b502b602b702b802b902ba02bb02bc02bd02be02bf02c0
02c102c202c302c402c502c602c702c802c902ca02cb02cc02cd02ce02cf
02d002d102d202d302d402d502d602d702d802d902da02db02dc02dd02de
02df02e002e102e202e302e402e502e602e702e802e902ea02eb02ec02ed
02ee02ef02f002f102f202f302f402f502f602f702f802f902fa02fb02fc
02fd02fe02ff0300030103020303030403050306030703080309030a030b
030c030d030e030f0310031103120313031403150316031703180319031a
031b031c031d031e031f0320032103220323032403250326032703280329
032a032b032c032d032e032f033003310332033303340335033603370338
0339033a033b033c033d033e033f03400341034203430344034503460347
03480349034a034b034c034d034e034f0350035103520353035403550356
035703580359035a035b035c035d035e035f036003610362036303640365
0366036703680369036a036b036c036d036e036f03700371037203730374
03750376037703780379037a037b037c037d037e037f0380038103820383
038403850386038703880389038a038b038c038d038e038f039003910392
0393039403950396039703980399039a039b039c039d039e039f03a003a1
03a203a303a403a503a603a703a803a903aa03ab03ac03ad03ae03af03b0
03b103b203b303b403b503b603b703b803b903ba03bb03bc03bd03be03bf
03c003c103c203c303c403c503c603c703c803c903ca03cb03cc03cd03ce
03cf03d003d103d203d303d403d503d603d703d803d903da03db03dc03dd
03de03df03e003e103e203e303e403e503e603e703e803e903ea03eb03ec
03ed03ee03ef03f003f103f203f303f403f503f603f703f803f903fa03fb
03fc03fd03fe03ff0400040104020403040404050406040704080409040a
040b040c040d040e040f0410041104120413041404150416041704180419
041a041b041c041d041e041f042004210422042304240425042604270428
0429042a042b042c042d042e042f04300431043204330434043504360437
04380439043a043b043c043d043e043f0440044104420443044404450446
044704480449044a044b044c044d044e044f045004510452045304540455
0456045704580459045a045b045c045d045e045f04600461046204630464
04650466046704680469046a046b046c046d046e046f0470047104720473
047404750476047704780479047a047b047c047d047e047f048004810482
0483048404850486048704880489048a048b048c048d048e048f04900491
04920493049404950496049704980499049a049b049c049d049e049f04a0
04a104a204a304a404a504a604a704a804a904aa04ab04ac04ad04ae04af
04b004b104b204b304b404b504b604b704b804b904ba04bb04bc04bd04be
04bf04c004c104c204c304c404c504c604c704c804c904ca04cb04cc04cd
04ce04cf04d004d104d204d304d404d504d604d704d804d904da04db04dc
04dd04de04df04e004e104e204e304e404e504e604e704e804e904ea04eb
04ec04ed04ee04ef04f004f104f204f304f404f504f604f704f804f904fa
04fb04fc04fd04fe04ff0500050105020503050405050506050705080509
050a050b050c050d050e050f051005110512051305140515051605170518
0519051a051b051c051d051e051f05200521052205230524052505260527
05280529052a052b052c052d052e052f0530053105320533053405350536
053705380539053a053b053c053d053e053f054005410542054305440545
0546054705480549054a054b054c054d054e054f05500551055205530554
05550556055705580559055a055b055c055d055e055f0560056105620563
056405650566056705680569056a056b056c056d056e056f057005710572
0573057405750576057705780579057a057b057c057d057e057f05800581
05820583058405850586058705880589058a058b058c058d058e058f0590
059105920593059405950596059705980599059a059b059c059d059e059f
05a005a105a205a305a405a505a605a705a805a905aa05ab05ac05ad05ae
05af05b005b105b205b305b405b505b605b705b805b905ba05bb05bc05bd
05be05bf05c005c105c205c305c405c505c605c705c805c905ca05cb05cc
05cd05ce05cf05d005d105d205d305d405d505d605d705d805d905da05db
05dc05dd05de05df05e005e105e205e305e405e505e605e705e805e905ea
05eb05ec05ed05ee05ef05f005f105f205f305f405f505f605f705f805f9
05fa05fb05fc05fd05fe05ff060006010602060306040605060606070608
0609060a060b060c060d060e060f06100611061206130614061506160617
06180619061a061b061c061d061e061f0620062106220623062406250626
062706280629062a062b062c062d062e062f063006310632063306340635
0636063706380639063a063b063c063d063e063f06400641064206430644
06450646064706480649064a064b064c064d064e064f0650065106520653
065406550656065706580659065a065b065c065d065e065f066006610662
0663066406650666066706680669066a066b066c066d066e066f06700671
06720673067406750676067706780679067a067b067c067d067e067f0680
068106820683068406850686068706880689068a068b068c068d068e068f
0690069106920693069406950696069706980699069a069b069c069d069e
069f06a006a106a206a306a406a506a606a706a806a906aa06ab06ac06ad
06ae06af06b006b106b206b306b406b506b606b706b806b906ba06bb06bc
06bd06be06bf06c006c106c206c306c406c506c606c706c806c906ca06cb
06cc06cd06ce06cf06d006d106d206d306d406d506d606d706d806d906da
06db06dc06dd06de06df06e006e106e206e306e406e506e606e706e806e9
06ea06eb06ec06ed06ee06ef06f006f106f206f306f406f506f606f706f8
06f906fa06fb06fc06fd06fe06ff07000701070207030704070507060707
07080709070a070b070c070d070e070f0710071107120713071407150716
071707180719071a071b071c071d071e071f072007210722072307240725
0726072707280729072a072b072c072d072e072f07300731073207330734
07350736073707380739073a073b073c073d073e073f0740074107420743
074407450746074707480749074a074b074c074d074e074f075007510752
0753075407550756075707580759075a075b075c075d075e075f07600761
07620763076407650766076707680769076a076b076c076d076e076f0770
077107720773077407750776077707780779077a077b077c077d077e077f
0780078107820783078407850786078707880789078a078b078c078d078e
078f0790079107920793079407950796079707980799079a079b079c079d
079e079f07a007a107a207a307a407a507a607a707a807a907aa07ab07ac
07ad07ae07af07b007b107b207b307b407b507b607b707b807b907ba07bb
07bc07bd07be07bf07c007c107c207c307c407c507c607c707c807c907ca
07cb07cc07cd07ce07cf07d007d107d207d307d407d507d607d707d807d9
07da07db07dc07dd07de07df07e007e107e207e307e407e507e607e707e8
07e907ea07eb07ec07ed07ee07ef07f007f107f207f307f407f507f607f7
07f807f907fa07fb07fc07fd07fe07ff0800080108020803080408050806
080708080809080a080b080c080d080e080f081008110812081308140815
0816081708180819081a081b081c081d081e081f08200821082208230824
08250826082708280829082a082b082c082d082e082f0830083108320833
083408350836083708380839083a083b083c083d083e083f084008410842
0843084408450846084708480849084a084b084c084d084e084f08500851
08520853085408550856085708580859085a085b085c085d085e085f0860
086108620863086408650866086708680869086a086b086c086d086e086f
0870087108720873087408750876087708780879087a087b087c087d087e
087f0880088108820883088408850886088708880889088a088b088c088d
088e088f0890089108920893089408950896089708980899089a089b089c
089d089e089f08a008a108a208a308a408a508a608a708a808a908aa08ab
08ac08ad08ae08af08b008b108b208b308b408b508b608b708b808b908ba
08bb08bc08bd08be08bf08c008c108c208c308c408c508c608c708c808c9
08ca08cb08cc08cd08ce08cf08d008d108d208d308d408d508d608d708d8
08d908da08db08dc08dd08de08df08e008e108e208e308e408e508e608e7
08e808e908ea08eb08ec08ed08ee08ef08f008f108f208f308f408f508f6
08f708f808f908fa08fb08fc08fd08fe08ff090009010902090309040905
0906090709080909090a090b090c090d090e090f09100911091209130914
09150916091709180919091a091b091c091d091e091f0920092109220923
092409250926092709280929092a092b092c092d092e092f093009310932
0933093409350936093709380939093a093b093c093d093e093f09400941
09420943094409450946094709480949094a094b094c094d094e094f0950
095109520953095409550956095709580959095a095b095c095d095e095f
0960096109620963096409650966096709680969096a096b096c096d096e
096f0970097109720973097409750976097709780979097a097b097c097d
097e097f0980098109820983098409850986098709880989098a098b098c
098d098e098f0990099109920993099409950996099709980999099a099b
099c099d099e099f09a009a109a209a309a409a509a609a709a809a909aa
09ab09ac09ad09ae09af09b009b109b209b309b409b509b609b709b809b9
09ba09bb09bc09bd09be09bf09c009c109c209c309c409c509c609c709c8
09c909ca09cb09cc09cd09ce09cf09d009d109d209d309d409d509d609d7
09d809d909da09db09dc09dd09de09df09e009e109e209e309e409e509e6
09e709e809e909ea09eb09ec09ed09ee09ef09f009f109f209f309f409f5
09f609f709f809f909fa09fb09fc09fd09fe09ff0a000a010a020a030a04
0a050a060a070a080a090a0a0a0b0a0c0a0d0a0e0a0f0a100a110a120a13
0a140a150a160a170a180a190a1a0a1b0a1c0a1d0a1e0a1f0a200a210a22
0a230a240a250a260a270a280a290a2a0a2b0a2c0a2d0a2e0a2f0a300a31
0a320a330a340a350a360a370a380a390a3a0a3b0a3c0a3d0a3e0a3f0a40
0a410a420a430a440a450a460a470a480a490a4a0a4b0a4c0a4d0a4e0a4f
0a500a510a520a530a540a550a560a570a580a590a5a0a5b0a5c0a5d0a5e
0a5f0a600a610a620a630a640a650a660a670a680a690a6a0a6b0a6c0a6d
0a6e0a6f0a700a710a720a730a740a750a760a770a780a790a7a0a7b0a7c
0a7d0a7e0a7f0a800a810a820a830a840a850a860a870a880a890a8a0a8b
0a8c0a8d0a8e0a8f0a900a910a920a930a940a950a960a970a980a990a9a
0a9b0a9c0a9d0a9e0a9f0aa00aa10aa20aa30aa40aa50aa60aa70aa80aa9
0aaa0aab0aac0aad0aae0aaf0ab00ab10ab20ab30ab40ab50ab60ab70ab8
0ab90aba0abb0abc0abd0abe0abf0ac00ac10ac20ac30ac40ac50ac60ac7
0ac80ac90aca0acb0acc0acd0ace0acf0ad00ad10ad20ad30ad40ad50ad6
0ad70ad80ad90ada0adb0adc0add0ade0adf0ae00ae10ae20ae30ae40ae5
0ae60ae70ae80ae90aea0aeb0aec0aed0aee0aef0af00af10af20af30af4
0af50af60af70af80af90afa0afb0afc0afd0afe0aff0b000b010b020b03
0b040b050b060b070b080b090b0a0b0b0b0c0b0d0b0e0b0f0b100b110b12
0b130b140b150b160b170b180b190b1a0b1b0b1c0b1d0b1e0b1f0b200b21
0b220b230b240b250b260b270b280b290b2a0b2b0b2c0b2d0b2e0b2f0b30
0b310b320b330b340b350b360b370b380b390b3a0b3b0b3c0b3d0b3e0b3f
0b400b410b420b430b440b450b460b470b480b490b4a0b4b0b4c0b4d0b4e
0b4f0b500b510b520b530b540b550b560b570b580b590b5a0b5b0b5c0b5d
0b5e0b5f0b600b610b620b630b640b650b660b670b680b690b6a0b6b0b6c
0b6d0b6e0b6f0b700b710b720b730b740b750b760b770b780b790b7a0b7b
0b7c0b7d0b7e0b7f0b800b810b820b830b840b850b860b870b880b890b8a
0b8b0b8c0b8d0b8e0b8f0b900b910b920b930b940b950b960b970b980b99
0b9a0b9b0b9c0b9d0b9e0b9f0ba00ba10ba20ba30ba40ba50ba60ba70ba8
0ba90baa0bab0bac0bad0bae0baf0bb00bb10bb20bb30bb40bb50bb60bb7
0bb80bb90bba0bbb0bbc0bbd0bbe0bbf0bc00bc10bc20bc30bc40bc50bc6
0bc70bc80bc90bca0bcb0bcc0bcd0bce0bcf0bd00bd10bd20bd30bd40bd5
0bd60bd70bd80bd90bda0bdb0bdc0bdd0bde0bdf0be00be10be20be30be4
0be50be60be70be80be90bea0beb0bec0bed0bee0bef0bf00bf10bf20bf3
0bf40bf50bf60bf70bf80bf90bfa0bfb0bfc0bfd0bfe0bff0c000c010c02
0c030c040c050c060c070c080c090c0a0c0b0c0c0c0d0c0e0c0f0c100c11
0c120c130c140c150c160c170c180c190c1a0c1b0c1c0c1d0c1e0c1f0c20
0c210c220c230c240c250c260c270c280c290c2a0c2b0c2c0c2d0c2e0c2f
0c300c310c320c330c340c350c360c370c380c390c3a0c3b0c3c0c3d0c3e
0c3f0c400c410c420c430c440c450c460c470c480c490c4a0c4b0c4c0c4d
0c4e0c4f0c500c510c520c530c540c550c560c570c580c590c5a0c5b0c5c
0c5d0c5e0c5f0c600c610c620c630c640c650c660c670c680c690c6a0c6b
0c6c0c6d0c6e0c6f0c700c710c720c730c740c750c760c770c780c790c7a
0c7b0c7c0c7d0c7e0c7f0c800c810c820c830c840c850c860c870c880c89
0c8a0c8b0c8c0c8d0c8e0c8f0c900c910c920c930c940c950c960c970c98
0c990c9a0c9b0c9c0c9d0c9e0c9f0ca00ca10ca20ca30ca40ca50ca60ca7
0ca80ca90caa0cab0cac0cad0cae0caf0cb00cb10cb20cb30cb40cb50cb6
0cb70cb80cb90cba0cbb0cbc0cbd0cbe0cbf0cc00cc10cc20cc30cc40cc5
0cc60cc70cc80cc90cca0ccb0ccc0ccd0cce0ccf0cd00cd10cd20cd30cd4
0cd50cd60cd70cd80cd90cda0cdb0cdc0cdd0cde0cdf0ce00ce10ce20ce3
0ce40ce50ce60ce70ce80ce90cea0ceb0cec0ced0cee0cef0cf00cf10cf2
0cf30cf40cf50cf60cf70cf80cf90cfa0cfb0cfc0cfd0cfe0cff0d000d01
0d020d030d040d050d060d070d080d090d0a0d0b0d0c0d0d0d0e0d0f0d10
0d110d120d130d140d150d160d170d180d190d1a0d1b0d1c0d1d0d1e0d1f
0d200d210d220d230d240d250d260d270d280d290d2a0d2b0d2c0d2d0d2e
0d2f0d300d310d320d330d340d350d360d370d380d390d3a0d3b0d3c0d3d
0d3e0d3f0d400d410d420d430d440d450d460d470d480d490d4a0d4b0d4c
0d4d0d4e0d4f0d500d510d520d530d540d550d560d570d580d590d5a0d5b
0d5c0d5d0d5e0d5f0d600d610d620d630d640d650d660d670d680d690d6a
0d6b0d6c0d6d0d6e0d6f0d700d710d720d730d740d750d760d770d780d79
0d7a0d7b0d7c0d7d0d7e0d7f0d800d810d820d830d840d850d860d870d88
0d890d8a0d8b0d8c0d8d0d8e0d8f0d900d910d920d930d940d950d960d97
0d980d990d9a0d9b0d9c0d9d0d9e0d9f0da00da10da20da30da40da50da6
0da70da80da90daa0dab0dac0dad0dae0daf0db00db10db20db30db40db5
0db60db70db80db90dba0dbb0dbc0dbd0dbe0dbf0dc00dc10dc20dc30dc4
0dc50dc60dc70dc80dc90dca0dcb0dcc0dcd0dce0dcf0dd00dd10dd20dd3
0dd40dd50dd60dd70dd80dd90dda0ddb0ddc0ddd0dde0ddf0de00de10de2
0de30de40de50de60de70de80de90dea0deb0dec0ded0dee0def0df00df1
0df20df30df40df50df60df70df80df90dfa0dfb0dfc0dfd0dfe0dff0e00
0e010e020e030e040e050e060e070e080e090e0a0e0b0e0c0e0d0e0e0e0f
0e100e110e120e130e140e150e160e170e180e190e1a0e1b0e1c0e1d0e1e
0e1f0e200e210e220e230e240e250e260e270e280e290e2a0e2b0e2c0e2d
0e2e0e2f0e300e310e320e330e340e350e360e370e380e390e3a0e3b0e3c
0e3d0e3e0e3f0e400e410e420e430e440e450e460e470e480e490e4a0e4b
0e4c0e4d0e4e0e4f0e500e510e520e530e540e550e560e570e580e590e5a
0e5b0e5c0e5d0e5e0e5f0e600e610e620e630e640e650e660e670e680e69
0e6a0e6b0e6c0e6d0e6e0e6f0e700e710e720e730e740e750e760e770e78
0e790e7a0e7b0e7c0e7d0e7e0e7f0e800e810e820e830e840e850e860e87
0e880e890e8a0e8b0e8c0e8d0e8e0e8f0e900e910e920e930e940e950e96
0e970e980e990e9a0e9b0e9c0e9d0e9e0e9f0ea00ea10ea20ea30ea40ea5
0ea60ea70ea80ea90eaa0eab0eac0ead0eae0eaf0eb00eb10eb20eb30eb4
0eb50eb60eb70eb80eb90eba0ebb0ebc0ebd0ebe0ebf0ec00ec10ec20ec3
0ec40ec50ec60ec70ec80ec90eca0ecb0ecc0ecd0ece0ecf0ed00ed10ed2
0ed30ed40ed50ed60ed70ed80ed90eda0edb0edc0edd0ede0edf0ee00ee1
0ee20ee30ee40ee50ee60ee70ee80ee90eea0eeb0eec0eed0eee0eef0ef0
0ef10ef20ef30ef40ef50ef60ef70ef80ef90efa0efb0efc0efd0efe0eff
0f000f010f020f030f040f050f060f070f080f090f0a0f0b0f0c0f0d0f0e
0f0f0f100f110f120f130f140f150f160f170f180f190f1a0f1b0f1c0f1d
0f1e0f1f0f200f210f220f230f240f250f260f270f280f290f2a0f2b0f2c
0f2d0f2e0f2f0f300f310f320f330f340f350f360f370f380f390f3a0f3b
0f3c0f3d0f3e0f3f0f400f410f420f430f440f450f460f470f480f490f4a
0f4b0f4c0f4d0f4e0f4f0f500f510f520f530f540f550f560f570f580f59
0f5a0f5b0f5c0f5d0f5e0f5f0f600f610f620f630f640f650f660f670f68
0f690f6a0f6b0f6c0f6d0f6e0f6f0f700f710f720f730f740f750f760f77
0f780f790f7a0f7b0f7c0f7d0f7e0f7f0f800f810f820f830f840f850f86
0f870f880f890f8a0f8b0f8c0f8d0f8e0f8f0f900f910f920f93>]def
/sfnts
[<00010000000a000a000a000a4f532f32115d5eaf000000ac000000606376
7420ffc3ad470000010c000007606670676dba2711a60000086c0000063e
68656164e1c5d6ed00000eac0000003668686561127e17ee00000ee40000
0024686d7478fdcf4b1500000f0800003e506d617870177e065b00004d58
000000206e616d65537ac9c400004d780000037f70726570034f36ae0000
50f8000011f567646972000000000000000000000000000303d402bc0005
0008059a05330000011b059a0533000003d1006602120805020b07040202
02020204e0002affc00078430000000900000000544d432000200020fffc
05d3fe510133073e01b2400001ffffff0000042605ba00000020001405ba
001c05ba001c05a7001c0426001c0000ffe40000ffe40000ffe4fe69ffe4
05ba001cfe69ffe402ea0000011d0000011d000000000000000000b200ac
00d70128012000b301fa001700f8011901310049000400f7000300af00fd
00950014005400960112002400160055004901040119012b008c019bff76
ffe9003d009200a2ffb70182ffaa0016008f00c600f8001c00de04010037
004e00550055006500e903e50059ff9a00080087000b003b005201160061
00d600d600f500000093009400be017cfff80004001400820092003c0041
0041ffc1fffc002a008c049005d809b5009100bb0106ff63ff69001e0022
008a022bffd6ffdf0026005900a300ac0104012b01c004480021006b0085
0098011903c6006b009500a400fe010c025d034305bf000000490056006e
0077008a00aa00ca0112015005d805f0ff7bffe700060013002800610069
00e90135014d02a5040cff3effda005b00b900c801190119011901c0045b
04a7055bfe3fff9dffc2001500b7010a01bc01c10532058efd81ffa1ffae
000c00260031003d004e00560062008300c100c900f100f2027fff7f0048
0053007700c5011d01200126012801d60219027e027e03d3002e0041005d
006b0075009f00b000b200ba00bb00bd00d600db00e000e50114011b014a
0162019101f2020c026402cf039b03b403d4040104a9001600230025002a
007400a500b600cc00cd00cf0105012001300150016a016f0197019d01e0
02b002ec02f70408048304fb04fd0526fee0fefbff4efff50018001a004c
007a007f009100a300b300b400ce00d500f200f300f601100138016801a1
01b001e001ec02090222024f0270029602a502ad034e039103c104350442
046b04cd04da0586058b076107fefca6fe93feadfed1ffb7ffd10003000e
00180026004600690081008f00a500bf00d300d500d900dd00e20119012b
0138013b015a015e016801730188019401ad01c501d101ea01f202000200
02000222023b0244024f026f0272027e02820293029402a502cf02cf02d0
02da02dd02eb02f5030503220336037103a103b003b803d003e604100426
042e0431044f045a04ff053205320547055305a805ab05c205f0063c0664
067006e80782078408ccfd2afddefe00fe68feb0feb3ffaa00080059007a
0091009e00a200af00b400bb00ca00cc00ce00d900e000f40114011a0121
0127012b01390146014b014d0157015c01650182018701920198019b01a2
01ae01c501c501d102070222022b024102530261026502840287028d02b4
02b402ba02c902d602d802ed02f503170323032b03310349035a035b036e
03710374037e03840391039103aa03cf03d303e703e803ed04080417041e
0475047a049904a704b404d1054c056d056d05a205bf05c005d105fc05fc
0602061a061c062f066a06a806e2070607360750078907d407f30870011c
012a011a01200000000000000000000000000219000b001e02aa0214047f
01ed0000001d0104000f0091002b01880153011201f3003f03fe0168010e
047f01ed036e03150219041300000000064004b00000027401bb003501c5
007f06020301000004e000b201dc02e004c3023d00d50160011904a7036e
05ca022100ab0426009002bc02bb014200b4023c0256029c030001e501a8
00e5006b00780094016b017300ab01ed013a017d0137017f00d402160353
0184003cffa202040109014901f0006e031500810464005e000000000000
000000000000000000000000000000000000000000000000013900dc00e9
fe9e040d047c012b00b80096005900ac00df01a900fa0105ffec00170003
005500610004008c00a3008500280120005d00d6007f012601190104016c
06cf00b4010600000737063e047a00f000f900e905ba042604420000ffe7
fe69049e04e3ff37ff2d01200105012000a800740068004700f200e500d9
00bd00a800680047005c0048000a0028003200410050005a0064007d0087
0091ffb0ff9cff83ff79ff6f00cb012000fa012c01fa01a000d500b8005c
003c00c800c8008f00d9018b00b300470000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000fe6400c000ea01180125013203b003ed05760590
05aa05b405be05cd063100780084009b00cc00e200f4010a0120016300d1
00ea00f7010801420019002c00340041003800480058006c025903bd0043
011a007000d30028003700420050005a0064007300780082008c009c00a5
00bd00ce00f00110015c00be00d801020117012c016300ea01080041004b
0055005f007300a60109018301b300410064001e002a00eb00fa010e0138
0274002c00400082009600b600c000cc00dc00e600f000ff010a0120012c
013b01440156016300f70057006401100136005001b10000ffb60039004e
004403cc00e5002401100042012201a400f0006000e0000e001d003905e3
0102002cfe4eff38026903bd011600ff000e00a00054001b003d01710041
000f005000fd0015014f0035fe52002c00d3010304b001d200b600c00099
0265ff870377fe6c00cb00a9005c0040047607440472048504fb40425554
403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a2928272625242322
21201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807060504
030201002c4523466020b02660b004262348482d2c452346236120b02661
b004262348482d2c45234660b0206120b04660b004262348482d2c452346
2361b0206020b02661b02061b004262348482d2c45234660b0406120b066
60b004262348482d2c4523462361b0406020b02661b04061b00426234848
2d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d4423
5920b0ed51582320b04d44235920b09051582320b00d44235921212d2c20
204518684420b001602045b04676688a4560442d2c01b10b0a432343650a
2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0172370b1021745
3ab10200080d2d2c45b01a234445b01923442d2c2045b00325456164b050
515845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b00043
60442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8
100062602b0c642364615c58b00361592d2c45b0112bb0172344b0177ae4
182d2c45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae4
1b038a45186920b01723448a8a8720b0c05158b0112bb0172344b0177ae4
1b21b0177ae45959182d2c2d2cb0022546608a46b040618c482d2c4b5320
5c58b002855958b00185592d2c20b0032545b019234445b01a2344456523
4520b00325606a20b009234223688a6a606120b01a8ab000527921b21a1a
40b9ffe0001a45208a54582321b03f1b235961441cb114008a5279b31940
201945208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f
4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f4323
43650b2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b003
252349b04060b0206320b000525823b002253823b002256538008a63381b
212121212159012d2c4bb06451584569b00943608a103a1b212121592d2c
01b005251023208af500b0016023edec2d2c01b005251023208af500b001
6123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20
b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3e
b02a2a2d2c352d2c76b8023623701020b802364520b0005058b00161593a
2f182d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000
621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200
802f2b59b002602d2c0c6423648bb84000626023212d2cb4000100000015
b00826b00826b00826b008260f10161345683ab001162d2cb40001000000
15b00826b00826b00826b008260f1016134568653ab001162d2c4b53234b
515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53
234b515a58381b2121592d2c4b5458381b2121592d2cb0134358031b0259
2d2cb0134358021b03592d2c4b54b012435c5a58381b2121592d2cb01243
5c580cb00425b00425060c6423646164b0035158b00425b00425012046b0
1060482046b0106048590a21211b2121592d2cb012435c580cb00425b004
25060c6423646164b807085158b00425b00425012046b8fff060482046b8
fff06048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c
4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b
2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121
592d2c462346608a8a462320468a608a61b8ff8062232010238ab902a702
a78a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2c
b1020042b123018851b1400188535a58b910000020885458b20201024360
4259b12401885158b920000040885458b2020202436042b12401885458b2
022002436042004b014b5258b2020802436042591bb940000080885458b2
02040243604259b94000008063b80100885458b202080243604259b94000
010063b80200885458b202100243604259b12601885158b94000020063b8
0400885458b202400243604259b94000040063b80800885458b202800243
604259b12801885158b94000080063b81000885458ba0002010000024360
42595959595959592d2cb0024354584b53234b515a58381b2121591b2121
2121592d0000000100000006cf5c146807215f0f3cf50819080000000000
a2e33c1d00000000ccb58106fafafcfd1000087200000009000100010000
000000010000073efe4e00431000fafafa0b100000010000000000000000
0000000000000f940600010000000000023900000239000002aa00b803cb
00700473001204730046071d005905c7005a01e7005c02aa006b02aa0043
031d001c04ac00550239007502aa0073023900930239fffd047300560473
00a2047300330473004d047300260473005b047300570473005704730053
0473004102aa00c902aa00aa04ac005f04ac005504ac005f04e3006a07cd
003d05c7000005c7009605c7006105c700940556009504e3009706390062
05c700960239008c0473002305c7009904e3009d06aa009105c700980639
0059055600950639005905c700960556004a04e3002c05c700930556ffff
078d0007055600000556fffd04e3001602aa00920239fffd02aa002604ac
00730473ffed02aa002a0473004904e300870473005504e3005404730041
02aa001804e3005404e30092023900930239ffa20473008902390093071d
007e04e3009104e3005204e3008b04e3005b031d00870473003002aa001f
04e3008d0473000b063900090473000c0473000e04000022031d003c023d
00b0031d002d04ac004305c7000005c7000005c700610556009505c70098
0639005905c7009304730049047300490473004904730049047300490473
00490473005504730041047300410473004104730041023900920239ffe9
0239ffcd0239ffd004e3009104e3005204e3005204e3005204e3005204e3
005204e3008d04e3008d04e3008d04e3008d047300440333005604730054
0473000d0473003b02cd00420473fffe04e3008b05e5fff705e5fff70800
00d802aa00bb02aa0005046400310800ffaa0639003f05b4009804640032
0464003c0464003c04730001049c006f03f4002c05b4007a069600a10464
00000231000002f6002502ec001a06250037071d005804e3005704e30065
02aa00c304ac0055046400540473ffec0464001f04e5001a047300600473
006a080000c905c7000005c700000639005908000048078d00580473fffc
08000000040000840400006902390098023900720464003103f4002f0473
000e0556fff70156fea90473ffe002aa004b02aa004b04e3001f04e3001f
047300440239009302390075040000710800000105c700000556009505c7
000005560095055600950239006a0239ffae0239ffbf0239ffc106390059
063900590639005905c7009305c7009305c700930239009302aa000302aa
fff302aa001302aa001a02aa00cd02aa009102aa002602aa006002aa0039
02aa000304e3000a0239000a0556004a0473003004e3001604000022023d
00b005c7fffd04e300530556fff70473000e0556009504e3008b04ac0055
04ac006d02aa005b02aa001902aa002806ac005c06ac005c06ac00280473
00000639006204e300540239008c0556004a0473003005c7006104730055
05c700610473005504e30054046bffed02aa00c805c700000473004905c7
00000473004905c7009405c0005105c7fffd055600950473004105560095
0473004104e3009d0239007904e3009d0315009504e3009a03d5009305c7
009804e3009105c7009804e300910639005904e3005205c70096031d0087
05c70096031d00500556004a0473003004e3002c02aa001f04e3002c03d5
001e05c7009304e3008d05c7009304e3008d04e300160400002204e30016
0400002204cf009a063900560691005604eb004e04da004e03cc004e0579
004e0392003005b9004e046bffed04d500b8032b004f08c000290800004f
040000990800004f040000990800004f040000980400009807d5016a05c7
008f04ab005504d5009d04ac005504d5022204d5010505abffe9050001c9
05ab027e05abffe905ab027e05abffe905ab027e05abffe905abffe905ab
ffe905abffe905abffe905ab01c005ab027e05ab01c005ab01c005abffe9
05abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe905ab
ffe905ab027e05ab01c005ab01c005abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905ab02d605ab006605abffea
05d5ffff04d500920800000007eb013007eb012007eb013007eb012004d5
00b204d5008004d5002a082b0198086b01b807550010060000f40600006f
0440003a0540003704c0003f0415004004000025060000550647008c0473
009005abffc701eb008d03d500860715002303e9001804d5009202d6005c
02d6005c04d500b202d6004d05c700000473004905c700610473005505c7
006104730055055600950473004105560095047300410556009504730041
0639006204e300540639006204e300540639006204e3005405c7009604e3
009205c7000504e300190239ffba0239ffbb0239ffda0239ffda0239ffe1
0239ffe20239004802390047047300230239ffa205c70099047300890473
008d04e3009d0239ffed05c7009804e3009105c9009c04e3008e06390059
04e300520639005904e3005205c70096031d002a0556004a0473003004e3
002c02aa000705c7009304e3008d05c7009304e3008d05c7009304e3008d
05c7009304e3008d078d0007063900090556fffd0473000e0239008d05c7
0000047300490800ffaa071d00580639003f04e3005702aa00c9078d0007
06390009078d000706390009078d0007063900090556fffd0473000e0239
009502aaffd70473000d04cd005a06ac005c06ac002906ac003006ac002f
02aa00bc02aa002602aa00bb03b8fff405c7ffe806d3ffbb073fffbb03ca
ffbb0699ffa6076bffc806b4ff9c0239ff2905c7000005c7009605c00000
0556009504e3001605c700960239008c05c700990556000006aa009105c7
0098052600660639005905c7009a0556009504cd005a04e3002c0556fffd
0556000006790056066a00620239ffcc0556ffff04eb004e039c004e04e3
008e0239008204a8006c04e200900473000f03af004e04e3008e0453004e
023900930476008e0473000f04e500900473000b0390004e04e3005204f3
00760429004e04a80076049b00110607007606c2004e0239ffcd04a80076
04e3004e04a8007606c2004e055a00970715002f048900a405b100580556
004a0239008c0235ffca0473002308c0001a0880009d0700003704e2009a
04fa000005c0009905c7000005c0009b05c70096048900a405b3fffa0556
0095073b00170503002c05c0009905c0009904e2009a059d002006aa0091
05c700960639005905c000990556009505c7006104e3002c04fa000006d4
00590556000005d8009a059f007d080a009a0827009a06f5001a07d5009d
05c0009b05b100570840009605c000040473004904f1005c04eb00960355
00880514fff90473004105acffff03fa001804eb008c04eb008c04010088
0515001905eb009b04d5008804e3005204d5008804e3008b0473005503eb
00150473000e070000540473000c04eb008904a5007206ab008c06c0008d
05d5002806d5009504eb0099046b003806d5009104abfffb0473004504e3
000003550088046b005104730030023900930240ffd00239ffa207c00018
0740008c04e30000040100880473001204d5008803e50096039300880800
004108eb00a306200030000001010000001e000000310000003100000101
0000007f0000007e0000008c0000008c0000010100000010000001010000
01210393007d0000008c026500c8000003020000ff0102aa00c904a90059
049b004103a7000a0466003204ea0082022f0087034e005a04ed00870503
007d022f0087042c002803ed004b03f8004104e30087050a0037022f0087
0316004b04e800500459000a04c0006404b2006403ff000a0418000a0495
0082042c002805b8005a0563002d045e0087045e0087045e008702360050
04090050068b0087022fffac042c0028042c002803f8ff1603f8ff160479
003205b8005a05b8005a05b8005a05b8005a04a9005904a9005904a90059
049b004103a2000a0466003204ea008202950000038100000503007d0295
0000042c002803ed004b03f80041050a00370316004b04e8005004c00064
04b200640418000a04950082042c002805b8005a0563002d022f0087049b
004103ed004b04b2006404db00410000ffdc0000ff250000ffdc0000fe51
028d00ab028d00a002da004303c0007e0196ffba00000046000000460000
00460000004600000048000000460000004600000046047e0188047e0150
047e0104047e009e047e012d047e00ea047e00d5047e009c047e00bc047e
00ee04350085028d00c1043500b3060001000600010002be005806000100
047e00a5047e00bd047e00de060001000600010006000100060001000600
010000000046060001000600010006000100060001000600010006000100
060001000600010004e6ffba060001000600010006000100053200390532
0039022cffba022cffba06000100060001000600010006000100049e0034
047800300430ffba0430ffba0376000a0376000a060e00290708002902e2
ffba0456ffba060e00290708002902e2ffba0456ffba05280097046f000a
035200030600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000000003000000046000000460000004000000046060001000600
01000000ffdc0000fe510000ff160000ff160000ff160000ff160000ff16
0000ff160000ff160000ff160000ff160000ffdc0000ff160000ffdc0000
ff200000ffdc0473002d0800000006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100028d007f028d00670600010005a0002e03c0007e01e80006
0207ffcf01bc005e01e0fffa039c0006039c000601bc005e01e0001a0528
0097049e0011022cffba022cffba01bc008801e0001a0532003905320039
022cffba022cffba02be0036035200030532003905320039022cffba022c
ffba0532003c0532003c022cffba022cffba049e0034047800300430ffba
0430ffba049e0034047800300430ffba0430ffba049e0034047800300430
ffba0430ffba02be006902be006902be006902be00690376000a0376000a
0376000a0376000a073200400732004004deffba04deffba073200400732
004004deffba04deffba0880004008800040062cffba062cffba08800040
08800040062cffba062cffba0430ffba0430ffba0430ffba0430ffba0430
ffba0430ffba0430ffba0430ffba0454003403c000460454ffba02e2ffba
0454003403c000460454ffba02e2ffba0610002f0610002f0270ffba0298
ffba04e6002704e600270270ffba0298ffba045400290454002902e2ffba
02e2ffba039c0023039c002301e0ffba01e0ffba02e2002102e200210352
ffba0352ffba0454003e0454003e022cffba022cffba02be005803520003
03c0ffba039cffba039c0006039c000605280097046f000a05280097049e
0011022cffba022cffba0454001004c4001003e400220454001a03e40022
0454001a03e400220454001a060001000600010000000046000000460600
010006000100060001000000004600000046060001000600010000000048
000000460600010006000100060001000000004600000046000000460000
004600000040000000300600010000000046000000460600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010006000100060001000600010006000100028d
00ca028d00c7028d00c60600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010002be00690100ffba0800ffba1000ffbb06d3
005905b0005206a3009305cb008d0000fd880000fbc10000fc5f0000fe31
0000fcad0000fd550000fe260000fdf10000fd180000fc690000fd950000
fbe00000fc700000fed40000fecd0000fea0041b007806ac005c06ac0019
0000fe450000fd550000fda60000fc5f0000fe250000fd180000fbe00000
fafa0000fb360000fc700000fb870000fb9b0000fcce0000fc540000fbc3
0000fc940000fbf50000fdb00000fe590000fd7e0000fc820000fd340000
fe500000fe460000fcd10000fd3e0000fd020000fc3a0000fce90000fc26
0000fc070000fc2f0000fb9e0000fb760239009305c700000473004905c7
00000473004905c700000473004905c700000473004905c7000004730049
05c700000473004905c700000473004905c700000473004905c700000473
004905c700000473004905c700000473004905c700000473004905560095
047300410556009504730041055600950473004105560095047300410556
009504730041055600950473004105560095047300410556009504730041
0239006a0239005d0239008c023900930639005904e300520639005904e3
00520639005904e300520639005904e300520639005904e3005206390059
04e300520639005904e3005206d3005905b0005206d3005905b0005206d3
005905b0005206d3005905b0005206d3005905b0005205c7009304e3008d
05c7009304e3008d06a3009305cb008d06a3009305cb008d06a3009305cb
008d06a3009305cb008d06a3009305cb008d0556fffd0473000e0556fffd
0473000e0556fffd0473000e05c70000047300490239ffca0239ffca0639
005904e3005205c7009304e3008d05c7009304e3008d05c7009304e3008d
05c7009304e3008d05c7009304e3008d0000fef90000fef90000fef40000
feef0489fffd03550007073b001705acffff04e2009a0401008804e2009a
0401008805c7009604d50088047300010473001204730001047300120556
00000473000c059f007d04a50072059f009c04e3009205cf00590473004c
0639005604e3005205320039022cffba0270ffba0298ffba04e60027022c
0065022c0016022c0016022c0011022c0043022cffd20000fef00000000f
0000fff502aa009002aa0090000000060000005e0000005e0000ffcb01bc
000f01e0ffbf01bcfff501e0ffcd01bc001d01e0000901bc008801e0001a
039c0006039c0006039c0006039c000605280097046f000a053200390532
0039022cffba022cffba0532003905320039022cffba022cffba05320039
05320039022cffba022cffba0532003905320039022cffba022cffba0532
003905320039022cffba022cffba0532003905320039022cffba022cffba
0532003905320039022cffba022cffba049e0034047800300430ffba0430
ffba049e0034047800300430ffba0430ffba049e0034047800300430ffba
0430ffba049e0034047800300430ffba0430ffba049e0034047800300430
ffba0430ffba049e0034047800300430ffba0430ffba02be004f02be004f
02be006902be006902be006902be006902be004f02be004f02be006602be
006602be006902be006902be006902be006902be002f02be002f02be0022
02be00220376000a0376000a0376000a0376000a0376000a0376000a0376
000a0376000a0376000a0376000a0376000a0376000a0376000a0376000a
0376000a0376000a073200400732004004deffba04deffba073200400732
004004deffba04deffba073200400732004004deffba04deffba08800040
08800040062cffba062cffba0880004008800040062cffba062cffba0430
ffba0430ffba0454003403c000460454ffba02e2ffba0610002f0610002f
0610002f0270ffba0298ffba0610002f0610002f0270ffba0298ffba0610
002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298ffba
0610002f0610002f0270ffba0298ffba04e6002704e6002704e6002704e6
0027093e0032093e00320740ffba0740ffba060e00290708002902e2ffba
0456ffba045400290454002902e2ffba02e2ffba045400290454002902e2
ffba02e2ffba045400290454002902e2ffba02e2ffba060e002907080029
02e2ffba0456ffba060e00290708002902e2ffba0456ffba060e00290708
002902e2ffba0456ffba060e00290708002902e2ffba0456ffba060e0029
0708002902e2ffba0456ffba039c0023039c002301e0ffba01e0ffba039c
0023039c002301e0ffb101e0ffb1039c0023039c002301e0ffba01e0ffba
039c0023039c002301e0ffba01e0ffba0454003e0454003e022cffba022c
ffba0454003e0454003e0454003e0454003e0454003e0454003e022cffba
022cffba0454003e0454003e049e0034047800300430ffba0430ffba02be
005803520003031a001a031a001a031a001a039c0006039c0006039c0006
039c0006039c0006039c0006039c0006039c0006039c0006039c0006039c
0006039c0006039c0006039c0006039c0006039c000605280042046fffd9
05280097046f000a022cffba022cffba039c0006039c000605280097046f
000a022cffba022cffba05280097046f000a067f0044067f0045067f0044
067f004501a800280000fe290000fe8c0000ff250000ff230000fefa0000
ff7a0000fe5908fc003208ad00320000ffb50000ffb60000fef00000ff59
0000fe590000ff8c01b4000002f700000000fe850000ff0704cd00320000
ff580000ff580000ff59073200400732004004deffba04deffba08800040
08800040062cffba062cffba0454003403c000460454ffba02e2ffba03c0
007e02e2002102be0058022cffba0290ffba01f4002f01f4003b01f40012
01f400b101f4006d060e002907080029022f00870000fec803500000045e
008703e4fff50454fff503e400220454001a03e400220454001a03e40022
0454001a03e400220454001a03e400220454001a03e400220454001a047e
0072047e00bd03e4000f0454000f04e3001b06b1001e05c0009b04e30087
05c0000a04e3000a05c7006905c700610473005505c7fffd06b3001e05c0
005c04e3005404da004e055600660503006f04e3ffac0639006205180002
07720092023900930239000705c70099047300890239001b0473000f07ef
009605c7ffad04e3008e063900560718005905f300550641001e04e3008b
05560095055600640473006304cd005a02e1001e02aa001f04e3001802aa
001f04e3002d066a006205c70093062900000473000e04e3001604000022
04e3003a04e300590436002a04360039047300330473005b03fa001e04a2
001f04e3008b023d00b003fb00b004ad005602aa00b80aaa009409c70094
08e300540956009d071c009d047200930a3a009808000098071c00910473
004c05c70000047300490000fefe05c70000047300490800ffaa071d0058
0639006204e300240639006204e3005405c70099047300890639005904e3
00520639005904e3005204e3003a043600220239ffa20aaa009409c70094
08e300540639006204e30054084300960552009505c7009804e3009105c7
00000473004905c700000473004905560095047300410556009504730041
0239ff370239ff2d0239fff40239ffe60639005904e300520639005904e3
005205c70096031dffcd05c70096031d008005c7009304e3006705c70093
04e3008d0556004a0473003004e3002c02aa001f049e002e0429004905c7
009604e30092059f009c050c0052050c005204e300160400002205c70000
0473004905560095047300410639005904e300520000fefd0639005904e3
00520639005904e300520639005904e300520556fffd0473000e04730045
04e3005404e3008204e30087047300340473001404e3005404e300540473
004c0641004c03fa004f03fa001805870018048a005202aaffc404e30054
04e3005404b000520473000f04ce000f04e3008a04e3009204e300920239
001b0239006b033e004402a8000002d900140239009304d40093071d0085
071d0085071d007e04e3ffa604e3009104eb008c04e3005206ab005206c2
004e05ff0052031dffe6031dffe6031dffe6031d0087031d0087031d0087
031dffe604ab008a04ab008a0473003002aaffc402aaffc402aaff9b0451
001e02aa001902aa001f04e3001b04f8004b04a800910473001206390009
0473000f0491000f04000022057000220436002204360022047300420473
005504730042047300550639005904eb0096048a004f04b0005204d50088
03ab001e04730014039e008804e3005b0473004204730055083f00540789
005409af00540682001f0446001f0698001f06f4001806350093058a0093
0445001e0482008802f1003202f10032018effe202040032020400000204
000003000032042f000002e2000001e7005c03cb00700239009802390075
0239009402aa00f302aa00f3030000320300003204ac005f04ac005f04ac
002a04ac002a02aa012102aa00bb02aa002a02aa012102aa001302aa002a
02aa00bb02aa00ca02aa00ca02aa00f302aa00f302aa00a602aa00a602aa
00a602aa001302aaffe102aafffb02ed0000012100320302003202ee0000
03000032031000960310009603100096031000960310009602aa006202aa
006202aa000302aa001d0400006904570096045700960457009604570096
0457004304570043045700430457004304570043031000430457002f0457
002f0457002f0457002f0457002f0310002f045700250457002504570025
04570025045700250310002f0457001a0457001a0457001a0457001a0457
001a0310001a045700420457004204570042045700420457004203100042
045700960457009604570096045700960457004204570042045700420457
004204570042031000420457002f0457002f0457002f0457002f0457002f
0310002f0457002f0457002f0457002f0457002f0457002f0310002f0457
002604570026045700260457002604570026031000260457004204570042
045700420457004204570042031000420457009604570096045700960457
009604570042045700420457004204570042045700420310004204570026
045700260457002604570026045700260310002604570023045700230457
00230457002304570023031000230457002f0457002f0457002f0457002f
0457002f0310002f0457004b0457004b0457004b0457004b0457004b0310
004b04570096045700960457009604570096045700420457004204570042
0457004204570042031000420457001a0457001a0457001a0457001a0457
001a0310001a045700240457002404570024045700240457002403100024
0457002f0457002f0457002f0457002f0457002f0310002f0457004e0457
004e0457004e0457004e0457004e0310004e045700960457009604570096
045700960000feaf0000febf0000fdb50000fec80000ff780000feb10000
ff3d0000fe6f0000feae0000ffce0000ff660000fe6f0000fec80000fec8
0000ff680000ff680000ff68000000000000ff1f0000ff1f0000ff440000
ff5f0000fe870000ffec0000ff9c0000ff510000ff510000ff510000febf
0000ff15000000000000feb10000ff3d0000ff6b0000fef20000ff470000
ffce0000fe870000febb0000feae0000feae0000fec80000fec80000fea6
0000febf0000fdb70000febe0000fea60000febf0000fdb50000fe1f0000
fee20000ff9c0000fe870000ff440000feba0000ff230000ff9a0000fdb9
0000fe3b000000000000fea70000ff680000fe170000ff740000fe870000
fe000000ff660000ff440000fea70000fea70000fea70000ff030000ff52
0000fd1f0000ff530000ff530000ff530000feb10000feb00000ffa10000
fe8c0000feb80000feaf0000fea20000feba0000fdf40000ff190000ff2d
0000fe8c0000fe8802aa00bb02aa002a02aa00c804e2006704a8000a0629
0000080200000629000005ff005206c2004e056900140639005904e30052
05c700770473005504e30097039e008806030000043c001d066f000a04e2
000a07ef0096071d0085059f007d04e3008a059f009c04d7000a05560064
055600640524001404d4000a05e1005504a0004b040e0014038400280569
001404f1005c047300550239ffa20639005603d4005103d4005105560095
05c000990473004104eb008c0a3d0059063a001406f4001a059f001b07ce
008c065e0093055600000473000b0768008c066700930679005606070076
089e008c07d800930503004603fa004306790056060700760639005604e3
00520685ffff052c000b0685ffff052c000b08f6005907cb005206840023
051a00230a3d0059073500550000fe370a3d0059063a001405c700610473
005504ac000f0000fea60000feb10000ff8d0000ff8d0000fc2b0000fc4c
05c0009904eb008c05c0001104eb001b0556009504e3008b059f009c04c9
00880503002c03fa001804e200110401000d0617001a04fc002807090096
05b6008809020099075f008805c7003b049f003405c700610473005504e3
002d03eb001506d2002c05830015059f007d04a5007206da000a056d000a
06da000a056d000a0239008c073b001705acffff059d009a04c80088059d
00200515001905c7009604d5008805c7009604d50088059f007d04a50072
06aa009105eb009b02aa001a05c700000473004905c70000047300490800
ffaa071d0058055600950473004105cf00590473004c073b001705acffff
0503002c03fa00180503002c0436002205c0009904eb008c05c0009904eb
008c0639005904e300520639005604e3005205b10057046b003804fa0000
0473000e04fa00000473000e04fa00000473000e059f007d04a5007207d5
009d06d5009505c0005e04e30054083e005e077a005407ad004606c40043
05430046044a0043081a002007a5001908430096076600880639006204b0
00520620002d059b00150000ff430000fec90000ff770000ffb00000ff47
0000ff560000ff740000fed70000feac000000000000ff520000ff560000
00000000feac0000fd9a000000000000ff6a0000ff7c0000ff690000ff56
0000feac0000ff7f0000ff560000fdef0000ff430000ff690000ff7c0000
00000000fdae0000ff8c000001020000feef0000feef0000fefd0000fef9
0000ff530000fef80000fef905c700000473004905c7009604e3008705c7
009604e3008705c7009604e3008705c700610473005505c7009404e30054
05c7009404e3005405c7009404e3005405c7009404e3005405c7009404e3
005405560095047300410556009504730041055600950473004105560095
04730041055600950473004104e3009702aa00180639006204e3005405c7
009604e3009205c7009604e3009205c7009604e3009205c7004e04e3003b
05c7009604e300920239ffd20239ffd20239001b0239ffce05c700990473
008905c700990473008905c700990473008904e3009d0239009304e3009d
0239ffeb04e3009d0239ffdd04e3009d0239ffcb06aa0091071d007e06aa
0091071d007e06aa0091071d007e05c7009804e3009105c7009804e30091
05c7009804e3009105c7009804e300910639005904e300520639005904e3
00520639005904e300520639005904e300520556009504e3008b05560095
04e3008b05c70096031d008705c70096031d008705c70096031d008705c7
0096031d00590556004a047300300556004a047300300556004a04730030
0556004a047300300556004a0473003004e3002c02aa001f04e3002c02aa
001f04e3002c02aa001f04e3002c02aa001f05c7009304e3008d05c70093
04e3008d05c7009304e3008d05c7009304e3008d05c7009304e3008d0556
ffff0473000b0556ffff0473000b078d000706390009078d000706390009
055600000473000c055600000473000c0556fffd0473000e04e300160400
002204e300160400002204e300160400002204e3009202aaffde06390009
0473000e047300490239008d04eb004e04eb004e04eb004e04eb004e04eb
004e04eb004e04eb004e04eb004e05c7000005c7000006f3fff206f30000
06f3fff206f3000006f3004306f3004303cc004e03cc004e03cc004e03cc
004e03cc004e03cc004e061efff2061e000007aefff207ae000007aefff2
07ae000004e3008e04e3008e04e3008e04e3008e04e3008e04e3008e04e3
008e04e3008e068ffff2068f0000081ffff2081f0000081ffff2081f0000
081f0014081f001402390090023900900239ffb60239ffc40239ffde0239
ffec0239ffb30239ffc00301fff2030100000491fff2049100000491fff2
04910000049100140491001404e3005204e3005204e3005204e3005204e3
005204e30052069dfff2069d00000855fff20855000007c9fff207c90000
04a8007604a8007604a8007604a8007604a8007604a8007604a8007604a8
00760682000007fe00000862000007aefff306c2004e06c2004e06c2004e
06c2004e06c2004e06c2004e06c2004e06c2004e06cefff206ce00000886
fff20886000007fafff207fa000007fafff307fafff304eb004e04eb004e
03cc004e03cc004e04e3008e04e3008e0239ffe70239008d04e3005204e3
005204a8007604a8007606c2004e06c2004e04eb004e04eb004e04eb004e
04eb004e04eb004e04eb004e04eb004e04eb004e05c7000005c7000006f3
fff206f3000006f3fff206f3000006f3004306f3004304e3008c04e3008c
04e3008c04e3008c04e3008c04e3008c04e3008c04e3008c068ffff2068f
0000081ffff2081f0000081ffff2081f0000081ffff3081ffff306c2004e
06c2004e06c2004e06c2004e06c2004e06c2004e06c2004e06c2004e06ce
fff206ce00000886fff20886000007fafff207fa000007fafff307fafff3
04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e05c7
000005c7000005c7ffd105c7ffdd05c7000002aa00dc02aa00ca02aa00dc
02aafff302aafff304e3008c04e3008c04e3008c04e3008e04e3008c06e6
000006e60000075700000757000005c7009602aafff202aafff202aafff3
0239ffe50239ffdb0239ffce0239ffce0239ffc20239ffbb0239ffe80239
ffde03c9000003c9000002aa000002aa000002aafff304a8007604a80076
04a8007604a8007604f3007604f3007604a8007604a800760556fffd0556
fffd06e6ffd8074affdd061e000003b8fff403b8fff402aa002a06c2004e
06c2004e06c2004e06c2004e06c2004e0765ffd1069dffdd0796ffd106ce
ffdd066a006202aa00bb02aa00dc0473000a05c7006105c70061071d007e
05c7002109cd0096078d000705c7002004e3002d08b000140400003004c1
00660000ff530000ff530000ff530000ff530239001b0239ffa204730000
0556001206b3005403fe005706ab0091040c001f05d6ffe605d6ffe602aa
008402aa008402aa00c902aa00c902aa009102aa002a02aaffc502aaffc3
02aafff302aa00c902aa00a902aa00a902aa00a902aa00a9032e001e032e
001e02aa003a0000ff730000ff9d0000fec80000ff230000ff720000ff72
0000fee70000ff9d0000ff530000ff530000ff530556009504e3008b04b5
000006350000071d006104eb000f04730055049900910499001b0401008c
03fa001802390093040f00490476008e039e000e05eb009b04eb008c04e3
00520473003404f1005204f1005204f10021078d00540492004b04e30053
04e3005304e9008c04abfffb04abfffb03eb001504a8007604e300510624
005104e000510473000b063900090400002203df002203f2004b04ec0014
035500880473001204d5008804e9008c060700760515001903e300000591
000003a2003203a2000003a30032035500320355003204030032037c0032
0172005502de003203b00032031e00320422003203770032037800320426
0032037a0032035b003203ac003203770032037b00320514000003050032
030500320321003204b600320321003203210032030200320302003202cf
003202cf0032032000320121003202ca00320484003402f2003203480032
030a003203490032034900320320003201bc000a02f20032034200320484
003202e90000034c000a031b003202e900000343003203da003203080000
012100320204003202f2003202e90000031b003202e900000342003203da
003203080000077d00460a98004602a700460a7800460541ffba01e9001e
045400100000ff0d0000ff350000fece0000feb70000fec90000ffc70000
ff4f0000ff9e0000fef002be006902be00690376000a0376000a03c0ffba
039cffba03c0ffba039cffba05c8003905920032061600820519004b0524
0041060f008705580028068f002d04ac00550000fe3b0000fe660000fe68
0473fffc0400008403d5ffba01e0ffba01e0ffb101e0ffba01e0ffba06d0
002e098400230400000008000000040000000800000002ab000002000000
015500000473000002390000019a000000ab00000000000005e5fff705c7
006106aa009105eb009b0760008d07a1005407a1005b05c7000005c70061
0473001404e3001104e3002c047300390400002205290042000001010000
ff420000fead0000ff3a0000ff5304f3000a05c7006905c7006105c70069
048900a4035500880000ff430000ff010000ffac0316007d0000ff370298
ffba033d001e0000ff3a0000ff480000ff490000ff7e0000ff4f0000ff4a
0000fe9e0532003905320039022cffb6022cffb60532003c0532003c022c
ffba022cffba0532003905320039022cffba022cffba0532003905320039
022cffba022cffba0532003905320039022cffba022cffba053200390532
0039022cffba022cffba0532003905320039022cffba022cffba049e0034
047800300430ffba0430ffba049e0034047800300430ffba0430ffba02be
004f02be004f02be006902be00690376000a0376000a0732004007320040
04deffba04deffba0454003403c000460454ffba02e2ffba0454003403c0
00460454ffba02e2ffba0454003403c000460454ffba02e2ffba0610002f
0610002f0270ffba0298ffba0610002f0610002f0270ffba0298ffba060e
00290708002902e2ffba0456ffba060e00290708002902e2ffba0456ffba
060e00290708002902e2ffba0456ffba02e2002102e200210352ffba0352
ffba02e2002102e200210352ffba0352ffba0454003e0454003e022cffba
022cffba0454003e0454003e022cffba022cffba0454003e0454003e022c
ffba022cffba039c0023039c002301e0ffba01e0ffba0376000a0376000a
0376000a0376000a073200400732004004deffba04deffba04e3ffc104e3
005402aafff3071dffc104e3ffd504e3ffc5031dffc1031dffc10473ffff
02aaffda0400002104e3008302f0003204dc004e06fb001f0239001b0239
001b04e3001404a8001404f8001404e3008704e3005402aa001806250054
0473008902390070071d007e04e3009104e3008b031d00660473003003ba
ffc40473000b0473000c040000220473004904e3005404e3005404730041
03fa004f03fa0018053e0051023900930473003402aaffc404e3008d0436
002203210032030a0032030a00060348003202cf003201f0000a01f00000
0320003202f100320174000a01210032012100320174000a02760000018e
003201500032024900320484003404840032035f0000035f003202fa0032
0348003204030032030200320239000001bc000a0340000a035e003202ea
003202ea003202e9000002e4003202e4003203be0032030a003202e80032
0000fe920000fe920000ff730000fe9f02aa00c903050032030200320348
003202ee0000030200320639006205c700000556001e05c7006102aa0041
04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb
004e0239ffb60239ffb60239ffc40239ffc40239ffb60239ffb60239ffc4
0239ffc404a8007604a8007604a8007604a8007604a8007604a8007604a8
007604a800760239ffc90239ffc90239ffc90239ffc904a8007604a80076
04a8007604a8007603e400220454001a03df003005c7fffd05c700160556
00000556009504730041047300230239ffa20633005904e3005b05c70000
031d001b0556fffd0473000e047300340473005504730034023900930489
00110355001b055600000473000c055600000473000c0503006f03fa004f
059d0020051500190000fec60000fed40000fec60000fed40000fe5f0000
fe5f0000ff720000ff730000fee7080000000401005d0473003404e30011
0239001b04e300060556fffd05c700960473004902aaffcd05c7009604e3
009205c700990473008904e30016040000220473002804540096037c0088
05b9004e0000ff530000ffbc0000fefe0000fefe0000fea40000fea40239
009305c9009c05c7009805c9009c0000fee00000ff300000fed40000fed5
0000fec00000fed00000fed80000fed80000fed80000fed80000fdc60639
005904e3005b078d00070639000905b900910000fe9b061b005904d90006
085b000706de000602aa00c9031c005501e7005c01e7005c040000990400
009902aa00b802aa00b802aa00b802aa0003000000460000003600000031
0000005600000044000000560000004a0000004904e3002c0473002b04a3
005c0379003f048800480453003e04870031045f003e048b005c04330040
04730053048f005c046f00560381003b0481003c04810056049b00320481
005004890062043b004b04730053048a005505a3005005d3005905d90096
092a009605d9008c0316003b059800990639005904e30054021d00820470
00820277008204e300540250000f04e3008a0473005c047300620316003b
027700820239009304d0000004ee009804c7005c04f10098048600980429
0098053d005c051200980250009803d0002904f40098042c009806280098
050c0098054a005c048c00980553005c04f60098047b004a0419002904eb
00900492000a0651001404a2001204a600080429001f06cc000006b9005c
042c00380548003e048d009804f10024050f008e04d0000004d0000004d0
000004d0000004d0000004d0000004c7005c048600980486009804860098
048600980250fff9025000900250ffd70250ffde050c0098054a005c054a
005c054a005c054a005c054a005c04eb009004eb009004eb009004eb0090
04a6000804d0000004d0000004d0000004c7005c04c7005c053d005c04f1
009804f100240486009804860098048600980486009804860098053d005c
053d005c04c7005c05120098051200360250ffd00250ffe50250fff10250
00570250009805d8009803d0002904f40098042c0098042c0098042c0098
042c0098050c0098050c0098050c009805000098054a005c054a005c054a
005c04f6009804f6009804f60098047b004a047b004a047b004a047b004a
0419002904190029041900290419002904eb009004eb009004eb009004eb
009004eb009004eb00900651001406510014065100140651001404a60008
04a6000804a600080429001f0429001f0429001f04d0000006cc00000548
003e04d0000004ee00980417009804d00000048600980429001f05120098
0549005c0250009804f40098047afffb06280098050c0098043a004c054a
005c05000098048c0098041e00430419002904a600080583004c04a20012
056f004c055c005c04d00000048600980512009802500090054a005c04a6
0008055c005c0250ffde04a600080486009805d500290417009804ca005c
047b004a025000980250ffde03d00029072c0003074b0098058a0029047b
00980455001904fc009804d0000004ed009804ee00980417009804e1000f
048600980699002304560046050c0098050c0098047b009804b500010628
009805120098054a005c05000098048c009804c7005c0419002904550019
059e004c04a200120507009804bf006406c2009806d6009805c0002806b2
009804bb009804cb004906e1009804f600090364009802aa003502aa005b
02aa001902aa002802aa001202aa002202aa003502aa003302aa002c02aa
002f02aa003502aa002f02aa003505a3005005a3005005a3005005a30050
05a3005005a3005005a3005005a3005005a3005005a3005005a3005005d3
005905d3005905d3005905d3005905d3005905d3005905d3005905d30059
05d3005905d3005905d3005905d9009605d9009605d9009605d9009605d9
008c05d9008c05d9008c05d9008c05d9008c05d9008c05d9008c05d9008c
05d9008c0316003b0316003b031600390316003b031600310316003b0316
003b0316003b0316003b044dff890316003b0316003b0316003b02770082
0277000903070082032600820277fff90316003b0316003b031600390316
003b031600310316003b0316003b0316003b0598009904e3005404e30054
04e3005404e3005404e3005404e3005404e3005404e3005404e30054021d
ffbc04700082027700820277000903070082032600820277fff902500004
02500008037a000f0250000f04e3008a04e3008a04e3008a04e3008a04d6
0049047b004a04c7005c053d005c02aa001202aa002202aa003302aa002c
05a0002e04ed009d04ed009d069b002a04d5008505e30085023200a30232
00960232004e023200200232006702320031023200390232001e0232001e
023200420232001c023200250232002e023200170232000b0d6500460e32
00460000ffba0f6200460000ff640000ff9a0000ffb40000ff9c049e0034
047800300430ffba0430ffba049e0034047800300430ffba0430ffba0732
00400732004004deffba04deffba0376000a0376000a049e003404780030
0430ffba0430ffba01bcffcc01e0ff6801bcffe601e0ff8205280097046f
000a022cffba022cffba05280097046f000a022cffba022cffba05280097
046f000a022cffba022cffba039c0006039c0006039c0006039c0006067f
0044067f0045067f0044067f0045049e0034047800300430ffba0430ffba
073200400732004004deffba04deffba073200400732004004deffba04de
ffba045400290454002902e2ffba02e2ffba044dffcb04a5ffcc043effd5
04a2ffcd07b9003205ef003207230032051700350bdefeed0000fe2c0000
fffc0000006b000000730000006b05280097046f000a022cffba022cffba
060e00290708002902e2ffba0456ffba060e00290708002902e2ffba0456
ffba05280097046f000a022cffba022cffba05280097046f000a022cffba
022cffba05280097046f000a022cffba022cffba0000fff50454009603b3
000a04e3002c04ae001405c000990513008c05c7009904e3006a0a660044
0476001f0556001c0826002006e9001906780095066b008b07f9000406e9
fffb05c700990476008e08dc002007940019090500960753008805c00099
04d50088059f009c04e3009202aa001802aa001804da004e06b9008c041a
00180514005904da005305a300280538000006aa009105c70004061b009d
059a0041031dffe604e3005204010049018effe202e900000556004a04e3
001602390047079300ec0b3dffaa08d200000b4700380f6200440196ffba
0196ffba0196ffba01e0000201a8003201a800460196ffba01a8001a0251
003a01a8002901a800460196ffba01a800480196ffba01a800290196ffba
01a800460196ffba01a8006e0196ffba01f4006501f4001601f4001601f4
001101f4ffd2022e008d01f400430199004602bf004d02bf005504c3000a
000100000f9402d2003c0094000600020010002f00560000073c02c20005
00020000000e00ae0000000300000000006a000000000003000000070064
006a0001000000000000003500ce00010000000000030013010300010000
000000040013011600010000000000060013012900010000000000070031
013c00030000040900010018016d0003000004090002000e018500030000
04090003002601930003000004090004002601b900030000040900060026
01df0003000104090000006a020500030001040900070062026f00a90020
003200300031003200200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e002e
00200041006c006c00200052006900670068007400730020005200650073
00650072007600650064002e0041007200690061006c0020002000690073
00200061002000740072006100640065006d00610072006b0020006f0066
00200054006800650020004d006f006e006f007400790070006500200043
006f00720070006f0072006100740069006f006e002ea920323031322054
6865204d6f6e6f7479706520436f72706f726174696f6e2e20416c6c2052
69676874732052657365727665642e47504a5047412b417269616c2d426f
6c644d5447504a5047412b417269616c2d426f6c644d5447504a5047412b
417269616c2d426f6c644d54417269616c20697320612074726164656d61
726b206f6620546865204d6f6e6f7479706520436f72706f726174696f6e
2e00470050004a005000470041002b0041007200690061006c0052006500
670075006c0061007200470050004a005000470041002b00410072006900
61006c002d0042006f006c0064004d005400470050004a00500047004100
2b0041007200690061006c002d0042006f006c0064004d00540047005000
4a005000470041002b0041007200690061006c002d0042006f006c006400
4d005400a90020003200300031003200200054006800650020004d006f00
6e006f007400790070006500200043006f00720070006f00720061007400
69006f006e002e00200041006c006c002000520069006700680074007300
2000520065007300650072007600650064002e0041007200690061006c00
200069007300200061002000740072006100640065006d00610072006b00
20006f006600200054006800650020004d006f006e006f00740079007000
6500200043006f00720070006f0072006100740069006f006e002e00410c
005403af03af03af0235001d001f03ae03ad003c001f03adb3061d1f8041
0d03ac00af03ac0002001003ac002003ac00a003ac0003004003acb3070d
3240b803acb312143240b803acb2162b32b9ffc003acb23a3340b803acb3
2d943280bc03ab005f0033ffc003abb2553340b803abb340443240b803ab
b3333b3240b803abb32f313240b803abb2083340b803abb30714321f411a
03ab002f03ab0002000f03ab002f03ab004f03ab008f03ab009f03ab00bf
03ab0006001003ab00df03ab00ff03ab000303a803a2b2461f40b803a5b2
08330f411403a50001004003a500cf03a500ff03a50003002003a500af03
a500ef03a500ff03a50004ffc003a3b3090c3240b803a3b208330f411b03
a30001000f03a3001003a3008003a300af03a300cf03a30005006f03a300
9f03a300ff03a30003009f03a200af03a2000203a203a1b2101f10410a03
9e007f039e0002039a000f0101001fffc00398b310143240b80399b30f13
32404110039500500395000200b0034d00c0034d0002006f0391007f0391
0002ffc0034bb22d3132b9ffc0034bb30a0e32104110038b0020038b0080
038b000300a0038b00010020038b0040038b0002ffc0038bb313163240b8
0383b20f1132b9ffc0037bb2303432b9ffc0037bb3101832504114037800
010365036e0023001f037e036e001e001f0363036e001d001f0362036400
0d001fffc00340b30f1032804110033f0001033f03150029001f03410316
0032001f0344031a001b001fffc00375b20e1132b9ffc00375b2282a3241
0a034303180032001f030f030d0034001f03080307b2321f20bb03400001
00400388b3090b3240b80388b2101532bd038503070014001f03800307b2
171f0fbd030a002f030a0002ffc00354b3090d3290410c035400a0035400
02001f036e0001009f036e00010040036eb2090b3241110345031c001600
1f036b031d0015001f0346031e0015001f03a703a10046001f039db3261c
1fc0bb0393000100400392b3090d3240b8033eb2083340b8033eb30d0e32
c04109033e000100b0038e00c0038e0002ffc00390b32638320041260328
0030032800020020037f0030037f00020010038a0030038a0050038a006f
038a007f038a009f038a000600000389003003890002002f037a00700377
00900377009f037a0004ffc00315b20f1032b9ffc00315b2242832b90319
0318b2321f10bb031a0001ffc0031ab3090e3240b80318b2121332b9ffc0
0318b30c0e323fbd0373004f0373000200400374b31718326fbb032a0001
0040032cb3181b3240b80370b2090c32bd031703160032001fffc00316b2
0e1132bd031c031e0016001f031d031eb2151fb0411f031e0001000f031f
000102ca02d00015001f02d302d5000d001f02cf02d0000d001f02cb02d0
000d001f02cd02d0000d001f02ce02d0000d001fffc002d0b3090c3240b8
02d2b3090c32e0411c02e50001005f02dd009f02e5000202bb02c3003000
1f02da02b80032001f02d902b9003f001f02d802b80064001f02b902b800
33001f02bab221c81fb802b8b321c81f40b8039bb20d1632b9ffc002c3b2
2b2f32b9ffc002c3b21f2532b9ffc002c3b2171b32b9ffc002c3b2121632
412502c202c1001c001f02d702c10024001f02c102c00022001f02bf02c0
0018001f02c0027400c8001f02b50235003b001f02b40235003b001f02c4
02bc001e001f02b702b60038001f02b3b20ec81fb802b0b207c81fb802af
b206c81fb802aeb200c81fb802afb2502f1fbc02ae02ab001a001f02adb2
261a1fb802a8b326241f0fbb0235000102a50274b21d1f12410a02a10158
01f4001f02a000d801f4001f001202a2b237c81fb80290b2bc201fb90290
02904018374025402d40a6033025302d30a6032025202d203720a6204110
028e0005009f028b0001028b028b00370020028900300289004002890090
0289b20437b041fd027400c0027400020080027400a00274000200600274
007002740002000002740010027400020080027400f002740002003f0285
004f028500020090027e0090027f009002800090028100040090027a0090
027b0090027c0090027d000400900274009002750090027700030070027e
0070027f007002800070028100040070027a0070027b0070027c0070027d
000400700274007002750070027700030060027e0060027f006002800060
028100040060027a0060027b0060027c0060027d00040060027400600275
0060027700030050027e0050027f005002800050028100040050027a0050
027b0050027c0050027d000400500274005002750050027700030040027e
0040027f004002800040028100040040027a0040027b0040027c0040027d
000400400274004002750040027700030030027e0030027f003002800030
028100040030027a0030027b0030027c0030027d00040030027400300275
0030027700030020027e0020027f002002800020028100040020027a0020
027b0020027c0020027d000400200274002002750020027700030010027e
0010027f001002800010028100040010027a0010027b0010027c0010027d
0004001002740010027500100277000300e0027e00e0027f00e0028000e0
0281000400e0027a00e0027b00e0027c00e0027d000400e0027400e00275
00e00277b103d041c5027e00d0027f00d0028000d00281000400d0027a00
d0027b00d0027c00d0027d000400d0027400d0027500d002770003003002
7400400274000200c0027e00c0027f00c0028000c00281000400c0027a00
c0027b00c0027c00c0027d000400c0027400c0027500c00277000300b002
7e00b0027f00b0028000b00281000400b0027a00b0027b00b0027c00b002
7d000400b0027400b0027500b00277000300a0027e00a0027f00a0028000
a00281000400a0027a00a0027b00a0027c00a0027d000400a0027400a002
7500a0027700030090027e0090027f009002800090028100040090027a00
90027b0090027c0090027d00040090027400900275009002770003002002
7e0020027f002002800020028100040020027a0020027b0020027c002002
7d00040020027400200275002002770003028101580801001f0280012908
01001f027f00ec0801001f027e00d80801001f027d00b10801001f027c00
a60801001f027b00820801001f027a00370801001f027700260801001f02
7500200801001f0274001f0801b21f370f41160235004f0235005f023500
6f0235009f023500af023500bf0235000700af023500cf023500df023500
ff02354022040f074f079f07af07bf0705af07e007020f064f069f06af06
bf0605af06e0060220411b020d0001005f02350001008f02350001007f02
3500ef02350002002f0235003f02350002003f0234004f02340002023502
35023402344011ed20ef2a01cf2a01bf2a01af2a018f2a01410902470104
001e001f022000370201001f0158400c263e1fd8263e1f3726273e1fb802
8eb6ec171fb226361fb801bcb226361fb80129402b26361fec26361fb126
361fa626361f8226361f3726361f3226361f2d26361f2526361f1f26361f
37262a1fb801584022263e1fd8263e1fbc263e1f27263e1f21263e1f2026
3e1f3700161600000012110840b9020d01a6b3c50d0009b801bcb227281f
b801bbb227301fb801b8b2274f1fb801b7b227621f410901b60027010100
1f01b5002002ab001f01afb21fe41fb801adb21fe41fb801acb21fbb1fb8
01a8b21f341fb8015db2272e1fb8015bb227cd1f410d0155001f0401001f
0154001f0401001f0153001f0201001f0152b21f561fb80151b21f291fb8
012bb227261f410d012a00270125001f0129015800e4001f0125001f0401
001f0124b21fe41fb80123b21f3b1fb80122b21f391f410d010800270801
001f0106002d0101001f0105001f0101001f0103b31fbb1fefb901580401
400b1fed1f931fec1fe41feb1fb80201b21fd920b80401b21fcf25b80156
400a1fbc2d9e1fbb1f411fb2410a01580401001f00b101580401001f00b0
01580401b51fa625891f9bb901580125b61f991f2e1f8e2db80801b51f8d
1f291f89b901580401b21f8220b802ab40131f801f301f742de41f731f4a
1f611f521f5d25b802abb21f5c1fbc0801001f0059015802abb61f502589
1f491fb80125b21f4725b80401400b1f461f791f401f271f3920bc02ab00
1f003801580401b21f372dbc0125001f003201580125b61f2c1f341f2a25
b80801b21f5537b80111402a07f00790075b0742073b07230722071e071d
071408120810080e080c080a080808060804080208000814b8ffe0402b00
000100140610000001000604000001000410000001001002000001000200
000001000002010802004a00b013034b024b5342014bb0c063004b6220b0
f65323b8010a515ab005234201b0124b004b5442b0382b4bb807ff52b037
2b4bb007505b58b101018e59b0382bb00288b801005458b801ffb101018e
851bb0124358b10100858d1bb900010119858d5959001816763f183f123e
113946443e113946443e113946443e113946443e11394660443e11394660
442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b182b1db0964b53
58b0aa1d59b0324b5358b0ff1d594bb08153205c58b9020f020d4544b902
0e020d45445958b90470020f455258b9020f04704459594bb0e453205c58
b90020020e4544b90027020e45445958b908420020455258b90020084244
59594bb8012553205c58b90026020f4544b90021020f45445958b90a0d00
26455258b900260a0d4459594bb8040153205c58b1d8204544b120204544
5958b9250000d8455258b900d825004459594bb8040153205c58b9015800
264544b1262645445958b923200158455258b9015823204459594bb02953
205c58b11f1f4544b12d1f45445958b9010d001f455258b9001f010d4459
594bb02f53205c58b11f1f4544b1251f45445958b90135001f455258b900
1f01354459594bb8030153205c58b11f1f4544b11f1f45445958b9142800
1f455258b9001f14284459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b01b331757ec34565234560
23456560234560b08b766818b080622020b17e754565234520b003266062
636820b003266165b075236544b07e234420b131c34565234520b0032660
62636820b003266165b0c3236544b0312344b100c3455458b1c3406544b2
3140314523614459b33f3c5841456523456023456560234560b089766818
b080622020b1583c4565234520b003266062636820b003266165b03c2365
44b058234420b13f414565234520b003266062636820b003266165b04123
6544b03f2344b10041455458b141406544b23f403f452361445945695342
014b5058b108004259435c58b108004259b3020b0a124358601b21594216
10703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d2342
b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b01243
58b9187e3b211bba01a80400000b2b59b0102342b0112342002b2b2b2b2b
2b2b2b00b01243584bb035514bb021535a58b1262645b040614459592b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b737373737345b0406144180045
69444569447373737473737374737473742b2b2b2b2b2b2b2b2b2b2b2b00
737373737373737373737373737373737373737373737474747474747474
747474747474747474747474747575757374757575752b7300004bb02a53
4bb036515a58b1070745b040604459004bb02e534bb036515a58b1030345
b0406044b1090945b8ffc06044592b4569440174007373732b4569442b01
2b435c58400a0006000702a006a00702b9ffc00274b31a1d326fbd027700
7f02770002ffc00277b22f3132b9ffc00277b322253240b80274b32f3532
40b80274b3282a3240b80274b21a2132b8ffc0b3371a1d32b8ffc0b3251a
1d32b8ffc040112d1a1d329025902d9037a025a02da03706b8ffc0b6a61a
1d321fa61fb8028eb22fa60300742b732b2b2b2b2b2b2b2b742b73745900
2b2b435c58b9ffc002a1b21c1d32b9ffc002a0b21c1d322b2b592b73012b
2b2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b
73742b2b2b2b2b2b2b2b73732b2b2b2b2b2b732b732b2b2b742b2b2b7373
7373732b73732b2b2b732b2b002b2b2b2b7374732b732b2b2b2b752b2b2b
2b2b2b2b2b752b2b2b2b2b732b2b2b2b7374752b2b7373732b2b2b732b73
7374752b2b7374752b2b7374752b2b2b2b2b2b2b2b2b2b2b2b7475002b2b
2b4569442b00000000>]def 
/GlyphDirectory 16 dict def
CIDFontName currentdict end /CIDFont defineresource pop
ct_GlyphDirProcs begin
/ZLQBAA+Arial-BoldMT 1 GetGlyphDirectory
525 <000100620000060805d3001d00b14065a805a709d902d905d509d60cd611
d91be902e50c0a670c64116b1b8606890896069a0807081507171a151517
68020510100d250e0e001c1c01250008162d07030c0a02040f101f104f10
6f109f100510100a001c101c401c601c901c051c1c040d0d13270ab8ffc0
b3090b340ab8028c400d1f010119270f041f0430040304b9028c001e10f4
5ded332f10f62bed332f11332f5d11332f5d11331133003fed3ffd322f10
3c10fd322f3130015d5d5d33352100111000212000111001211521353612
353402232202151412171562011cfefb0176014601430178fefb011dfd61
a9adc7c3c2c8ada9f70112013c0114017afe88feeafec4feeef7ec3f011a
b8bd011cfee6bfb9fee73fec> |
0 <00020100000005000500000300070042b40201fe0607b8023f4013000504
fe03000a0704fe010019080605fe0203bc0126000901b0011800182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000> |
!
end
/ZLQBAA+Arial-BoldMT-Identity-H /Identity-H 0 [/ZLQBAA+Arial-BoldMT] ct_ComposeFont pop
end end
%ADOEndSubsetFont
/XGDLXC+Arial-BoldMT /ZLQBAA+Arial-BoldMT-Identity-H findfont ct_VMDictPut
XGDLXC+Arial-BoldMT [0 -9.7495 -9.7495 0 0 0 ]msf
52.1893 36.0533 mo
(\002\015)sh
58.9091 56.815 mo
56.6291 60.595 li
53.6291 53.815 li
49.9091 60.595 li
46.9091 53.815 li
43.1291 60.595 li
40.1291 53.815 li
38.6291 56.815 li
@
58.9091 56.815 mo
65.6291 56.815 li
@
38.6291 56.815 mo
31.9091 56.815 li
@
112.909 191.815 mo
112.909 178.315 li
@
115.129 189.595 mo
115.129 180.595 li
@
117.409 187.315 mo
117.409 182.815 li
@
112.909 185.095 mo
106.129 185.095 li
@
112.909 63.595 mo
119.629 56.815 li
112.909 50.095 li
112.909 63.595 li
cp
@
112.909 56.815 mo
106.129 56.815 li
@
72.3491 1.375 mo
71.5691 1.375 70.9091 2.035 70.9091 2.875 cv
70.9091 3.71503 71.5691 4.315 72.3491 4.315 cv
73.1891 4.315 73.8491 3.71503 73.8491 2.875 cv
73.8491 2.035 73.1891 1.375 72.3491 1.375 cv
cp
0 .993988 1 0 cmyk
ef
72.3491 1.375 mo
71.5691 1.375 70.9091 2.035 70.9091 2.875 cv
70.9091 3.71503 71.5691 4.315 72.3491 4.315 cv
73.1891 4.315 73.8491 3.71503 73.8491 2.875 cv
73.8491 2.035 73.1891 1.375 72.3491 1.375 cv
cp
@
72.3491 55.375 mo
71.5691 55.375 70.9091 56.035 70.9091 56.875 cv
70.9091 57.715 71.5691 58.315 72.3491 58.315 cv
73.1891 58.315 73.8491 57.715 73.8491 56.875 cv
73.8491 56.035 73.1891 55.375 72.3491 55.375 cv
cp
ef
72.3491 55.375 mo
71.5691 55.375 70.9091 56.035 70.9091 56.875 cv
70.9091 57.715 71.5691 58.315 72.3491 58.315 cv
73.1891 58.315 73.8491 57.715 73.8491 56.875 cv
73.8491 56.035 73.1891 55.375 72.3491 55.375 cv
cp
@
65.6291 56.815 mo
72.4091 56.815 li
72.4091 63.595 li
@
1 /0 /CSD get_res sepcs
1 sep
XGDLXA+Arial-BoldMT*1 [0 -9.7495 -9.7495 0 0 0 ]msf
41.6891 179.816 mo
(R1)
[-7.03914 0 ]ysh
52.1893 179.816 mo
(1k)
[-5.42072 0 ]ysh
XGDLXC+Arial-BoldMT [0 -9.7495 -9.7495 0 0 0 ]msf
52.1893 168.974 mo
(\002\015)sh
38.6291 185.095 mo
40.9091 181.315 li
43.9091 188.095 li
47.6291 181.315 li
50.6291 188.095 li
54.4091 181.315 li
57.4091 188.095 li
58.9091 185.095 li
@
38.6291 185.095 mo
31.9091 185.095 li
@
58.9091 185.095 mo
65.6291 185.095 li
@
25.1291 185.095 mo
31.9091 185.095 li
0 .993988 1 0 cmyk
@
65.6291 185.095 mo
72.4091 185.095 li
72.4091 117.595 li
@
106.129 56.815 mo
99.4091 56.815 li
99.4091 63.595 li
@
99.3491 153.655 mo
98.0891 153.655 97.1291 154.675 97.1291 155.875 cv
97.1291 157.135 98.0891 158.095 99.3491 158.095 cv
100.549 158.095 101.569 157.135 101.569 155.875 cv
101.569 154.675 100.549 153.655 99.3491 153.655 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
99.3491 131.155 mo
98.0891 131.155 97.1291 132.175 97.1291 133.375 cv
97.1291 134.635 98.0891 135.595 99.3491 135.595 cv
100.549 135.595 101.569 134.635 101.569 133.375 cv
101.569 132.175 100.549 131.155 99.3491 131.155 cv
cp
@
99.4091 153.595 mo
105.409 135.595 li
@
102.409 144.595 mo
104.629 145.315 li
100.129 151.315 li
@
%ADOBeginSubsetFont: OQOAAA+Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XGDLXA+Arial-BoldMT gcheck setglobal} if
2 2612 45 <00010023ffe703cd05ba0012005a40246908a70d0254096609690d691069
117a108910070a480b810f2d07090100020012200102b8028b4012701401
301401140bef1f0a010a1913fd75182b4e10f45d4ded4d107171f63c4dfd
3c003f3c3ffdf4e43130005d015d01211114070606232226272516171633
32363502a60127202be2b9d9ea01011705203062635205bafc60b662809b
f3eb207e344f71b2>XGDLXA+Arial-BoldMT AddT42Char 
XGDLXA+Arial-BoldMT /CharStrings get begin
/J 45 def
end
XGDLXA+Arial-BoldMT /Encoding get
dup 74 /J put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/XGDLXA+Arial-BoldMT*1 
[48{/.notdef}rp /zero /one /two /.notdef /four 14{/.notdef}rp /C 
6{/.notdef}rp /J 7{/.notdef}rp /R 2{/.notdef}rp /U /V 20{/.notdef}rp 
/k 148{/.notdef}rp]
XGDLXA+Arial-BoldMT nf
XGDLXA+Arial-BoldMT*1 [0 -9.7495 -9.7495 0 0 0 ]msf
94.1891 149.816 mo
(J1)
[-5.42072 0 ]ysh
99.4091 158.095 mo
99.4091 164.815 li
@
99.4091 131.095 mo
99.4091 124.315 li
@
99.4091 164.815 mo
99.4091 185.095 li
106.129 185.095 li
0 .993988 1 0 cmyk
@
99.4091 124.315 mo
99.4091 117.595 li
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: OQOAAA+Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XGDLXA+Arial-BoldMT gcheck setglobal} if
2 108 17 <00010093000001ac01190003002440150238000a02260f001f0020003000
040019046776182b4e10f45d4dfd003f4ded3130331121119301190119fe
e700>XGDLXA+Arial-BoldMT AddT42Char 
2 982 22 <0001004dffe7041b05c0002900d940328715c915027b1c8b1c02a603a905
a714b603ba05b614da18dd19081614018d168d1702210a0d000401171316
211f0d100c0ab80124400c4f0d01400d8f0d020d0d0116b80102400f1f13
2f1302134012163413a61b0501b80156b5100420040204b8ffc040321216
3404a6270db00cc00c020c0c1610d87f1f8f1f9f1faf1fbf1f051fe007d8
4f2401241a2b16d8177701d800192ad3c2182b4e10f44dedf4ed4e10f671
4dedf45ded11392f5d003ffd2b71e43ffd2b71e411392f5d71ed01111239
1139001112391112391112395d313001715d5d005d132516163332363534
2623220737163635342623220607253e0233321716151407161615140023
22244d01100d725157777252364b1f7278584948660bfefd1b6dc379cf7d
67d37e97fee6d2c7fefa018521686e84706a7c15e50369574a5864602c85
9f5b846c88c1731bbc85c1fef0e5>XGDLXA+Arial-BoldMT AddT42Char 
2 2052 39 <000200940000056105ba0010001f007f40332805280a47176504650c052a
173917481659166816053917361b871b9905960b051f1125010002131225
0f10081927af070107b8ffc0b3090b3407b8028c40138021012021302102
2111122000201030100210b8028bb3203153182b4e10f45d3c4dfd3c4d10
5d71f62b714ded003f3cfd3c3f3cfd3c3130005d71015d13213217161612
1514070607060706232101113332373e023534262627262394021db76081
b8602d37664d8362a4fdd30128dd7c37485f3c3c6c533eb505ba1c26c2fe
e7ceb583a0634b2a1f04c2fc350e1256c5aaaab666120e00>XGDLXA+Arial-BoldMT AddT42Char 
XGDLXA+Arial-BoldMT /CharStrings get begin
/period 17 def
/three 22 def
/D 39 def
end
XGDLXA+Arial-BoldMT /Encoding get
dup 46 /period put
dup 51 /three put
dup 68 /D put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/XGDLXA+Arial-BoldMT*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
14{/.notdef}rp /C /D 5{/.notdef}rp /J 7{/.notdef}rp /R 2{/.notdef}rp 
/U /V 20{/.notdef}rp /k 148{/.notdef}rp]
XGDLXA+Arial-BoldMT nf
XGDLXA+Arial-BoldMT*1 [0 -9.7495 -9.7495 0 0 0 ]msf
8.7491 66.5955 mo
(VDD)
[-6.50298 -7.03915 0 ]ysh
22.2522 82.3117 mo
(3.3V)
[-5.42072 -2.71036 -5.42073 0 ]ysh
.06 lw
11.6891 70.315 mo
11.6891 43.315 li
@
.75 lw
11.6891 56.815 mo
25.1291 56.815 li
@
25.1291 56.815 mo
31.9091 56.815 li
0 .993988 1 0 cmyk
@
72.4091 2.815 mo
72.4091 56.815 li
@
%ADOBeginSubsetFont: OQOAAA+Arial-BoldMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal XGDLXA+Arial-BoldMT gcheck setglobal} if
2 6906 82 <00020052ffe8049a043e000d001900974048e801e708f713f71504c702e8
05021219051909025910561356165918970298069808970cb809d502db05
dc09d50ce705e706e80d10a708cb02cc06c308c60c057508890684080311
b80274b20a0b17b80274401404071439071a601b701b021b0e2100191a58
41182b4e10f44ded4e1071f64ded003fed3fed313000715d015d71435840
09691066126616691804015d59005d015d13341236333200151400232224
26251416333236353426232206528afd9cf10134fec9ec92fef78a012096
6e6e95956e6e9602228c01068afec7eff1fec384ffa89ea8a8a09ca8a800
>XGDLXA+Arial-BoldMT AddT42Char 
2 7398 87 <0001001fffe80291059d001900cd402920002001230a290f3a0e4a0e590f
07191500180316150017121314011712021401180309070a070c18b80101
400f0017a017b017036017a017c0170317b80104b2150114b80274b30015
0607b80274400e0c0b092f0a2f00002f015f010201b80104402818032617
1255153f149f14af1403601480149014d014f01405001410142014301404
14191a78a0182b4e10f45d71724bb037534bb03b515a58b90014ffc03859
3c4dfc3cfd3cf45d3c10f419e400183fed3f3cfd3c10f45d71e411123911
330f0f0f0f3130015d011523111416163332371706232226262726351123
3533352511027ac00b271c274a18627c4c7a390b098181011a0426e0fe54
822b1c1bda2a335145319501cfe0d3a4fe89>XGDLXA+Arial-BoldMT AddT42Char 
2 7686 88 <0001008dffe8045304260016009c401757116711960503090619063c023c
114b024b11e702070fb802744011040b16000a1514140a09061314261515
00b80129400e1640202434af1601ff1601161a18b8ffc040162224349018
a018027018f01802ef1801180a0b260908b8ffc0400f202434a00801f008
010819173f3c182b4e10f471722b3c4dfd3c4e105d71722bf671722b4ded
3c10fd3c003f3c3c103c3f3c3fed3130005d015d21350606232226263511
21111416163332363635112111034e3abd696baa4c01191f523f48722a01
199f55625eaa9602a0fe18e0653b4f75e401c0fbda00>XGDLXA+Arial-BoldMT AddT42Char 
XGDLXA+Arial-BoldMT /CharStrings get begin
/o 82 def
/t 87 def
/u 88 def
end
XGDLXA+Arial-BoldMT /Encoding get
dup 111 /o put
dup 116 /t put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/XGDLXA+Arial-BoldMT*1 
[46{/.notdef}rp /period /.notdef /zero /one /two /three /four 
14{/.notdef}rp /C /D 5{/.notdef}rp /J 7{/.notdef}rp /R 2{/.notdef}rp 
/U /V 20{/.notdef}rp /k 3{/.notdef}rp /o 4{/.notdef}rp /t 
/u 138{/.notdef}rp]
XGDLXA+Arial-BoldMT nf
XGDLXA+Arial-BoldMT*1 [0 -9.7495 -9.7495 0 0 0 ]msf
68.6891 53.8155 mo
(out)
[-5.95688 -5.95688 0 ]ysh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/XGDLXC+Arial-BoldMT-Identity-H uf
/XGDLXC+Arial-BoldMT /CIDFont ur
/XGDLXA+Arial-BoldMT*1 uf
/XGDLXA+Arial-BoldMT uf
/OQOAAA+Arial-BoldMT uf
/XGDLXB+CourierNewPSMT*1 uf
/XGDLXB+CourierNewPSMT uf
/CourierNewPSMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
